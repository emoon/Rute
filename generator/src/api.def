//
// Notes about function modifiers:
//
// [event] = Something the requires a virtual override in the Qt case. We handle this separately as we
//           need to generate the code a bit differently compared to events
//           Also events are not inharited.
// [callback] = Used func Signals/Slots.
// [manual]  = This function needs to be manually implemented on the C++ side
//
// The idea though is that this looks like the same thing for the user of the API.
//

Rect {
    i32 x,
    i32 y,
    i32 width,
    i32 height,
}

#[traits(PaintDevice, WidgetType)]
Widget {
    show(),
    resize(i32 width, i32 height),
    [event] paint_event(&PaintEvent event),
}

PushButton : Widget {
    [callback] released(),
    set_text(String text),
    set_flat(bool flat),
}

// Sliders

Slider : Widget {
    [callback] value_changed(i32 value),
}

MainWindow : Widget {
    is_animated() -> bool,
    set_central_widget(&WidgetType widget),
}

#[attributes(ManualCreate)]
Application {
	set_style(String style),
	exec(),
}

// No create on this as its a event only
#[attributes(NoCreate)]
PaintEvent {
	rect() -> Rect,
}

Painter {
    draw_line(i32 x1, i32 y1, i32 x2, i32 y2),
}


