// This file is auto-generated by rute_gen. DO NOT EDIT!
#pragma once

#include <stdint.h>
#include <stdbool.h>

#include "../rute_base.h"

#ifdef __cplusplus
extern "C" {
#endif
#include "brush_ffi.h"
#include "font_ffi.h"
#include "font_info_ffi.h"
#include "paint_device_ffi.h"
#include "paint_engine_ffi.h"
#include "pen_ffi.h"
#include "point_ffi.h"
#include "rect_ffi.h"
#include "rect_f_ffi.h"
#include "region_ffi.h"
#include "transform_ffi.h"

struct RUPainterFuncs;
struct RUPainter;

typedef struct RUPainterFuncs {
    void (*destroy)(struct RUBase* self);
    void (*qt_check_for_qgadget_macro)(struct RUBase* self_c);
    struct RUPaintDevice (*device)(struct RUBase* self_c);
    bool (*begin)(struct RUBase* self_c, struct RUBase* arg0);
    bool (*end)(struct RUBase* self_c);
    bool (*is_active)(struct RUBase* self_c);
    void (*init_from)(struct RUBase* self_c, struct RUBase* device);
    void (*set_composition_mode)(struct RUBase* self_c, int mode);
    int (*composition_mode)(struct RUBase* self_c);
    struct RUFont (*font)(struct RUBase* self_c);
    void (*set_font)(struct RUBase* self_c, struct RUBase* f);
    struct RUFontInfo (*font_info)(struct RUBase* self_c);
    void (*set_pen)(struct RUBase* self_c, struct RUBase* color);
    void (*set_pen)(struct RUBase* self_c, struct RUBase* pen);
    void (*set_pen)(struct RUBase* self_c, int style);
    struct RUPen (*pen)(struct RUBase* self_c);
    void (*set_brush)(struct RUBase* self_c, struct RUBase* brush);
    void (*set_brush)(struct RUBase* self_c, int style);
    struct RUBrush (*brush)(struct RUBase* self_c);
    void (*set_background_mode)(struct RUBase* self_c, int mode);
    int (*background_mode)(struct RUBase* self_c);
    struct RUPoint (*brush_origin)(struct RUBase* self_c);
    void (*set_brush_origin)(struct RUBase* self_c, int x, int y);
    void (*set_brush_origin)(struct RUBase* self_c, struct RUBase* arg0);
    void (*set_brush_origin)(struct RUBase* self_c, struct RUBase* arg0);
    void (*set_background)(struct RUBase* self_c, struct RUBase* bg);
    struct RUBrush (*background)(struct RUBase* self_c);
    float (*opacity)(struct RUBase* self_c);
    void (*set_opacity)(struct RUBase* self_c, float opacity);
    struct RURegion (*clip_region)(struct RUBase* self_c);
    void (*set_clip_rect)(struct RUBase* self_c, struct RUBase* arg0, int op);
    void (*set_clip_rect)(struct RUBase* self_c, struct RUBase* arg0, int op);
    void (*set_clip_rect)(struct RUBase* self_c, int x, int y, int w, int h, int op);
    void (*set_clip_region)(struct RUBase* self_c, struct RUBase* arg0, int op);
    void (*set_clip_path)(struct RUBase* self_c, struct RUBase* path, int op);
    void (*set_clipping)(struct RUBase* self_c, bool enable);
    bool (*has_clipping)(struct RUBase* self_c);
    struct RURectF (*clip_bounding_rect)(struct RUBase* self_c);
    void (*save)(struct RUBase* self_c);
    void (*restore)(struct RUBase* self_c);
    void (*set_transform)(struct RUBase* self_c, struct RUBase* transform, bool combine);
    struct RUTransform (*device_transform)(struct RUBase* self_c);
    void (*reset_transform)(struct RUBase* self_c);
    void (*set_world_transform)(struct RUBase* self_c, struct RUBase* matrix, bool combine);
    struct RUTransform (*world_transform)(struct RUBase* self_c);
    struct RUTransform (*combined_transform)(struct RUBase* self_c);
    void (*scale)(struct RUBase* self_c, float sx, float sy);
    void (*shear)(struct RUBase* self_c, float sh, float sv);
    void (*rotate)(struct RUBase* self_c, float a);
    struct RURect (*window)(struct RUBase* self_c);
    void (*set_window)(struct RUBase* self_c, struct RUBase* window);
    void (*set_window)(struct RUBase* self_c, int x, int y, int w, int h);
    struct RURect (*viewport)(struct RUBase* self_c);
    void (*set_viewport)(struct RUBase* self_c, struct RUBase* viewport);
    void (*set_viewport)(struct RUBase* self_c, int x, int y, int w, int h);
    void (*set_view_transform_enabled)(struct RUBase* self_c, bool enable);
    bool (*view_transform_enabled)(struct RUBase* self_c);
    void (*draw_point)(struct RUBase* self_c, struct RUBase* pt);
    void (*draw_point)(struct RUBase* self_c, struct RUBase* p);
    void (*draw_point)(struct RUBase* self_c, int x, int y);
    void (*draw_points)(struct RUBase* self_c, struct RUBase* points, int point_count);
    void (*draw_points)(struct RUBase* self_c, struct RUBase* points);
    void (*draw_points)(struct RUBase* self_c, struct RUBase* points, int point_count);
    void (*draw_points)(struct RUBase* self_c, struct RUBase* points);
    void (*draw_line)(struct RUBase* self_c, struct RUBase* line);
    void (*draw_line)(struct RUBase* self_c, struct RUBase* line);
    void (*draw_line)(struct RUBase* self_c, int x1, int y1, int x2, int y2);
    void (*draw_line)(struct RUBase* self_c, struct RUBase* p1, struct RUBase* p2);
    void (*draw_line)(struct RUBase* self_c, struct RUBase* p1, struct RUBase* p2);
    void (*draw_lines)(struct RUBase* self_c, struct RUBase* lines, int line_count);
    void (*draw_lines)(struct RUBase* self_c, struct RUBase* point_pairs, int line_count);
    void (*draw_lines)(struct RUBase* self_c, struct RUBase* lines, int line_count);
    void (*draw_lines)(struct RUBase* self_c, struct RUBase* point_pairs, int line_count);
    void (*draw_rect)(struct RUBase* self_c, struct RUBase* rect);
    void (*draw_rect)(struct RUBase* self_c, int x1, int y1, int w, int h);
    void (*draw_rect)(struct RUBase* self_c, struct RUBase* rect);
    void (*draw_rects)(struct RUBase* self_c, struct RUBase* rects, int rect_count);
    void (*draw_rects)(struct RUBase* self_c, struct RUBase* rects, int rect_count);
    void (*draw_ellipse)(struct RUBase* self_c, struct RUBase* r);
    void (*draw_ellipse)(struct RUBase* self_c, struct RUBase* r);
    void (*draw_ellipse)(struct RUBase* self_c, int x, int y, int w, int h);
    void (*draw_ellipse)(struct RUBase* self_c, struct RUBase* center, float rx, float ry);
    void (*draw_ellipse)(struct RUBase* self_c, struct RUBase* center, int rx, int ry);
    void (*draw_polyline)(struct RUBase* self_c, struct RUBase* points, int point_count);
    void (*draw_polyline)(struct RUBase* self_c, struct RUBase* polyline);
    void (*draw_polyline)(struct RUBase* self_c, struct RUBase* points, int point_count);
    void (*draw_polyline)(struct RUBase* self_c, struct RUBase* polygon);
    void (*draw_polygon)(struct RUBase* self_c, struct RUBase* points, int point_count, int fill_rule);
    void (*draw_polygon)(struct RUBase* self_c, struct RUBase* polygon, int fill_rule);
    void (*draw_polygon)(struct RUBase* self_c, struct RUBase* points, int point_count, int fill_rule);
    void (*draw_polygon)(struct RUBase* self_c, struct RUBase* polygon, int fill_rule);
    void (*draw_convex_polygon)(struct RUBase* self_c, struct RUBase* points, int point_count);
    void (*draw_convex_polygon)(struct RUBase* self_c, struct RUBase* polygon);
    void (*draw_convex_polygon)(struct RUBase* self_c, struct RUBase* points, int point_count);
    void (*draw_convex_polygon)(struct RUBase* self_c, struct RUBase* polygon);
    void (*draw_arc)(struct RUBase* self_c, struct RUBase* rect, int a, int alen);
    void (*draw_arc)(struct RUBase* self_c, struct RUBase* arg0, int a, int alen);
    void (*draw_arc)(struct RUBase* self_c, int x, int y, int w, int h, int a, int alen);
    void (*draw_pie)(struct RUBase* self_c, struct RUBase* rect, int a, int alen);
    void (*draw_pie)(struct RUBase* self_c, int x, int y, int w, int h, int a, int alen);
    void (*draw_pie)(struct RUBase* self_c, struct RUBase* arg0, int a, int alen);
    void (*draw_chord)(struct RUBase* self_c, struct RUBase* rect, int a, int alen);
    void (*draw_chord)(struct RUBase* self_c, int x, int y, int w, int h, int a, int alen);
    void (*draw_chord)(struct RUBase* self_c, struct RUBase* arg0, int a, int alen);
    void (*draw_rounded_rect)(struct RUBase* self_c, struct RUBase* rect, float x_radius, float y_radius, int mode);
    void (*draw_rounded_rect)(struct RUBase* self_c, int x, int y, int w, int h, float x_radius, float y_radius, int mode);
    void (*draw_rounded_rect)(struct RUBase* self_c, struct RUBase* rect, float x_radius, float y_radius, int mode);
    void (*draw_round_rect)(struct RUBase* self_c, struct RUBase* r, int xround, int yround);
    void (*draw_round_rect)(struct RUBase* self_c, int x, int y, int w, int h, int arg0, int arg1);
    void (*draw_round_rect)(struct RUBase* self_c, struct RUBase* r, int xround, int yround);
    void (*draw_tiled_pixmap)(struct RUBase* self_c, struct RUBase* rect, struct RUBase* pm, struct RUBase* offset);
    void (*draw_tiled_pixmap)(struct RUBase* self_c, int x, int y, int w, int h, struct RUBase* arg0, int sx, int sy);
    void (*draw_tiled_pixmap)(struct RUBase* self_c, struct RUBase* arg0, struct RUBase* arg1, struct RUBase* arg2);
    void (*draw_picture)(struct RUBase* self_c, struct RUBase* p, struct RUBase* picture);
    void (*draw_picture)(struct RUBase* self_c, int x, int y, struct RUBase* picture);
    void (*draw_picture)(struct RUBase* self_c, struct RUBase* p, struct RUBase* picture);
    void (*draw_pixmap)(struct RUBase* self_c, struct RUBase* target_rect, struct RUBase* pixmap, struct RUBase* source_rect);
    void (*draw_pixmap)(struct RUBase* self_c, struct RUBase* target_rect, struct RUBase* pixmap, struct RUBase* source_rect);
    void (*draw_pixmap)(struct RUBase* self_c, int x, int y, int w, int h, struct RUBase* pm, int sx, int sy, int sw, int sh);
    void (*draw_pixmap)(struct RUBase* self_c, int x, int y, struct RUBase* pm, int sx, int sy, int sw, int sh);
    void (*draw_pixmap)(struct RUBase* self_c, struct RUBase* p, struct RUBase* pm, struct RUBase* sr);
    void (*draw_pixmap)(struct RUBase* self_c, struct RUBase* p, struct RUBase* pm, struct RUBase* sr);
    void (*draw_pixmap)(struct RUBase* self_c, struct RUBase* p, struct RUBase* pm);
    void (*draw_pixmap)(struct RUBase* self_c, struct RUBase* p, struct RUBase* pm);
    void (*draw_pixmap)(struct RUBase* self_c, int x, int y, struct RUBase* pm);
    void (*draw_pixmap)(struct RUBase* self_c, struct RUBase* r, struct RUBase* pm);
    void (*draw_pixmap)(struct RUBase* self_c, int x, int y, int w, int h, struct RUBase* pm);
    void (*draw_pixmap_fragments)(struct RUBase* self_c, int fragments, int fragment_count, struct RUBase* pixmap, int hints);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* target_rect, struct RUBase* image, struct RUBase* source_rect, int flags);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* target_rect, struct RUBase* image, struct RUBase* source_rect, int flags);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* p, struct RUBase* image, struct RUBase* sr, int flags);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* p, struct RUBase* image, struct RUBase* sr, int flags);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* r, struct RUBase* image);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* r, struct RUBase* image);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* p, struct RUBase* image);
    void (*draw_image)(struct RUBase* self_c, struct RUBase* p, struct RUBase* image);
    void (*draw_image)(struct RUBase* self_c, int x, int y, struct RUBase* image, int sx, int sy, int sw, int sh, int flags);
    void (*set_layout_direction)(struct RUBase* self_c, int direction);
    int (*layout_direction)(struct RUBase* self_c);
    void (*draw_glyph_run)(struct RUBase* self_c, struct RUBase* position, struct RUBase* glyph_run);
    void (*draw_static_text)(struct RUBase* self_c, struct RUBase* top_left_position, struct RUBase* static_text);
    void (*draw_static_text)(struct RUBase* self_c, struct RUBase* top_left_position, struct RUBase* static_text);
    void (*draw_static_text)(struct RUBase* self_c, int left, int top, struct RUBase* static_text);
    void (*draw_text)(struct RUBase* self_c, struct RUBase* p, const char* s);
    void (*draw_text)(struct RUBase* self_c, struct RUBase* p, const char* s);
    void (*draw_text)(struct RUBase* self_c, int x, int y, const char* s);
    void (*draw_text)(struct RUBase* self_c, struct RUBase* p, const char* str, int tf, int justification_padding);
    void (*draw_text)(struct RUBase* self_c, struct RUBase* r, int flags, const char* text, struct RUBase* br);
    void (*draw_text)(struct RUBase* self_c, struct RUBase* r, int flags, const char* text, struct RUBase* br);
    void (*draw_text)(struct RUBase* self_c, int x, int y, int w, int h, int flags, const char* text, struct RUBase* br);
    void (*draw_text)(struct RUBase* self_c, struct RUBase* r, const char* text, struct RUBase* o);
    struct RURectF (*bounding_rect)(struct RUBase* self_c, struct RUBase* rect, int flags, const char* text);
    struct RURect (*bounding_rect)(struct RUBase* self_c, struct RUBase* rect, int flags, const char* text);
    struct RURect (*bounding_rect)(struct RUBase* self_c, int x, int y, int w, int h, int flags, const char* text);
    struct RURectF (*bounding_rect)(struct RUBase* self_c, struct RUBase* rect, const char* text, struct RUBase* o);
    void (*draw_text_item)(struct RUBase* self_c, struct RUBase* p, struct RUBase* ti);
    void (*draw_text_item)(struct RUBase* self_c, int x, int y, struct RUBase* ti);
    void (*draw_text_item)(struct RUBase* self_c, struct RUBase* p, struct RUBase* ti);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* arg0, struct RUBase* arg1);
    void (*fill_rect)(struct RUBase* self_c, int x, int y, int w, int h, struct RUBase* arg0);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* arg0, struct RUBase* arg1);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* arg0, struct RUBase* color);
    void (*fill_rect)(struct RUBase* self_c, int x, int y, int w, int h, struct RUBase* color);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* arg0, struct RUBase* color);
    void (*fill_rect)(struct RUBase* self_c, int x, int y, int w, int h, int c);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* r, int c);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* r, int c);
    void (*fill_rect)(struct RUBase* self_c, int x, int y, int w, int h, int style);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* r, int style);
    void (*fill_rect)(struct RUBase* self_c, struct RUBase* r, int style);
    void (*erase_rect)(struct RUBase* self_c, struct RUBase* arg0);
    void (*erase_rect)(struct RUBase* self_c, int x, int y, int w, int h);
    void (*erase_rect)(struct RUBase* self_c, struct RUBase* arg0);
    void (*set_render_hint)(struct RUBase* self_c, int hint, bool on);
    void (*set_render_hints)(struct RUBase* self_c, int hints, bool on);
    int (*render_hints)(struct RUBase* self_c);
    bool (*test_render_hint)(struct RUBase* self_c, int hint);
    struct RUPaintEngine (*paint_engine)(struct RUBase* self_c);
    void (*set_redirected)(struct RUBase* self_c, struct RUBase* device, struct RUBase* replacement, struct RUBase* offset);
    struct RUPaintDevice (*redirected)(struct RUBase* self_c, struct RUBase* device, struct RUBase* offset);
    void (*restore_redirected)(struct RUBase* self_c, struct RUBase* device);
    void (*begin_native_painting)(struct RUBase* self_c);
    void (*end_native_painting)(struct RUBase* self_c);
} RUPainterFuncs;

typedef struct RUPainterAllFuncs {
    struct RUPainterFuncs* painter_funcs;
} RUPainterAllFuncs;

typedef struct RUPainter {
    RUBase* qt_data;
    RUBase* host_data;
    struct RUPainterAllFuncs* all_funcs;
} RUPainter;

extern RUPainterFuncs s_painter_funcs;
extern RUPainterAllFuncs s_painter_all_funcs;

#ifdef __cplusplus
}
#endif
