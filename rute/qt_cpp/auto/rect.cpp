////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QRect>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool rect_is_null(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->isNull();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool rect_is_empty(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->isEmpty();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool rect_is_valid(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->isValid();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_left(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->left();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_top(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->top();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_right(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->right();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_bottom(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->bottom();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_x(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->x();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_y(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->y();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_left(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setLeft(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_top(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setTop(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_right(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setRight(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_bottom(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setBottom(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_x(struct RUBase* self_c, int x) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setX(x);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_y(struct RUBase* self_c, int y) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setY(y);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_move_left(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->moveLeft(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_move_top(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->moveTop(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_move_right(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->moveRight(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_move_bottom(struct RUBase* self_c, int pos) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->moveBottom(pos);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_move_to(struct RUBase* self_c, int x, int t) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->moveTo(x, t);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_width(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->width();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int rect_height(struct RUBase* self_c) {
    WRRect* qt_value = (WRRect*)self_c;
    auto ret_value = qt_value->height();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_width(struct RUBase* self_c, int w) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setWidth(w);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void rect_set_height(struct RUBase* self_c, int h) {
    WRRect* qt_value = (WRRect*)self_c;
    qt_value->setHeight(h);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RURect create_rect(
    struct RUBase* priv_data,
    RUDeleteCallback delete_callback,
    void* private_user_data)
{
    auto ctl = generic_create_func_with_delete<struct RURect, WRRect>(priv_data, delete_callback, private_user_data);
    ctl.all_funcs = &s_rect_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void destroy_rect(struct RUBase* priv_data) {
    destroy_generic<WRRect>(priv_data);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RURectFuncs s_rect_funcs = {
    destroy_rect,
    rect_is_null,
    rect_is_empty,
    rect_is_valid,
    rect_left,
    rect_top,
    rect_right,
    rect_bottom,
    rect_x,
    rect_y,
    rect_set_left,
    rect_set_top,
    rect_set_right,
    rect_set_bottom,
    rect_set_x,
    rect_set_y,
    rect_move_left,
    rect_move_top,
    rect_move_right,
    rect_move_bottom,
    rect_move_to,
    rect_width,
    rect_height,
    rect_set_width,
    rect_set_height,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RURectAllFuncs s_rect_all_funcs = {
    &s_rect_funcs,
};

