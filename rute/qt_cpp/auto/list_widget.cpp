////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QListWidget>
extern struct RUListWidgetFuncs s_list_widget_funcs;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_add_item(struct RUBase* self_c, const char* label) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    qt_value->addItem(QString::fromUtf8(label));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_clear(struct RUBase* self_c) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    qt_value->clear();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void set_list_widget_item_pressed_event(void* object, void* user_data, void* trampoline_func, void (*event)(void* self_c, struct RUBase* item) {
    QSlotWrapperself_ListWidgetItemType_void* wrap = new QSlotWrapperself_ListWidgetItemType_void(user_data, (self_ListWidgetItemType_void)trampoline_func, (void*)event);
    QObject* q_obj = (QObject*)object;
    QObject::connect(q_obj, SIGNAL(itemPressed(QListWidgetItemType*)), wrap, SLOT(method(QListWidgetItemType*)));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUListWidget create_list_widget(
    struct RUBase* priv_data,
    RUDeleteCallback delete_callback,
    void* private_user_data)
{
    auto ctl = create_widget_func<struct RUListWidget, WRListWidget>(priv_data, delete_callback, private_user_data);
    ctl.list_widget_funcs = &s_list_widget_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void destroy_list_widget(struct RUBase* priv_data) {
    destroy_generic<WRListWidget>(priv_data);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUListWidgetFuncs s_list_widget_funcs = {
    destroy_list_widget,
    list_widget_add_item,
    list_widget_clear,
    set_list_widget_item_pressed_event,
};

