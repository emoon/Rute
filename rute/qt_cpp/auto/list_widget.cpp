////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_manual.h"
#include <QListWidgetItem>
#include <QListWidget>
extern struct RUListWidgetItemFuncs s_list_widget_item_funcs;
extern struct RUListWidgetFuncs s_list_widget_funcs;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_text(struct RUBase* self_c, const char* text) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setText(QString::fromUtf8(text));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* list_widget_item_text(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->text();
    return q_string_to_const_char(&ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_clear(struct RUBase* self_c) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    qt_value->clear();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUListWidgetItem list_widget_current_item(struct RUBase* self_c) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    auto ret_value = qt_value->currentItem();
    RUregular ctl = s_current_item_template;
    ctl.qt_data = (struct RUBase*);
    ctl.host_data = s_host_data_map[ret_value];
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int list_widget_current_row(struct RUBase* self_c) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    auto ret_value = qt_value->currentRow();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_set_current_row(struct RUBase* self_c, int index) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    qt_value->setCurrentRow(index);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int list_widget_count(struct RUBase* self_c) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    auto ret_value = qt_value->count();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_set_drag_enabled(struct RUBase* self_c, bool state) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    qt_value->setDragEnabled(state);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_set_drop_indicator_shown(struct RUBase* self_c, bool state) {
    WRListWidget* qt_value = (WRListWidget*)self_c;

    qt_value->setDropIndicatorShown(state);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void set_list_widget_item_activated_event(void* object, void* user_data, void* trampoline_func, void (*event)(void* self_c, struct RUBase* item) {
    QSlotWrapperself_ListWidgetItem_void* wrap = new QSlotWrapperself_ListWidgetItem_void(user_data, (self_ListWidgetItem_void)trampoline_func, (void*)event);
    QObject* q_obj = (QObject*)object;
    QObject::connect(q_obj, SIGNAL(itemActivated(QListWidgetItem*)), wrap, SLOT(method(QListWidgetItem*)));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void set_list_widget_current_row_changed_event(void* object, void* user_data, void* trampoline_func, void (*event)(void* self_c, int row) {
    QSlotWrapperself_int_void* wrap = new QSlotWrapperself_int_void(user_data, (self_int_void)trampoline_func, (void*)event);
    QObject* q_obj = (QObject*)object;
    QObject::connect(q_obj, SIGNAL(currentRowChanged(int)), wrap, SLOT(method(int)));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUListWidgetItem create_list_widget_item(
    struct RUBase* priv_data,
    RUDeleteCallback delete_callback,
    void* private_user_data)
{
    auto ctl = generic_create_func_with_delete<struct RUListWidgetItem, WRListWidgetItem>(priv_data, delete_callback, private_user_data);
    ctl.list_widget_item_funcs = &s_list_widget_item_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void destroy_list_widget_item(struct RUBase* priv_data) {
    destroy_generic<WRListWidgetItem>(priv_data);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUListWidget create_list_widget(
    struct RUBase* priv_data,
    RUDeleteCallback delete_callback,
    void* private_user_data)
{
    auto ctl = create_widget_func<struct RUListWidget, WRListWidget>(priv_data, delete_callback, private_user_data);
    ctl.list_widget_funcs = &s_list_widget_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void destroy_list_widget(struct RUBase* priv_data) {
    destroy_generic<WRListWidget>(priv_data);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUListWidgetItemFuncs s_list_widget_item_funcs = {
    destroy_list_widget_item,
    list_widget_item_set_text,
    list_widget_item_text,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUListWidgetFuncs s_list_widget_funcs = {
    destroy_list_widget,
    list_widget_clear,
    list_widget_current_item,
    list_widget_current_row,
    list_widget_set_current_row,
    list_widget_count,
    list_widget_set_drag_enabled,
    list_widget_set_drop_indicator_shown,
    set_list_widget_item_activated_event,
    set_list_widget_current_row_changed_event,
};

