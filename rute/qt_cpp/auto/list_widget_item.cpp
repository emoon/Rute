////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QListWidgetItem>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUListWidget list_widget_item_list_widget(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->listWidget();
    struct RUListWidget ctl;
    ctl.qt_data = (struct RUBase*)ret_value;
    ctl.host_data = (struct RUBase*)s_host_data_lookup[(void*)ret_value];
    ctl.all_funcs = &s_list_widget_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_selected(struct RUBase* self_c, bool select) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setSelected(select);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool list_widget_item_is_selected(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->isSelected();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_hidden(struct RUBase* self_c, bool hide) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setHidden(hide);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool list_widget_item_is_hidden(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->isHidden();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* list_widget_item_text(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->text();
    return q_string_to_const_char(ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_text(struct RUBase* self_c, const char* text) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setText(QString::fromUtf8(text));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* list_widget_item_status_tip(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->statusTip();
    return q_string_to_const_char(ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_status_tip(struct RUBase* self_c, const char* status_tip) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setStatusTip(QString::fromUtf8(status_tip));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* list_widget_item_tool_tip(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->toolTip();
    return q_string_to_const_char(ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_tool_tip(struct RUBase* self_c, const char* tool_tip) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setToolTip(QString::fromUtf8(tool_tip));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* list_widget_item_whats_this(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->whatsThis();
    return q_string_to_const_char(ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_whats_this(struct RUBase* self_c, const char* whats_this) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setWhatsThis(QString::fromUtf8(whats_this));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int list_widget_item_text_alignment(struct RUBase* self_c) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    auto ret_value = qt_value->textAlignment();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void list_widget_item_set_text_alignment(struct RUBase* self_c, int alignment) {
    WRListWidgetItem* qt_value = (WRListWidgetItem*)self_c;

    qt_value->setTextAlignment(alignment);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUListWidgetItem create_list_widget_item(
    struct RUBase* priv_data,
    RUDeleteCallback delete_callback,
    void* private_user_data)
{
    auto ctl = generic_create_func_with_delete<struct RUListWidgetItem, WRListWidgetItem>(priv_data, delete_callback, private_user_data);
    ctl.all_funcs = &s_list_widget_item_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void destroy_list_widget_item(struct RUBase* priv_data) {
    destroy_generic<WRListWidgetItem>(priv_data);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUListWidgetItemFuncs s_list_widget_item_funcs = {
    destroy_list_widget_item,
    list_widget_item_list_widget,
    list_widget_item_set_selected,
    list_widget_item_is_selected,
    list_widget_item_set_hidden,
    list_widget_item_is_hidden,
    list_widget_item_text,
    list_widget_item_set_text,
    list_widget_item_status_tip,
    list_widget_item_set_status_tip,
    list_widget_item_tool_tip,
    list_widget_item_set_tool_tip,
    list_widget_item_whats_this,
    list_widget_item_set_whats_this,
    list_widget_item_text_alignment,
    list_widget_item_set_text_alignment,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUListWidgetItemAllFuncs s_list_widget_item_all_funcs = {
    &s_list_widget_item_funcs,
};

