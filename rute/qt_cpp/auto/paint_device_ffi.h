// This file is auto-generated by rute_gen. DO NOT EDIT!
#pragma once

#include <stdint.h>
#include <stdbool.h>

#include "../rute_base.h"

#ifdef __cplusplus
extern "C" {
#endif
#include "paint_device_ffi.h"
#include "paint_engine_ffi.h"
#include "painter_ffi.h"

struct RUPaintDeviceFuncs;
struct RUPaintDevice;

typedef struct RUPaintDeviceFuncs {
    void (*destroy)(struct RUBase* self);
    void (*set_dev_type)(void* object, void* user_data, void* wrapped_func, void (*event)(void*, void* self_c));
    void (*remove_dev_type)(void* object);
    bool (*painting_active)(struct RUBase* self_c);
    void (*set_paint_engine)(void* object, void* user_data, void* wrapped_func, void (*event)(void*, void* self_c));
    void (*remove_paint_engine)(void* object);
    int (*width)(struct RUBase* self_c);
    int (*height)(struct RUBase* self_c);
    int (*width_mm)(struct RUBase* self_c);
    int (*height_mm)(struct RUBase* self_c);
    int (*logical_dpi_x)(struct RUBase* self_c);
    int (*logical_dpi_y)(struct RUBase* self_c);
    int (*physical_dpi_x)(struct RUBase* self_c);
    int (*physical_dpi_y)(struct RUBase* self_c);
    int (*device_pixel_ratio)(struct RUBase* self_c);
    float (*device_pixel_ratio_f)(struct RUBase* self_c);
    int (*color_count)(struct RUBase* self_c);
    int (*depth)(struct RUBase* self_c);
    float (*device_pixel_ratio_f_scale)(struct RUBase* self_c);
    void (*set_init_painter)(void* object, void* user_data, void* wrapped_func, void (*event)(void*, void* self_c, struct RUBase* painter));
    void (*remove_init_painter)(void* object);
    void (*set_redirected)(void* object, void* user_data, void* wrapped_func, void (*event)(void*, void* self_c, struct RUBase* offset));
    void (*remove_redirected)(void* object);
    void (*set_shared_painter)(void* object, void* user_data, void* wrapped_func, void (*event)(void*, void* self_c));
    void (*remove_shared_painter)(void* object);
} RUPaintDeviceFuncs;

typedef struct RUPaintDeviceAllFuncs {
    struct RUPaintDeviceFuncs* paint_device_funcs;
} RUPaintDeviceAllFuncs;

typedef struct RUPaintDevice {
    RUBase* qt_data;
    RUBase* host_data;
    struct RUPaintDeviceAllFuncs* all_funcs;
} RUPaintDevice;

extern RUPaintDeviceFuncs s_paint_device_funcs;
extern RUPaintDeviceAllFuncs s_paint_device_all_funcs;

#ifdef __cplusplus
}
#endif
