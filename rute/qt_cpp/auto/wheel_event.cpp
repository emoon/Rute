////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QWheelEvent>
#include "wheel_event_ffi.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUPoint wheel_event_pixel_delta(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->pixelDelta();
    WRPoint* new_val = new WRPoint();
    *new_val = ret_value;
    struct RUPoint ctl;
    ctl.qt_data = (struct RUBase*)new_val;
    ctl.host_data = (struct RUBase*)s_host_data_lookup[(void*)new_val];
    ctl.all_funcs = &s_point_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUPoint wheel_event_angle_delta(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->angleDelta();
    WRPoint* new_val = new WRPoint();
    *new_val = ret_value;
    struct RUPoint ctl;
    ctl.qt_data = (struct RUBase*)new_val;
    ctl.host_data = (struct RUBase*)s_host_data_lookup[(void*)new_val];
    ctl.all_funcs = &s_point_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int wheel_event_delta(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->delta();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t wheel_event_orientation(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->orientation();
    return (uint32_t)ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUPoint wheel_event_pos(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->pos();
    WRPoint* new_val = new WRPoint();
    *new_val = ret_value;
    struct RUPoint ctl;
    ctl.qt_data = (struct RUBase*)new_val;
    ctl.host_data = (struct RUBase*)s_host_data_lookup[(void*)new_val];
    ctl.all_funcs = &s_point_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUPoint wheel_event_global_pos(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->globalPos();
    WRPoint* new_val = new WRPoint();
    *new_val = ret_value;
    struct RUPoint ctl;
    ctl.qt_data = (struct RUBase*)new_val;
    ctl.host_data = (struct RUBase*)s_host_data_lookup[(void*)new_val];
    ctl.all_funcs = &s_point_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int wheel_event_x(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->x();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int wheel_event_y(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->y();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int wheel_event_global_x(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->globalX();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int wheel_event_global_y(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->globalY();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUPointF wheel_event_pos_f(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->posF();
    WRPointF* new_val = new WRPointF();
    *new_val = ret_value;
    struct RUPointF ctl;
    ctl.qt_data = (struct RUBase*)new_val;
    ctl.host_data = (struct RUBase*)s_host_data_lookup[(void*)new_val];
    ctl.all_funcs = &s_point_f_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUPointF wheel_event_global_pos_f(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->globalPosF();
    WRPointF* new_val = new WRPointF();
    *new_val = ret_value;
    struct RUPointF ctl;
    ctl.qt_data = (struct RUBase*)new_val;
    ctl.host_data = (struct RUBase*)s_host_data_lookup[(void*)new_val];
    ctl.all_funcs = &s_point_f_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t wheel_event_buttons(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->buttons();
    return (uint32_t)ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t wheel_event_phase(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->phase();
    return (uint32_t)ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool wheel_event_inverted(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->inverted();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t wheel_event_source(struct RUBase* self_c) {
    QWheelEvent* qt_value = (QWheelEvent*)self_c;
    auto ret_value = qt_value->source();
    return (uint32_t)ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUWheelEventFuncs s_wheel_event_funcs = {
    wheel_event_pixel_delta,
    wheel_event_angle_delta,
    wheel_event_delta,
    wheel_event_orientation,
    wheel_event_pos,
    wheel_event_global_pos,
    wheel_event_x,
    wheel_event_y,
    wheel_event_global_x,
    wheel_event_global_y,
    wheel_event_pos_f,
    wheel_event_global_pos_f,
    wheel_event_buttons,
    wheel_event_phase,
    wheel_event_inverted,
    wheel_event_source,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUWheelEventAllFuncs s_wheel_event_all_funcs = {
    &s_event_funcs,
    &s_input_event_funcs,
    &s_wheel_event_funcs,
};

