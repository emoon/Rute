////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QKeyEvent>
#include "key_event_ffi.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int key_event_key(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->key();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool key_event_matches(struct RUBase* self_c, int key) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->matches((QKeySequence::StandardKey)s_standard_key_lookup[key]);
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int key_event_modifiers(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->modifiers();
    return s_keyboard_modifiers_lookup[(int)ret_value];
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* key_event_text(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->text();
    return q_string_to_const_char(ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool key_event_is_auto_repeat(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->isAutoRepeat();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int key_event_count(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->count();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t key_event_native_scan_code(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->nativeScanCode();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t key_event_native_virtual_key(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->nativeVirtualKey();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t key_event_native_modifiers(struct RUBase* self_c) {
    QKeyEvent* qt_value = (QKeyEvent*)self_c;
    auto ret_value = qt_value->nativeModifiers();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUKeyEventFuncs s_key_event_funcs = {
    key_event_key,
    key_event_matches,
    key_event_modifiers,
    key_event_text,
    key_event_is_auto_repeat,
    key_event_count,
    key_event_native_scan_code,
    key_event_native_virtual_key,
    key_event_native_modifiers,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUKeyEventAllFuncs s_key_event_all_funcs = {
    &s_event_funcs,
    &s_input_event_funcs,
    &s_key_event_funcs,
};

