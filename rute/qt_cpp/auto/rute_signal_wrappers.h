#pragma once
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QApplication>
#include <QListWidgetItem>
#include <QWidget>
#include <QListWidget>
#include <QFont>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef void (*Signal_self_ListWidgetItemType_void)(void* self_c, void* trampoline_func, struct RUBase* item);

class QSlotWrapperSignal_self_ListWidgetItemType_void : public QObject {
    Q_OBJECT
public:
    QSlotWrapperSignal_self_int_void(void* data, Signal_self_ListWidgetItemType_void trampoline_func, void* wrapped_func) {
        m_trampoline_func = trampoline_func;
        m_data = data;
        m_wrapped_func = wrapped_func;
    }

    Q_SLOT void method( struct RUBase* item) {
        m_trampoline_func(m_data, m_wrapped_func, item);
    }
private:
    Signal_self_ListWidgetItemType_void m_trampoline_func;
    void* m_data;
    void* m_wrapped_func;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef void (*Signal_self_Widget_Widget_void)(void* self_c, void* trampoline_func, struct RUBase* old, struct RUBase* now);

class QSlotWrapperSignal_self_Widget_Widget_void : public QObject {
    Q_OBJECT
public:
    QSlotWrapperSignal_self_int_void(void* data, Signal_self_Widget_Widget_void trampoline_func, void* wrapped_func) {
        m_trampoline_func = trampoline_func;
        m_data = data;
        m_wrapped_func = wrapped_func;
    }

    Q_SLOT void method( struct RUBase* old, struct RUBase* now) {
        m_trampoline_func(m_data, m_wrapped_func, old, now);
    }
private:
    Signal_self_Widget_Widget_void m_trampoline_func;
    void* m_data;
    void* m_wrapped_func;
};
