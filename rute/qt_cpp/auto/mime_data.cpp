////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QMimeData>
#include "mime_data_ffi.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool mime_data_has_urls(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->hasUrls();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* mime_data_text(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->text();
    return q_string_to_const_char(ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void mime_data_set_text(struct RUBase* self_c, const char* text) {
    QMimeData* qt_value = (QMimeData*)self_c;
    qt_value->setText(QString::fromUtf8(text));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool mime_data_has_text(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->hasText();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const char* mime_data_html(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->html();
    return q_string_to_const_char(ret_value);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void mime_data_set_html(struct RUBase* self_c, const char* html) {
    QMimeData* qt_value = (QMimeData*)self_c;
    qt_value->setHtml(QString::fromUtf8(html));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool mime_data_has_html(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->hasHtml();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool mime_data_has_image(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->hasImage();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool mime_data_has_color(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->hasColor();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void mime_data_remove_format(struct RUBase* self_c, const char* mimetype) {
    QMimeData* qt_value = (QMimeData*)self_c;
    qt_value->removeFormat(QString::fromUtf8(mimetype));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static bool mime_data_has_format(struct RUBase* self_c, const char* mimetype) {
    QMimeData* qt_value = (QMimeData*)self_c;
    auto ret_value = qt_value->hasFormat(QString::fromUtf8(mimetype));
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void mime_data_clear(struct RUBase* self_c) {
    QMimeData* qt_value = (QMimeData*)self_c;
    qt_value->clear();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct RUMimeData create_mime_data(struct RUBase* priv_data) {
    auto ctl = generic_create_func<struct RUMimeData, QMimeData>(priv_data);
    ctl.all_funcs = &s_mime_data_all_funcs;
    return ctl;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void destroy_mime_data(struct RUBase* priv_data) {
    destroy_generic<QMimeData>(priv_data);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUMimeDataFuncs s_mime_data_funcs = {
    destroy_mime_data,
    mime_data_has_urls,
    mime_data_text,
    mime_data_set_text,
    mime_data_has_text,
    mime_data_html,
    mime_data_set_html,
    mime_data_has_html,
    mime_data_has_image,
    mime_data_has_color,
    mime_data_remove_format,
    mime_data_has_format,
    mime_data_clear,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUMimeDataAllFuncs s_mime_data_all_funcs = {
    &s_object_funcs,
    &s_mime_data_funcs,
};

