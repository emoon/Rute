////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../rute_base.h"
#include "../rute_manual.h"
#include <QBoxLayout>
#include "box_layout_ffi.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static uint32_t box_layout_direction(struct RUBase* self_c) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    auto ret_value = qt_value->direction();
    return (uint32_t)ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_set_direction(struct RUBase* self_c, uint32_t arg0) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->setDirection((QBoxLayout::Direction)arg0);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_add_spacing(struct RUBase* self_c, int size) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->addSpacing(size);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_add_spacer_item(struct RUBase* self_c, struct RUBase* spacer_item) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->addSpacerItem((QSpacerItem*)spacer_item);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_add_widget(struct RUBase* self_c, struct RUBase* arg0, int stretch, uint32_t alignment) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->addWidget((WRWidget*)arg0, stretch, (Qt::Alignment)alignment);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_add_layout(struct RUBase* self_c, struct RUBase* layout, int stretch) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->addLayout((WRLayout*)layout, stretch);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_insert_spacing(struct RUBase* self_c, int index, int size) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->insertSpacing(index, size);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_insert_widget(struct RUBase* self_c, int index, struct RUBase* widget, int stretch, uint32_t alignment) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->insertWidget(index, (WRWidget*)widget, stretch, (Qt::Alignment)alignment);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_insert_layout(struct RUBase* self_c, int index, struct RUBase* layout, int stretch) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->insertLayout(index, (WRLayout*)layout, stretch);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_insert_item(struct RUBase* self_c, int index, struct RUBase* arg0) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->insertItem(index, (QLayoutItem*)arg0);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int box_layout_spacing(struct RUBase* self_c) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    auto ret_value = qt_value->spacing();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void box_layout_set_spacing(struct RUBase* self_c, int spacing) {
    QBoxLayout* qt_value = (QBoxLayout*)self_c;
    qt_value->setSpacing(spacing);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUBoxLayoutFuncs s_box_layout_funcs = {
    box_layout_direction,
    box_layout_set_direction,
    box_layout_add_spacing,
    box_layout_add_spacer_item,
    box_layout_add_widget,
    box_layout_add_layout,
    box_layout_insert_spacing,
    box_layout_insert_widget,
    box_layout_insert_layout,
    box_layout_insert_item,
    box_layout_spacing,
    box_layout_set_spacing,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUBoxLayoutAllFuncs s_box_layout_all_funcs = {
    &s_object_funcs,
    &s_layout_item_funcs,
    &s_layout_funcs,
    &s_box_layout_funcs,
};

