// This file is auto-generated by rute_gen. DO NOT EDIT!
#pragma once

#include <stdint.h>
#include <stdbool.h>

#include "../rute_base.h"

#ifdef __cplusplus
extern "C" {
#endif
#include "color_ffi.h"
#include "gradient_ffi.h"
#include "image_ffi.h"
#include "pixmap_ffi.h"

struct RUBrushFuncs;
struct RUBrush;

typedef struct RUBrushFuncs {
    void (*destroy)(struct RUBase* self);
    void (*swap)(struct RUBase* self_c, struct RUBase* other);
    int (*style)(struct RUBase* self_c);
    void (*set_style)(struct RUBase* self_c, int arg0);
    void (*set_transform)(struct RUBase* self_c, struct RUBase* arg0);
    struct RUPixmap (*texture)(struct RUBase* self_c);
    void (*set_texture)(struct RUBase* self_c, struct RUBase* pixmap);
    struct RUImage (*texture_image)(struct RUBase* self_c);
    void (*set_texture_image)(struct RUBase* self_c, struct RUBase* image);
    struct RUColor (*color)(struct RUBase* self_c);
    void (*set_color_by_type)(struct RUBase* self_c, struct RUBase* color);
    void (*set_color)(struct RUBase* self_c, int color);
    struct RUGradient (*gradient)(struct RUBase* self_c);
    bool (*is_opaque)(struct RUBase* self_c);
    bool (*is_detached)(struct RUBase* self_c);
} RUBrushFuncs;

typedef struct RUBrushAllFuncs {
    struct RUBrushFuncs* brush_funcs;
} RUBrushAllFuncs;

typedef struct RUBrush {
    RUBase* qt_data;
    RUBase* host_data;
    struct RUBrushAllFuncs* all_funcs;
} RUBrush;

extern RUBrushFuncs s_brush_funcs;
extern RUBrushAllFuncs s_brush_all_funcs;

#ifdef __cplusplus
}
#endif
