
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by rute_gen. DO NOT EDIT
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Rute.h"
#include "rute_cpp.h"
#include "../rute_manual.h"
#include <QApplication>

static char s_temp_string_buffer[1024*1024];

#include <map>
std::map<QWidget*, void*> s_widget_lookup;

extern struct RUApplicationFuncs s_application_funcs;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


struct KeyVal { int val, key; };

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void create_enum_mappings() {
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void application_set_style(struct RUBase* self_c, const char* style) { 
    QApplication* qt_data = (QApplication*)self_c;
    qt_data->setStyle(QString::fromUtf8(style));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int application_exec(struct RUBase* self_c) { 
    QApplication* qt_data = (QApplication*)self_c;
    auto ret_value = qt_data->exec();
    return ret_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void set_application_about_to_quit_event(void* object, void* user_data, void* wrapped_func, void (*event)(struct RUBase* widget, void* self_c)) {
    QSlotWrapperSignal_self_void* wrap = new QSlotWrapperSignal_self_void(user_data, (Signal_self_void)event, wrapped_func);
    QObject* q_obj = (QObject*)object;
    QObject::connect(q_obj, SIGNAL(aboutToQuit()), wrap, SLOT(method()));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct RUApplicationFuncs s_application_funcs = {
    destroy_application,
    application_set_style,
    application_exec,
    set_application_about_to_quit_event,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static struct Rute s_rute = { 
    create_application,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef _WIN32
extern "C" __declspec(dllexport) struct Rute* rute_get() {
#else
extern "C" struct Rute* rute_get() {
#endif
    return (Rute*)&s_rute;
}
