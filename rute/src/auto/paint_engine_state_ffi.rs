// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use auto::brush_ffi::RUBrush;
#[allow(unused_imports)]
use auto::font_ffi::RUFont;
#[allow(unused_imports)]
use auto::painter_ffi::RUPainter;
#[allow(unused_imports)]
use auto::pen_ffi::RUPen;
#[allow(unused_imports)]
use auto::point_f_ffi::RUPointF;
#[allow(unused_imports)]
use auto::region_ffi::RURegion;
#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngineStateFuncs {
    pub destroy: extern "C" fn(self_c: *const RUBase),
    pub state: extern "C" fn(self_c: *const RUBase) -> i32,
    pub pen: extern "C" fn(self_c: *const RUBase) -> RUPen,
    pub brush: extern "C" fn(self_c: *const RUBase) -> RUBrush,
    pub brush_origin: extern "C" fn(self_c: *const RUBase) -> RUPointF,
    pub background_brush: extern "C" fn(self_c: *const RUBase) -> RUBrush,
    pub background_mode: extern "C" fn(self_c: *const RUBase) -> i32,
    pub font: extern "C" fn(self_c: *const RUBase) -> RUFont,
    pub clip_operation: extern "C" fn(self_c: *const RUBase) -> i32,
    pub clip_region: extern "C" fn(self_c: *const RUBase) -> RURegion,
    pub is_clip_enabled: extern "C" fn(self_c: *const RUBase) -> bool,
    pub render_hints: extern "C" fn(self_c: *const RUBase) -> i32,
    pub composition_mode: extern "C" fn(self_c: *const RUBase) -> i32,
    pub opacity: extern "C" fn(self_c: *const RUBase) -> f32,
    pub painter: extern "C" fn(self_c: *const RUBase) -> RUPainter,
    pub brush_needs_resolving: extern "C" fn(self_c: *const RUBase) -> bool,
    pub pen_needs_resolving: extern "C" fn(self_c: *const RUBase) -> bool,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngineStateAllFuncs {
    pub paint_engine_state_funcs: *const RUPaintEngineStateFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngineState {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUPaintEngineStateAllFuncs,
}
