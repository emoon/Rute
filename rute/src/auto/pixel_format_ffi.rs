// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPixelFormatFuncs {
    pub destroy: extern "C" fn(self_c: *const RUBase),
    pub get: extern "C" fn(self_c: *const RUBase, offset: i32, width: i32) -> u8,
    pub set: extern "C" fn(self_c: *const RUBase, offset: i32, width: i32, value: u8) -> u64,
    pub color_model: extern "C" fn(self_c: *const RUBase) -> i32,
    pub channel_count: extern "C" fn(self_c: *const RUBase) -> u8,
    pub red_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub green_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub blue_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub cyan_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub magenta_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub yellow_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub black_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub hue_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub saturation_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub lightness_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub brightness_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub alpha_size: extern "C" fn(self_c: *const RUBase) -> u8,
    pub bits_per_pixel: extern "C" fn(self_c: *const RUBase) -> u8,
    pub alpha_usage: extern "C" fn(self_c: *const RUBase) -> i32,
    pub alpha_position: extern "C" fn(self_c: *const RUBase) -> i32,
    pub premultiplied: extern "C" fn(self_c: *const RUBase) -> i32,
    pub type_interpretation: extern "C" fn(self_c: *const RUBase) -> i32,
    pub byte_order: extern "C" fn(self_c: *const RUBase) -> i32,
    pub yuv_layout: extern "C" fn(self_c: *const RUBase) -> i32,
    pub sub_enum: extern "C" fn(self_c: *const RUBase) -> u8,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPixelFormatAllFuncs {
    pub pixel_format_funcs: *const RUPixelFormatFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPixelFormat {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUPixelFormatAllFuncs,
}
