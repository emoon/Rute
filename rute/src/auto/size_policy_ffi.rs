// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUSizePolicyFuncs {
    pub destroy: extern "C" fn(self_c: *const RUBase),
    pub horizontal_policy: extern "C" fn(self_c: *const RUBase) -> i32,
    pub vertical_policy: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_horizontal_policy: extern "C" fn(self_c: *const RUBase, d: i32),
    pub set_vertical_policy: extern "C" fn(self_c: *const RUBase, d: i32),
    pub expanding_directions: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_height_for_width: extern "C" fn(self_c: *const RUBase, b: bool),
    pub has_height_for_width: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_width_for_height: extern "C" fn(self_c: *const RUBase, b: bool),
    pub has_width_for_height: extern "C" fn(self_c: *const RUBase) -> bool,
    pub retain_size_when_hidden: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_retain_size_when_hidden: extern "C" fn(self_c: *const RUBase, retain_size: bool),
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUSizePolicyAllFuncs {
    pub size_policy_funcs: *const RUSizePolicyFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUSizePolicy {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUSizePolicyAllFuncs,
}
