// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUFontFuncs {
    pub destroy: extern "C" fn(self_c: *const RUBase),
    pub swap: extern "C" fn(self_c: *const RUBase, other: *const RUBase),
    pub family: extern "C" fn(self_c: *const RUBase) -> *const ::std::os::raw::c_char,
    pub set_family: extern "C" fn(self_c: *const RUBase, arg0: *const ::std::os::raw::c_char),
    pub style_name: extern "C" fn(self_c: *const RUBase) -> *const ::std::os::raw::c_char,
    pub set_style_name: extern "C" fn(self_c: *const RUBase, arg0: *const ::std::os::raw::c_char),
    pub point_size: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_point_size: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub point_size_f: extern "C" fn(self_c: *const RUBase) -> f32,
    pub set_point_size_f: extern "C" fn(self_c: *const RUBase, arg0: f32),
    pub pixel_size: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_pixel_size: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub weight: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_weight: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub bold: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_bold: extern "C" fn(self_c: *const RUBase, arg0: bool),
    pub italic: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_italic: extern "C" fn(self_c: *const RUBase, b: bool),
    pub underline: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_underline: extern "C" fn(self_c: *const RUBase, arg0: bool),
    pub overline: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_overline: extern "C" fn(self_c: *const RUBase, arg0: bool),
    pub fixed_pitch: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_fixed_pitch: extern "C" fn(self_c: *const RUBase, arg0: bool),
    pub kerning: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_kerning: extern "C" fn(self_c: *const RUBase, arg0: bool),
    pub style_hint: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_style_hint: extern "C" fn(self_c: *const RUBase, arg0: i32, arg1: i32),
    pub letter_spacing: extern "C" fn(self_c: *const RUBase) -> f32,
    pub letter_spacing_type: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_letter_spacing: extern "C" fn(self_c: *const RUBase, stype: i32, spacing: f32),
    pub word_spacing: extern "C" fn(self_c: *const RUBase) -> f32,
    pub set_word_spacing: extern "C" fn(self_c: *const RUBase, spacing: f32),
    pub set_capitalization: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub capitalization: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_hinting_preference: extern "C" fn(self_c: *const RUBase, hinting_preference: i32),
    pub hinting_preference: extern "C" fn(self_c: *const RUBase) -> i32,
    pub raw_mode: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_raw_mode: extern "C" fn(self_c: *const RUBase, arg0: bool),
    pub exact_match: extern "C" fn(self_c: *const RUBase) -> bool,
    pub is_copy_of: extern "C" fn(self_c: *const RUBase, arg0: *const RUBase) -> bool,
    pub set_raw_name: extern "C" fn(self_c: *const RUBase, arg0: *const ::std::os::raw::c_char),
    pub raw_name: extern "C" fn(self_c: *const RUBase) -> *const ::std::os::raw::c_char,
    pub key: extern "C" fn(self_c: *const RUBase) -> *const ::std::os::raw::c_char,
    pub substitute: extern "C" fn(self_c: *const RUBase, arg0: *const ::std::os::raw::c_char)
        -> *const ::std::os::raw::c_char,
    pub insert_substitution: extern "C" fn(
        self_c: *const RUBase,
        arg0: *const ::std::os::raw::c_char,
        arg1: *const ::std::os::raw::c_char,
    ),
    pub remove_substitutions:
        extern "C" fn(self_c: *const RUBase, arg0: *const ::std::os::raw::c_char),
    pub initialize: extern "C" fn(self_c: *const RUBase),
    pub cleanup: extern "C" fn(self_c: *const RUBase),
    pub cache_statistics: extern "C" fn(self_c: *const RUBase),
    pub default_family: extern "C" fn(self_c: *const RUBase) -> *const ::std::os::raw::c_char,
    pub last_resort_family: extern "C" fn(self_c: *const RUBase) -> *const ::std::os::raw::c_char,
    pub last_resort_font: extern "C" fn(self_c: *const RUBase) -> *const ::std::os::raw::c_char,
    pub resolve: extern "C" fn(self_c: *const RUBase, arg0: *const RUBase) -> RUFont,
    pub resolve_2: extern "C" fn(self_c: *const RUBase) -> u64,
    pub resolve_3: extern "C" fn(self_c: *const RUBase, mask: u64),
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUFontAllFuncs {
    pub font_funcs: *const RUFontFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUFont {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUFontAllFuncs,
}
