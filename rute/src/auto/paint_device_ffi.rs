// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use auto::paint_engine_ffi::RUPaintEngine;
#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintDeviceFuncs {
    pub painting_active: extern "C" fn(self_c: *const RUBase) -> bool,
    pub paint_engine: extern "C" fn(self_c: *const RUBase) -> RUPaintEngine,
    pub width: extern "C" fn(self_c: *const RUBase) -> i32,
    pub height: extern "C" fn(self_c: *const RUBase) -> i32,
    pub logical_dpi_x: extern "C" fn(self_c: *const RUBase) -> i32,
    pub logical_dpi_y: extern "C" fn(self_c: *const RUBase) -> i32,
    pub physical_dpi_x: extern "C" fn(self_c: *const RUBase) -> i32,
    pub physical_dpi_y: extern "C" fn(self_c: *const RUBase) -> i32,
    pub device_pixel_ratio: extern "C" fn(self_c: *const RUBase) -> i32,
    pub device_pixel_ratio_f: extern "C" fn(self_c: *const RUBase) -> f32,
    pub color_count: extern "C" fn(self_c: *const RUBase) -> i32,
    pub depth: extern "C" fn(self_c: *const RUBase) -> i32,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintDeviceAllFuncs {
    pub paint_device_funcs: *const RUPaintDeviceFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintDevice {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUPaintDeviceAllFuncs,
}
