// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use auto::paint_device_ffi::RUPaintDevice;
#[allow(unused_imports)]
use auto::point_ffi::RUPoint;
#[allow(unused_imports)]
use auto::rect_ffi::RURect;
#[allow(unused_imports)]
use auto::region_ffi::RURegion;
#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngineFuncs {
    pub is_active: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_active: extern "C" fn(self_c: *const RUBase, new_state: bool),
    pub begin: extern "C" fn(self_c: *const RUBase, pdev: *const RUBase) -> bool,
    pub end: extern "C" fn(self_c: *const RUBase) -> bool,
    pub update_state: extern "C" fn(self_c: *const RUBase, state: *const RUBase),
    pub draw_rects: extern "C" fn(self_c: *const RUBase, rects: *const RUBase, rect_count: i32),
    pub draw_rects_2: extern "C" fn(self_c: *const RUBase, rects: *const RUBase, rect_count: i32),
    pub draw_lines: extern "C" fn(self_c: *const RUBase, lines: *const RUBase, line_count: i32),
    pub draw_lines_2: extern "C" fn(self_c: *const RUBase, lines: *const RUBase, line_count: i32),
    pub draw_ellipse: extern "C" fn(self_c: *const RUBase, r: *const RUBase),
    pub draw_ellipse_2: extern "C" fn(self_c: *const RUBase, r: *const RUBase),
    pub draw_points: extern "C" fn(self_c: *const RUBase, points: *const RUBase, point_count: i32),
    pub draw_points_2:
        extern "C" fn(self_c: *const RUBase, points: *const RUBase, point_count: i32),
    pub draw_polygon:
        extern "C" fn(self_c: *const RUBase, points: *const RUBase, point_count: i32, mode: i32),
    pub draw_polygon_2:
        extern "C" fn(self_c: *const RUBase, points: *const RUBase, point_count: i32, mode: i32),
    pub draw_pixmap: extern "C" fn(
        self_c: *const RUBase,
        r: *const RUBase,
        pm: *const RUBase,
        sr: *const RUBase,
    ),
    pub draw_tiled_pixmap: extern "C" fn(
        self_c: *const RUBase,
        r: *const RUBase,
        pixmap: *const RUBase,
        s: *const RUBase,
    ),
    pub draw_image: extern "C" fn(
        self_c: *const RUBase,
        r: *const RUBase,
        pm: *const RUBase,
        sr: *const RUBase,
        flags: i32,
    ),
    pub set_paint_device: extern "C" fn(self_c: *const RUBase, device: *const RUBase),
    pub paint_device: extern "C" fn(self_c: *const RUBase) -> RUPaintDevice,
    pub set_system_clip: extern "C" fn(self_c: *const RUBase, base_clip: *const RUBase),
    pub system_clip: extern "C" fn(self_c: *const RUBase) -> RURegion,
    pub set_system_rect: extern "C" fn(self_c: *const RUBase, rect: *const RUBase),
    pub system_rect: extern "C" fn(self_c: *const RUBase) -> RURect,
    pub coordinate_offset: extern "C" fn(self_c: *const RUBase) -> RUPoint,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngineAllFuncs {
    pub paint_engine_funcs: *const RUPaintEngineFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngine {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUPaintEngineAllFuncs,
}
