// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

use auto::paint_device_ffi::RUPaintDevice;
use auto::painter_ffi::RUPainter;
use auto::point_ffi::RUPoint;
use auto::rect_ffi::RURect;
use auto::region_ffi::RURegion;
#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngineFuncs {
    pub destroy: extern "C" fn(self_c: *const RUBase),
    pub is_active: extern "C" fn(self_c: *const RUBase) -> bool,
    pub set_active: extern "C" fn(self_c: *const RUBase, new_state: bool),
    pub set_begin: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_begin: extern "C" fn(object: *const RUBase),

    pub set_end: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_end: extern "C" fn(object: *const RUBase),

    pub set_update_state: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_update_state: extern "C" fn(object: *const RUBase),

    pub set_draw_rects: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_rects: extern "C" fn(object: *const RUBase),

    pub set_draw_rects: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_rects: extern "C" fn(object: *const RUBase),

    pub set_draw_lines: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_lines: extern "C" fn(object: *const RUBase),

    pub set_draw_lines: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_lines: extern "C" fn(object: *const RUBase),

    pub set_draw_ellipse: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_ellipse: extern "C" fn(object: *const RUBase),

    pub set_draw_ellipse: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_ellipse: extern "C" fn(object: *const RUBase),

    pub set_draw_path: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_path: extern "C" fn(object: *const RUBase),

    pub set_draw_points: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_points: extern "C" fn(object: *const RUBase),

    pub set_draw_points: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_points: extern "C" fn(object: *const RUBase),

    pub set_draw_polygon: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_polygon: extern "C" fn(object: *const RUBase),

    pub set_draw_polygon: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_polygon: extern "C" fn(object: *const RUBase),

    pub set_draw_pixmap: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_pixmap: extern "C" fn(object: *const RUBase),

    pub set_draw_text_item: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_text_item: extern "C" fn(object: *const RUBase),

    pub set_draw_tiled_pixmap: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_tiled_pixmap: extern "C" fn(object: *const RUBase),

    pub set_draw_image: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_draw_image: extern "C" fn(object: *const RUBase),

    pub set_paint_device: extern "C" fn(self_c: *const RUBase, device: *const RUBase),
    pub paint_device: extern "C" fn(self_c: *const RUBase) -> RUPaintDevice,
    pub set_system_clip: extern "C" fn(self_c: *const RUBase, base_clip: *const RUBase),
    pub system_clip: extern "C" fn(self_c: *const RUBase) -> RURegion,
    pub set_system_rect: extern "C" fn(self_c: *const RUBase, rect: *const RUBase),
    pub system_rect: extern "C" fn(self_c: *const RUBase) -> RURect,
    pub set_coordinate_offset: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_coordinate_offset: extern "C" fn(object: *const RUBase),

    pub set_type: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub remove_type: extern "C" fn(object: *const RUBase),

    pub fix_neg_rect: extern "C" fn(
        self_c: *const RUBase,
        x: *const RUBase,
        y: *const RUBase,
        w: *const RUBase,
        h: *const RUBase,
    ),
    pub test_dirty: extern "C" fn(self_c: *const RUBase, df: i32) -> bool,
    pub set_dirty: extern "C" fn(self_c: *const RUBase, df: i32),
    pub clear_dirty: extern "C" fn(self_c: *const RUBase, df: i32),
    pub has_feature: extern "C" fn(self_c: *const RUBase, feature: i32) -> bool,
    pub painter: extern "C" fn(self_c: *const RUBase) -> RUPainter,
    pub sync_state: extern "C" fn(self_c: *const RUBase),
    pub is_extended: extern "C" fn(self_c: *const RUBase) -> bool,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngineAllFuncs {
    pub paint_engine_funcs: *const RUPaintEngineFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUPaintEngine {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUPaintEngineAllFuncs,
}
