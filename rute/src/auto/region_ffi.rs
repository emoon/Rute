// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

use auto::rect_ffi::RURect;
#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RURegionFuncs {
    pub destroy: extern "C" fn(self_c: *const RUBase),
    pub swap: extern "C" fn(self_c: *const RUBase, other: *const RUBase),
    pub is_empty: extern "C" fn(self_c: *const RUBase) -> bool,
    pub is_null: extern "C" fn(self_c: *const RUBase) -> bool,
    pub begin: extern "C" fn(self_c: *const RUBase) -> i32,
    pub cbegin: extern "C" fn(self_c: *const RUBase) -> i32,
    pub end: extern "C" fn(self_c: *const RUBase) -> i32,
    pub cend: extern "C" fn(self_c: *const RUBase) -> i32,
    pub rbegin: extern "C" fn(self_c: *const RUBase) -> i32,
    pub crbegin: extern "C" fn(self_c: *const RUBase) -> i32,
    pub rend: extern "C" fn(self_c: *const RUBase) -> i32,
    pub crend: extern "C" fn(self_c: *const RUBase) -> i32,
    pub contains: extern "C" fn(self_c: *const RUBase, p: *const RUBase) -> bool,
    pub contains: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> bool,
    pub united: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> RURegion,
    pub united: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> RURegion,
    pub intersected: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> RURegion,
    pub intersected: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> RURegion,
    pub xored: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> RURegion,
    pub intersects: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> bool,
    pub intersects: extern "C" fn(self_c: *const RUBase, r: *const RUBase) -> bool,
    pub bounding_rect: extern "C" fn(self_c: *const RUBase) -> RURect,
    pub set_rects: extern "C" fn(self_c: *const RUBase, rect: *const RUBase, num: i32),
    pub rect_count: extern "C" fn(self_c: *const RUBase) -> i32,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RURegionAllFuncs {
    pub region_funcs: *const RURegionFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RURegion {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RURegionAllFuncs,
}
