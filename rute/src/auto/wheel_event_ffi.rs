// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use auto::event_ffi::*;
#[allow(unused_imports)]
use auto::input_event_ffi::*;
#[allow(unused_imports)]
use auto::point_f_ffi::RUPointF;
#[allow(unused_imports)]
use auto::point_ffi::RUPoint;
#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUWheelEventFuncs {
    pub pixel_delta: extern "C" fn(self_c: *const RUBase) -> RUPoint,
    pub angle_delta: extern "C" fn(self_c: *const RUBase) -> RUPoint,
    pub delta: extern "C" fn(self_c: *const RUBase) -> i32,
    pub orientation: extern "C" fn(self_c: *const RUBase) -> u32,
    pub pos: extern "C" fn(self_c: *const RUBase) -> RUPoint,
    pub global_pos: extern "C" fn(self_c: *const RUBase) -> RUPoint,
    pub x: extern "C" fn(self_c: *const RUBase) -> i32,
    pub y: extern "C" fn(self_c: *const RUBase) -> i32,
    pub global_x: extern "C" fn(self_c: *const RUBase) -> i32,
    pub global_y: extern "C" fn(self_c: *const RUBase) -> i32,
    pub pos_f: extern "C" fn(self_c: *const RUBase) -> RUPointF,
    pub global_pos_f: extern "C" fn(self_c: *const RUBase) -> RUPointF,
    pub buttons: extern "C" fn(self_c: *const RUBase) -> u32,
    pub phase: extern "C" fn(self_c: *const RUBase) -> u32,
    pub inverted: extern "C" fn(self_c: *const RUBase) -> bool,
    pub source: extern "C" fn(self_c: *const RUBase) -> u32,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUWheelEventAllFuncs {
    pub event_funcs: *const RUEventFuncs,
    pub input_event_funcs: *const RUInputEventFuncs,
    pub wheel_event_funcs: *const RUWheelEventFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUWheelEvent {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUWheelEventAllFuncs,
}
