// This file is auto-generated by rute_gen. DO NOT EDIT.
use rute_ffi_base::*;

#[allow(unused_imports)]
use auto::font_ffi::RUFont;
#[allow(unused_imports)]
use auto::widget_ffi::RUWidget;
#[allow(unused_imports)]
use std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUApplicationFuncs {
    pub destroy: extern "C" fn(self_c: *const RUBase),
    pub color_spec: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_color_spec: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub get_font: extern "C" fn(self_c: *const RUBase) -> RUFont,
    pub active_popup_widget: extern "C" fn(self_c: *const RUBase) -> RUWidget,
    pub active_modal_widget: extern "C" fn(self_c: *const RUBase) -> RUWidget,
    pub focus_widget: extern "C" fn(self_c: *const RUBase) -> RUWidget,
    pub active_window: extern "C" fn(self_c: *const RUBase) -> RUWidget,
    pub set_active_window: extern "C" fn(self_c: *const RUBase, actor: *const RUBase),
    pub widget_at: extern "C" fn(self_c: *const RUBase, x: i32, y: i32) -> RUWidget,
    pub top_level_at: extern "C" fn(self_c: *const RUBase, x: i32, y: i32) -> RUWidget,
    pub beep: extern "C" fn(self_c: *const RUBase),
    pub set_cursor_flash_time: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub cursor_flash_time: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_double_click_interval: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub double_click_interval: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_keyboard_input_interval: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub keyboard_input_interval: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_wheel_scroll_lines: extern "C" fn(self_c: *const RUBase, arg0: i32),
    pub wheel_scroll_lines: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_start_drag_time: extern "C" fn(self_c: *const RUBase, ms: i32),
    pub start_drag_time: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_start_drag_distance: extern "C" fn(self_c: *const RUBase, l: i32),
    pub start_drag_distance: extern "C" fn(self_c: *const RUBase) -> i32,
    pub exec: extern "C" fn(self_c: *const RUBase) -> i32,
    pub set_about_to_quit_event: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub set_screen_added_event: extern "C" fn(
        object: *const RUBase,
        user_data: *const c_void,
        trampoline_func: *const c_void,
        callback: *const c_void,
    ),

    pub set_style_sheet: extern "C" fn(self_c: *const RUBase, sheet: *const ::std::os::raw::c_char),
    pub set_auto_sip_enabled: extern "C" fn(self_c: *const RUBase, enabled: bool),
    pub auto_sip_enabled: extern "C" fn(self_c: *const RUBase) -> bool,
    pub close_all_windows: extern "C" fn(self_c: *const RUBase),
    pub about_qt: extern "C" fn(self_c: *const RUBase),
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUApplicationAllFuncs {
    pub application_funcs: *const RUApplicationFuncs,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct RUApplication {
    pub qt_data: *const RUBase,
    pub host_data: *const RUBase,
    pub all_funcs: *const RUApplicationAllFuncs,
}
