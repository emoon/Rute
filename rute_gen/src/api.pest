chunk = _{ soi ~ (structdef | enumdef)+ ~ eoi }

structdef   =  { attributes? ~ traits? ~ ("struct") ~ name ~ derive? ~ ("{") ~ fieldlist? ~ ("}") }
enumdef     =  { attributes? ~ org_name? ~ ("enum") ~ name ~ ("{") ~ fieldlist? ~ ("}") }
fieldlist   =  { field ~ (fieldsep ~ field)* ~ fieldsep* }
field       =  { var | function | enum_type }
fieldsep    = _{ (",") }

rettype      = { name }
org_name     = { ("[org_name(") ~ name_with_namespace ~ (")]") }
attributes   = { ("[attributes(") ~ namelist ~ (")]") }
traits       = { ("[traits(") ~ namelist ~ (")]") }
derive       = { (":") ~ name }
replace      = { ("[replace]") }
no_chain     = { ("[no_chain]") }
event        = { ("[event]") }
manual       = { ("[manual]") }
static_typ   = { ("[static]") }
pointer_exp  = { ("*") }
refexp       = { ("&") }
optional     = { ("?") }
array        = { ("[") ~ (refexp | pointer_exp)? ~ vtype ~ ("]") }
enum_use     = { ("::") ~ vtype }
retexp       = { ("->") ~ (refexp | pointer_exp)? ~ (vtype | array) ~ enum_use? ~ optional? }
var          = { name ~ (":") ~ (refexp | pointer_exp)? ~ vtype ~ enum_use? }
varlist      = { (var | array) ~ ((",") ~ (var | array))* }
enum_assign  = { ("=") ~ name_or_num }
enum_type    = { name ~ enum_assign? }
namelist     = { name ~ ((",") ~ name)* }
function     = { (static_typ | org_name | no_chain | manual | event | replace)*? ~ name ~ ("(") ~ varlist? ~ (")") ~ retexp? }

name = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

name_with_namespace = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("::") | ("_") | ('0'..'9'))*
}

name_or_num = @{
	(('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

vtype = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

comment = _{
	("//") ~ (!(("\r") | ("\n")) ~ any)* ~ (("\n") | ("\r\n") | ("\r") | eoi)
}

whitespace = _{ (" ") | ("\t") | ("\u{000C}") | ("\r") | ("\n") }

