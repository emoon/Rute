chunk = _{ soi ~ (structdef | enumdef)+ ~ eoi }

structdef   =  { attributes? ~ traits? ~ ("struct") ~ name ~ derive? ~ ("{") ~ fieldlist? ~ ("}") }
enumdef     =  { attributes? ~ ("enum") ~ name ~ ("{") ~ fieldlist? ~ ("}") }
fieldlist   =  { field ~ (fieldsep ~ field)* ~ fieldsep* }
field       =  { var | function | enum_type }
fieldsep    = _{ (",") }

rettype      = { name }
attributes   = { ("#[attributes(") ~ namelist ~ (")]") }
traits       = { ("#[traits(") ~ namelist ~ (")]") }
derive       = { (":") ~ name }
callback     = { ("[callback]") }
no_chain     = { ("[no_chain]") }
event        = { ("[event]") }
manual       = { ("[manual]") }
static_typ   = { ("[static]") }
refexp       = { ("&") }
optional     = { ("?") }
array        = { ("<") ~ refexp? ~ vtype ~ (">") }
retexp       = { ("->") ~ refexp? ~ (vtype | array) ~ optional? }
var          = { refexp? ~ vtype ~ name }
varlist      = { (var | array) ~ ((",") ~ (var | array))* }
enum_assign  = { ("=") ~ name_or_num }
enum_type    = { name ~ enum_assign? }
namelist     = { name ~ ((",") ~ name)* }
function     = { static_typ? ~ no_chain? ~ manual? ~ event? ~ callback? ~ name ~ ("(") ~ varlist? ~ (")") ~ retexp? }

name = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

name_or_num = @{
	(('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

vtype = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("_") | ('0'..'9'))*
}

comment = _{
	("//") ~ (!(("\r") | ("\n")) ~ any)* ~ (("\n") | ("\r\n") | ("\r") | eoi)
}

whitespace = _{ (" ") | ("\t") | ("\u{000C}") | ("\r") | ("\n") }

