
struct Rect {
    is_null() -> bool,
    is_empty() -> bool,
    is_valid() -> bool,
    left() -> i32,
    top() -> i32,
    right() -> i32,
    bottom() -> i32,
    //normalized() -> Rect,
    x() -> i32,
    y() -> i32,
    set_left(pos: i32),
    set_top(pos: i32),
    set_right(pos: i32),
    set_bottom(pos: i32),
    set_x(x: i32),
    set_y(y: i32),
    //set_top_left(p: &PointType),
    //set_bottom_right(p: &PointType),
    //set_top_right(p: &PointType),
    //set_bottom_left(p: &PointType),
    //top_left() -> Point,
    //bottom_right() -> Point,
    //top_right() -> Point,
    //bottom_left() -> Point,
    //center() -> Point,
    move_left(pos: i32),
    move_top(pos: i32),
    move_right(pos: i32),
    move_bottom(pos: i32),
    //move_top_left(p: &PointType),
    //move_bottom_right(p: &PointType),
    //move_top_right(p: &PointType),
    //move_bottom_left(p: &PointType),
    //move_center(p: &PointType),
    move_to(x: i32, t: i32),
    //move_to(p: &PointType),
    //set_rect(x: i32, y: i32, w: i32, h: i32),
    //get_rect(x: *i32, y: *i32, w: *i32, h: *i32),
    //set_coords(x1: i32, y1: i32, x2: i32, y2: i32),
    //get_coords(x1: *i32, y1: *i32, x2: *i32, y2: *i32),
    //adjust(x1: i32, y1: i32, x2: i32, y2: i32),
    //adjusted(x1: i32, y1: i32, x2: i32, y2: i32) -> Rect,
    //size() -> Size,
    width() -> i32,
    height() -> i32,
    set_width(w: i32),
    set_height(h: i32),
    //set_size(s: &SizeType),
    //contains(r: &RectType, proper: bool) -> bool,
    //contains(p: &PointType, proper: bool) -> bool,
    //contains(x: i32, y: i32) -> bool,
    //contains(x: i32, y: i32, proper: bool) -> bool,
    //united(other: &RectType) -> Rect,
    //intersected(other: &RectType) -> Rect,
    //intersects(r: &RectType) -> bool,
    //margins_added(margins: &MarginsType) -> Rect,
    //margins_removed(margins: &MarginsType) -> Rect,
}

// vim: syntax=rust expandtab ts=4 sw=4

