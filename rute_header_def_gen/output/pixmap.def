struct Pixmap : PaintDevice {
    swap(other: &PixmapType),
    is_null() -> bool,
    [override] dev_type() -> i32,
    width() -> i32,
    height() -> i32,
    size() -> SizeType,
    rect() -> RectType,
    depth() -> i32,
    [static] default_depth() -> i32,
    fill(fill_color: &ColorType),
    fill(device: &PaintDeviceType, ofs: &PointType),
    fill(device: &PaintDeviceType, xofs: i32, yofs: i32),
    mask() -> BitmapType,
    set_mask(arg0: &BitmapType),
    device_pixel_ratio() -> f32,
    set_device_pixel_ratio(scale_factor: f32),
    has_alpha() -> bool,
    has_alpha_channel() -> bool,
    create_heuristic_mask(clip_tight: bool) -> BitmapType,
    create_mask_from_color(mask_color: &ColorType, mode: Rute::MaskMode) -> BitmapType,
    [static] grab_window(arg0: WId, x: i32, y: i32, w: i32, h: i32) -> PixmapType,
    [static] grab_widget(widget: &ObjectType, rect: &RectType) -> PixmapType,
    [static] grab_widget(widget: &ObjectType, x: i32, y: i32, w: i32, h: i32) -> PixmapType,
    scaled(w: i32, h: i32, aspect_mode: Rute::AspectRatioMode, mode: Rute::TransformationMode) -> PixmapType,
    scaled(s: &SizeType, aspect_mode: Rute::AspectRatioMode, mode: Rute::TransformationMode) -> PixmapType,
    scaled_to_width(w: i32, mode: Rute::TransformationMode) -> PixmapType,
    scaled_to_height(h: i32, mode: Rute::TransformationMode) -> PixmapType,
    to_image() -> ImageType,
    [static] from_image(image: &ImageType, flags: Rute::ImageConversionFlags) -> PixmapType,
    [static] from_image_reader(image_reader: &ImageReaderType, flags: Rute::ImageConversionFlags) -> PixmapType,
    load(file_name: String, format: &char, flags: Rute::ImageConversionFlags) -> bool,
    load_from_data(buf: &uchar, len: uint, format: &char, flags: Rute::ImageConversionFlags) -> bool,
    load_from_data(data: &ByteArrayType, format: &char, flags: Rute::ImageConversionFlags) -> bool,
    save(file_name: String, format: &char, quality: i32) -> bool,
    save(device: &IODeviceType, format: &char, quality: i32) -> bool,
    convert_from_image(img: &ImageType, flags: Rute::ImageConversionFlags) -> bool,
    copy(x: i32, y: i32, width: i32, height: i32) -> PixmapType,
    copy(rect: &RectType) -> PixmapType,
    scroll(dx: i32, dy: i32, x: i32, y: i32, width: i32, height: i32, exposed: &RegionType),
    scroll(dx: i32, dy: i32, rect: &RectType, exposed: &RegionType),
    cache_key() -> i64,
    is_detached() -> bool,
    detach(),
    is_q_bitmap() -> bool,
    [override] paint_engine() -> &PaintEngineType,
    [static] from_image_in_place(image: &ImageType, flags: Rute::ImageConversionFlags) -> PixmapType,
    handle() -> &PlatformPixmapType,
}

// vim: syntax=rust expandtab ts=4 sw=4
