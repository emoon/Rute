struct Pixmap : PaintDevice {
    swap(&PixmapType other),
    is_null() -> bool,
    dev_type() -> i32,
    width() -> i32,
    height() -> i32,
    size() -> SizeType,
    rect() -> RectType,
    depth() -> i32,
    default_depth() -> i32,
    fill(&ColorType fill_color),
    fill(&PaintDeviceType device, &PointType ofs),
    fill(&PaintDeviceType device, i32 xofs, i32 yofs),
    mask() -> BitmapType,
    set_mask(&BitmapType arg0),
    device_pixel_ratio() -> f32,
    set_device_pixel_ratio(f32 scale_factor),
    has_alpha() -> bool,
    has_alpha_channel() -> bool,
    create_heuristic_mask(bool clip_tight) -> BitmapType,
    create_mask_from_color(&ColorType mask_color, Rute::MaskMode mode) -> BitmapType,
    grab_window(WId arg0, i32 x, i32 y, i32 w, i32 h) -> PixmapType,
    grab_widget(&ObjectType widget, &RectType rect) -> PixmapType,
    grab_widget(&ObjectType widget, i32 x, i32 y, i32 w, i32 h) -> PixmapType,
    scaled(i32 w, i32 h, Rute::AspectRatioMode aspect_mode, Rute::TransformationMode mode) -> PixmapType,
    scaled(&SizeType s, Rute::AspectRatioMode aspect_mode, Rute::TransformationMode mode) -> PixmapType,
    scaled_to_width(i32 w, Rute::TransformationMode mode) -> PixmapType,
    scaled_to_height(i32 h, Rute::TransformationMode mode) -> PixmapType,
    to_image() -> ImageType,
    from_image(&ImageType image, Rute::ImageConversionFlags flags) -> PixmapType,
    from_image_reader(&ImageReaderType image_reader, Rute::ImageConversionFlags flags) -> PixmapType,
    load(String file_name, &char format, Rute::ImageConversionFlags flags) -> bool,
    load_from_data(&uchar buf, uint len, &char format, Rute::ImageConversionFlags flags) -> bool,
    load_from_data(&ByteArrayType data, &char format, Rute::ImageConversionFlags flags) -> bool,
    save(String file_name, &char format, i32 quality) -> bool,
    save(&IODeviceType device, &char format, i32 quality) -> bool,
    convert_from_image(&ImageType img, Rute::ImageConversionFlags flags) -> bool,
    copy(i32 x, i32 y, i32 width, i32 height) -> PixmapType,
    copy(&RectType rect) -> PixmapType,
    scroll(i32 dx, i32 dy, i32 x, i32 y, i32 width, i32 height, &RegionType exposed),
    scroll(i32 dx, i32 dy, &RectType rect, &RegionType exposed),
    cache_key() -> qint64,
    is_detached() -> bool,
    detach(),
    is_q_bitmap() -> bool,
    paint_engine() -> &PaintEngineType,
    from_image_in_place(&ImageType image, Rute::ImageConversionFlags flags) -> PixmapType,
    do_image_io(&ImageWriterType io, i32 quality) -> bool,
    do_init(i32 arg0, i32 arg1, i32 arg2),
    handle() -> &PlatformPixmapType,
}

// vim: syntax=rust expandtab ts=4 sw=4
