struct LineEdit : Widget {
    text() -> String,
    display_text() -> String,
    placeholder_text() -> String,
    set_placeholder_text(String arg0),
    max_length() -> i32,
    set_max_length(i32 arg0),
    set_frame(bool arg0),
    has_frame() -> bool,
    set_clear_button_enabled(bool enable),
    is_clear_button_enabled() -> bool,
    echo_mode() -> LineEdit::EchoMode,
    set_echo_mode(LineEdit::EchoMode arg0),
    is_read_only() -> bool,
    set_read_only(bool arg0),
    set_validator(&ValidatorType arg0),
    validator() -> &ValidatorType,
    set_completer(&CompleterType completer),
    completer() -> &CompleterType,
    size_hint() -> SizeType,
    minimum_size_hint() -> SizeType,
    cursor_position() -> i32,
    set_cursor_position(i32 arg0),
    cursor_position_at(&PointType pos) -> i32,
    set_alignment(Rute::Alignment flag),
    alignment() -> Rute::Alignment,
    cursor_forward(bool mark, i32 steps),
    cursor_backward(bool mark, i32 steps),
    cursor_word_forward(bool mark),
    cursor_word_backward(bool mark),
    backspace(),
    del(),
    home(bool mark),
    end(bool mark),
    is_modified() -> bool,
    set_modified(bool arg0),
    set_selection(i32 arg0, i32 arg1),
    has_selected_text() -> bool,
    selected_text() -> String,
    selection_start() -> i32,
    selection_end() -> i32,
    selection_length() -> i32,
    is_undo_available() -> bool,
    is_redo_available() -> bool,
    set_drag_enabled(bool b),
    drag_enabled() -> bool,
    set_cursor_move_style(Rute::CursorMoveStyle style),
    cursor_move_style() -> Rute::CursorMoveStyle,
    input_mask() -> String,
    set_input_mask(String input_mask),
    has_acceptable_input() -> bool,
    set_text_margins(i32 left, i32 top, i32 right, i32 bottom),
    set_text_margins(&MarginsType margins),
    get_text_margins(&i32 left, &i32 top, &i32 right, &i32 bottom),
    text_margins() -> MarginsType,
    add_action(&ActionType action, LineEdit::ActionPosition position),
    add_action(&IconType icon, LineEdit::ActionPosition position) -> &ActionType,
    set_text(String arg0),
    clear(),
    select_all(),
    undo(),
    redo(),
    cut(),
    copy(),
    paste(),
    deselect(),
    insert(String arg0),
    create_standard_context_menu() -> &MenuType,
    text_changed(String arg0),
    text_edited(String arg0),
    cursor_position_changed(i32 arg0, i32 arg1),
    return_pressed(),
    editing_finished(),
    selection_changed(),
    mouse_press_event(&MouseEventType arg0),
    mouse_move_event(&MouseEventType arg0),
    mouse_release_event(&MouseEventType arg0),
    mouse_double_click_event(&MouseEventType arg0),
    key_press_event(&KeyEventType arg0),
    focus_in_event(&FocusEventType arg0),
    focus_out_event(&FocusEventType arg0),
    paint_event(&PaintEventType arg0),
    drag_enter_event(&DragEnterEventType arg0),
    drag_move_event(&DragMoveEventType e),
    drag_leave_event(&DragLeaveEventType e),
    drop_event(&DropEventType arg0),
    change_event(&EventType arg0),
    context_menu_event(&ContextMenuEventType arg0),
    input_method_event(&InputMethodEventType arg0),
    init_style_option(&StyleOptionFrameType option),
    input_method_query(Rute::InputMethodQuery arg0) -> VariantType,
    input_method_query(Rute::InputMethodQuery property, VariantType argument) -> VariantType,
    event(&EventType arg0) -> bool,
    cursor_rect() -> RectType,
}

// vim: syntax=rust expandtab ts=4 sw=4
