struct WidgetWindow : Window {
    widget() -> &WidgetType,
    accessible_root() -> &AccessibleInterfaceType,
    focus_object() -> &ObjectType,
    set_native_window_visibility(bool visible),
    event(&EventType arg0) -> bool,
    handle_close_event(&CloseEventType arg0),
    handle_enter_leave_event(&EventType arg0),
    handle_focus_in_event(&FocusEventType arg0),
    handle_key_event(&KeyEventType arg0),
    handle_mouse_event(&MouseEventType arg0),
    handle_non_client_area_mouse_event(&MouseEventType arg0),
    handle_touch_event(&TouchEventType arg0),
    handle_move_event(&MoveEventType arg0),
    handle_resize_event(&ResizeEventType arg0),
    handle_wheel_event(&WheelEventType arg0),
    handle_drag_enter_move_event(&DragMoveEventType arg0),
    handle_drag_leave_event(&DragLeaveEventType arg0),
    handle_drop_event(&DropEventType arg0),
    handle_expose_event(&ExposeEventType arg0),
    handle_window_state_changed_event(&i32 event),
    native_event(&ByteArrayType event_type, &void message, &long result) -> bool,
    handle_tablet_event(&TabletEventType arg0),
    handle_gesture_event(&i32 arg0),
    handle_context_menu_event(&ContextMenuEventType arg0),
    update_object_name(),
    handle_screen_change(),
    repaint_window(),
    update_size() -> bool,
    update_pos() -> bool,
    update_margins(),
    get_focus_widget(WidgetWindow::FocusWidgets fw) -> &WidgetType,
}

