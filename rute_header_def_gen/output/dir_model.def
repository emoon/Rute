struct DirModel : AbstractItemModel {
    index(i32 row, i32 column, &ModelIndexType parent) -> ModelIndexType,
    parent(&ModelIndexType child) -> ModelIndexType,
    row_count(&ModelIndexType parent) -> i32,
    column_count(&ModelIndexType parent) -> i32,
    data(&ModelIndexType index, i32 role) -> VariantType,
    set_data(&ModelIndexType index, &VariantType value, i32 role) -> bool,
    header_data(i32 section, Rute::Orientation orientation, i32 role) -> VariantType,
    has_children(&ModelIndexType index) -> bool,
    flags(&ModelIndexType index) -> Rute::ItemFlags,
    sort(i32 column, Rute::SortOrder order),
    mime_types() -> StringListType,
    mime_data(&ModelIndexListType indexes) -> &MimeDataType,
    drop_mime_data(&MimeDataType data, Rute::DropAction action, i32 row, i32 column, &ModelIndexType parent) -> bool,
    supported_drop_actions() -> Rute::DropActions,
    set_icon_provider(&FileIconProviderType provider),
    icon_provider() -> &FileIconProviderType,
    set_name_filters(&StringListType filters),
    name_filters() -> StringListType,
    set_filter(Dir::Filters filters),
    filter() -> Dir::Filters,
    set_sorting(Dir::SortFlags sort),
    sorting() -> Dir::SortFlags,
    set_resolve_symlinks(bool enable),
    resolve_symlinks() -> bool,
    set_read_only(bool enable),
    is_read_only() -> bool,
    set_lazy_child_count(bool enable),
    lazy_child_count() -> bool,
    index(String path, i32 column) -> ModelIndexType,
    is_dir(&ModelIndexType index) -> bool,
    mkdir(&ModelIndexType parent, String name) -> ModelIndexType,
    rmdir(&ModelIndexType index) -> bool,
    remove(&ModelIndexType index) -> bool,
    file_path(&ModelIndexType index) -> String,
    file_name(&ModelIndexType index) -> String,
    file_icon(&ModelIndexType index) -> IconType,
    file_info(&ModelIndexType index) -> FileInfoType,
    [callback] refresh(&ModelIndexType parent),
}

// vim: syntax=rust expandtab ts=4 sw=4
