struct Menu : Widget {
    add_action(text: String) -> &ActionType,
    add_action(icon: &IconType, text: String) -> &ActionType,
    add_action(text: String, receiver: &ObjectType, member: &char, shortcut: &KeySequenceType) -> &ActionType,
    add_action(icon: &IconType, text: String, receiver: &ObjectType, member: &char, shortcut: &KeySequenceType) -> &ActionType,
    add_menu(title: String) -> &MenuType,
    add_menu(icon: &IconType, title: String) -> &MenuType,
    add_separator() -> &ActionType,
    add_section(text: String) -> &ActionType,
    add_section(icon: &IconType, text: String) -> &ActionType,
    insert_menu(before: &ActionType, menu: &MenuType) -> &ActionType,
    insert_separator(before: &ActionType) -> &ActionType,
    insert_section(before: &ActionType, text: String) -> &ActionType,
    insert_section(before: &ActionType, icon: &IconType, text: String) -> &ActionType,
    is_empty() -> bool,
    clear(),
    set_tear_off_enabled(arg0: bool),
    is_tear_off_enabled() -> bool,
    is_tear_off_menu_visible() -> bool,
    show_tear_off_menu(),
    show_tear_off_menu(pos: &PointType),
    hide_tear_off_menu(),
    set_default_action(arg0: &ActionType),
    default_action() -> &ActionType,
    set_active_action(act: &ActionType),
    active_action() -> &ActionType,
    popup(pos: &PointType, at: &ActionType),
    exec() -> &ActionType,
    exec(pos: &PointType, at: &ActionType) -> &ActionType,
    exec(actions: [&ActionType], pos: &PointType, at: &ActionType, parent: &WidgetType) -> &ActionType,
    size_hint() -> SizeType,
    action_at(arg0: &PointType) -> &ActionType,
    menu_action() -> &ActionType,
    title() -> String,
    set_title(title: String),
    icon() -> IconType,
    set_icon(icon: &IconType),
    set_no_replay_for(widget: &WidgetType),
    platform_menu() -> &PlatformMenuType,
    set_platform_menu(platform_menu: &PlatformMenuType),
    to_ns_menu() -> &NSMenu,
    set_as_dock_menu(),
    separators_collapsible() -> bool,
    set_separators_collapsible(collapse: bool),
    tool_tips_visible() -> bool,
    set_tool_tips_visible(visible: bool),
    [callback] about_to_show(),
    [callback] about_to_hide(),
    [callback] hovered(action: &ActionType),
    column_count() -> i32,
    change_event(arg0: &EventType),
    key_press_event(arg0: &KeyEventType),
    mouse_release_event(arg0: &MouseEventType),
    mouse_press_event(arg0: &MouseEventType),
    mouse_move_event(arg0: &MouseEventType),
    wheel_event(arg0: &WheelEventType),
    enter_event(arg0: &EventType),
    leave_event(arg0: &EventType),
    hide_event(arg0: &HideEventType),
    paint_event(arg0: &PaintEventType),
    action_event(arg0: &ActionEventType),
    timer_event(arg0: &TimerEventType),
    event(arg0: &EventType) -> bool,
    focus_next_prev_child(next: bool) -> bool,
    init_style_option(option: &StyleOptionMenuItemType, action: &ActionType),
}

// vim: syntax=rust expandtab ts=4 sw=4
