enum Type {
    Null,
    Bool,
    Double,
    String,
    Array,
    Object,
    Undefined,
}


struct JsonValue {
    swap(other: &JsonValueType),
    [static] from_variant(variant: &VariantType) -> JsonValue,
    to_variant() -> Variant,
    type() -> JsonValue::Type,
    is_null() -> bool,
    is_bool() -> bool,
    is_double() -> bool,
    is_array() -> bool,
    is_object() -> bool,
    is_undefined() -> bool,
    to_bool(default_value: bool) -> bool,
    to_int(default_value: i32) -> i32,
    to_double(default_value: double) -> double,
    to_array() -> JsonArray,
    to_array(default_value: &JsonArrayType) -> JsonArray,
    to_object() -> JsonObject,
    to_object(default_value: &JsonObjectType) -> JsonObject,
}

// vim: syntax=rust expandtab ts=4 sw=4
