
struct ToolBarAreaLayout {
    fit_layout() -> i32,
    minimum_size(&i32 center_min) -> i32,
    rect_hint(&i32 r) -> i32,
    size_hint(&i32 center) -> i32,
    apply(bool animate),
    item_at(&i32 x, i32 index) -> &LayoutItemType,
    take_at(&i32 x, i32 index) -> &LayoutItemType,
    delete_all_layout_items(),
    insert_tool_bar(&ToolBarType before, &ToolBarType tool_bar) -> &LayoutItemType,
    remove_tool_bar(&ToolBarType tool_bar),
    add_tool_bar(i32 pos, &ToolBarType tool_bar) -> &LayoutItemType,
    insert_tool_bar_break(&ToolBarType before),
    remove_tool_bar_break(&ToolBarType before),
    add_tool_bar_break(i32 pos),
    move_tool_bar(&ToolBarType toolbar, i32 pos),
    insert_item(i32 pos, &LayoutItemType item),
    insert_item(&ToolBarType before, &LayoutItemType item),
    find_tool_bar(&ToolBarType tool_bar) -> i32,
    tool_bar_break(&ToolBarType tool_bar) -> bool,
    get_style_option_info(&StyleOptionToolBarType option, &ToolBarType tool_bar),
    insert_gap(i32 arg0) -> bool,
    remove(i32 arg0),
    remove(&LayoutItemType item),
    clear(),
    item(i32 arg0) -> &ToolBarAreaLayoutItemType,
    item_rect(i32 arg0) -> i32,
    plug(i32 arg0) -> &LayoutItemType,
    unplug(i32 arg0) -> &LayoutItemType,
    save_state(&i32 stream),
    restore_state(&i32 stream, i32 arg0) -> bool,
    is_empty() -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
