///     \class QTextInlineObject
///     \reentrant
/// 
///     \brief The QTextInlineObject class represents an inline object in
///     a QAbstractTextDocumentLayout and its implementations.
///     \inmodule QtGui
/// 
///     \ingroup richtext-processing
/// 
///     Normally, you do not need to create a QTextInlineObject. It is
///     used by QAbstractTextDocumentLayout to handle inline objects when
///     implementing a custom layout.
/// 
///     The inline object has various attributes that can be set, for
///     example using, setWidth(), setAscent(), and setDescent(). The
///     rectangle it occupies is given by rect(), and its direction by
///     textDirection(). Its position in the text layout is given by
///     textPosition(), and its format is given by format().
/// The documentation provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.

struct TextInlineObject {
    is_valid() -> bool,
    ///     Returns the inline object's rectangle.
    /// 
    ///     \sa ascent(), descent(), width()
    rect() -> RectF,
    ///     Returns the inline object's width.
    /// 
    ///     \sa ascent(), descent(), rect()
    width() -> f32,
    ///     Returns the inline object's ascent.
    /// 
    ///     \sa descent(), width(), rect()
    ascent() -> f32,
    ///     Returns the inline object's descent.
    /// 
    ///     \sa ascent(), width(), rect()
    descent() -> f32,
    ///     Returns the inline object's total height. This is equal to
    ///     ascent() + descent() + 1.
    /// 
    ///     \sa ascent(), descent(), width(), rect()
    height() -> f32,
    ///     Returns if the object should be laid out right-to-left or left-to-right.
    text_direction() -> Rute::LayoutDirection,
    ///     Sets the inline object's width to \a w.
    /// 
    ///     \sa width(), ascent(), descent(), rect()
    set_width(w: f32),
    ///     Sets the inline object's ascent to \a a.
    /// 
    ///     \sa ascent(), setDescent(), width(), rect()
    set_ascent(a: f32),
    ///     Sets the inline object's descent to \a d.
    /// 
    ///     \sa descent(), setAscent(), width(), rect()
    set_descent(d: f32),
    ///     The position of the inline object within the text layout.
    text_position() -> i32,
    ///     Returns an integer describing the format of the inline object
    ///     within the text layout.
    format_index() -> i32,
    ///     Returns format of the inline object within the text layout.
    format() -> TextFormat,
}

// vim: syntax=rust expandtab ts=4 sw=4
