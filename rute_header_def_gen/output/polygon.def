
struct Polygon {
    swap(other: &PolygonType),
    bounding_rect() -> Rect,
    point(i: i32, x: *i32, y: *i32),
    point(i: i32) -> Point,
    set_point(index: i32, x: i32, y: i32),
    set_point(index: i32, p: &PointType),
    set_points(n_points: i32, points: *i32),
    set_points(n_points: i32, firstx: i32, firsty: i32),
    put_points(index: i32, n_points: i32, points: *i32),
    put_points(index: i32, n_points: i32, firstx: i32, firsty: i32),
    put_points(index: i32, n_points: i32, from: &PolygonType, from_index: i32),
    contains_point(pt: &PointType, fill_rule: Rute::FillRule) -> bool,
    united(r: &PolygonType) -> Polygon,
    intersected(r: &PolygonType) -> Polygon,
    intersects(r: &PolygonType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
