struct ItemSelectionModel : Object {
    current_index() -> ModelIndexType,
    is_selected(index: &ModelIndexType) -> bool,
    is_row_selected(row: i32, parent: &ModelIndexType) -> bool,
    is_column_selected(column: i32, parent: &ModelIndexType) -> bool,
    row_intersects_selection(row: i32, parent: &ModelIndexType) -> bool,
    column_intersects_selection(column: i32, parent: &ModelIndexType) -> bool,
    has_selection() -> bool,
    selected_indexes() -> ModelIndexListType,
    selected_rows(column: i32) -> ModelIndexListType,
    selected_columns(row: i32) -> ModelIndexListType,
    selection() -> ItemSelectionType,
    model() -> &AbstractItemModelType,
    model() -> &AbstractItemModelType,
    set_model(model: &AbstractItemModelType),
    set_current_index(index: &ModelIndexType, command: ItemSelectionModel::SelectionFlags),
    select(index: &ModelIndexType, command: ItemSelectionModel::SelectionFlags),
    select(selection: &ItemSelectionType, command: ItemSelectionModel::SelectionFlags),
    clear(),
    reset(),
    clear_selection(),
    clear_current_index(),
    [callback] selection_changed(selected: &ItemSelectionType, deselected: &ItemSelectionType),
    [callback] current_changed(current: &ModelIndexType, previous: &ModelIndexType),
    [callback] current_row_changed(current: &ModelIndexType, previous: &ModelIndexType),
    [callback] current_column_changed(current: &ModelIndexType, previous: &ModelIndexType),
    [callback] model_changed(model: &AbstractItemModelType),
    emit_selection_changed(new_selection: &ItemSelectionType, old_selection: &ItemSelectionType),
}

// vim: syntax=rust expandtab ts=4 sw=4
