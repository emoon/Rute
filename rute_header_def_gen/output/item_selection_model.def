struct ItemSelectionModel : Object {
    current_index() -> ModelIndexType,
    is_selected(&ModelIndexType index) -> bool,
    is_row_selected(i32 row, &ModelIndexType parent) -> bool,
    is_column_selected(i32 column, &ModelIndexType parent) -> bool,
    row_intersects_selection(i32 row, &ModelIndexType parent) -> bool,
    column_intersects_selection(i32 column, &ModelIndexType parent) -> bool,
    has_selection() -> bool,
    selected_indexes() -> ModelIndexListType,
    selected_rows(i32 column) -> ModelIndexListType,
    selected_columns(i32 row) -> ModelIndexListType,
    selection() -> ItemSelectionType,
    model() -> &AbstractItemModelType,
    model() -> &AbstractItemModelType,
    set_model(&AbstractItemModelType model),
    [callback] set_current_index(&ModelIndexType index, ItemSelectionModel::SelectionFlags command),
    [callback] select(&ModelIndexType index, ItemSelectionModel::SelectionFlags command),
    [callback] select(&ItemSelectionType selection, ItemSelectionModel::SelectionFlags command),
    [callback] clear(),
    [callback] reset(),
    [callback] clear_selection(),
    [callback] clear_current_index(),
    selection_changed(&ItemSelectionType selected, &ItemSelectionType deselected),
    current_changed(&ModelIndexType current, &ModelIndexType previous),
    current_row_changed(&ModelIndexType current, &ModelIndexType previous),
    current_column_changed(&ModelIndexType current, &ModelIndexType previous),
    model_changed(&AbstractItemModelType model),
    emit_selection_changed(&ItemSelectionType new_selection, &ItemSelectionType old_selection),
}

// vim: syntax=rust expandtab ts=4 sw=4
