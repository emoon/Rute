struct Thread : Object {
    current_thread_id() -> Rute::HANDLE,
    current_thread() -> &ThreadType,
    ideal_thread_count() -> i32,
    yield_current_thread(),
    set_priority(Thread::Priority priority),
    priority() -> Thread::Priority,
    is_finished() -> bool,
    is_running() -> bool,
    request_interruption(),
    is_interruption_requested() -> bool,
    set_stack_size(uint stack_size),
    stack_size() -> uint,
    exit(i32 retcode),
    event_dispatcher() -> &AbstractEventDispatcherType,
    set_event_dispatcher(&AbstractEventDispatcherType event_dispatcher),
    event(&EventType event) -> bool,
    loop_level() -> i32,
    start(Thread::Priority arg0),
    terminate(),
    quit(),
    wait(unsigned time) -> bool,
    sleep(unsigned arg0),
    msleep(unsigned arg0),
    usleep(unsigned arg0),
    started(Thread::QPrivateSignal arg0),
    finished(Thread::QPrivateSignal arg0),
    run(),
    exec() -> i32,
    set_termination_enabled(bool enabled),
    create_thread_impl(i32 arg0) -> &ThreadType,
}

// vim: syntax=rust expandtab ts=4 sw=4
