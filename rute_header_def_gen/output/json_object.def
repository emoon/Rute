
struct JsonObject {
    swap(other: &JsonObjectType),
    [static] from_variant_map(map: &VariantMapType) -> JsonObject,
    to_variant_map() -> VariantMap,
    [static] from_variant_hash(map: &VariantHashType) -> JsonObject,
    to_variant_hash() -> VariantHash,
    keys() -> StringList,
    size() -> i32,
    count() -> i32,
    length() -> i32,
    is_empty() -> bool,
    value(key: String) -> JsonValue,
    value(key: Latin1StringType) -> JsonValue,
    remove(key: String),
    take(key: String) -> JsonValue,
    contains(key: String) -> bool,
    contains(key: Latin1StringType) -> bool,
    begin() -> JsonObject::iterator,
    begin() -> JsonObject::const_iterator,
    const_begin() -> JsonObject::const_iterator,
    end() -> JsonObject::iterator,
    end() -> JsonObject::const_iterator,
    const_end() -> JsonObject::const_iterator,
    erase(it: JsonObject::iterator) -> JsonObject::iterator,
    find(key: String) -> JsonObject::iterator,
    find(key: Latin1StringType) -> JsonObject::iterator,
    find(key: String) -> JsonObject::const_iterator,
    find(key: Latin1StringType) -> JsonObject::const_iterator,
    const_find(key: String) -> JsonObject::const_iterator,
    const_find(key: Latin1StringType) -> JsonObject::const_iterator,
    insert(key: String, value: &JsonValueType) -> JsonObject::iterator,
    empty() -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
