
struct JsonObject {
    swap(&JsonObjectType other),
    from_variant_map(&VariantMapType map) -> JsonObjectType,
    to_variant_map() -> VariantMapType,
    from_variant_hash(&VariantHashType map) -> JsonObjectType,
    to_variant_hash() -> VariantHashType,
    keys() -> StringListType,
    size() -> i32,
    count() -> i32,
    length() -> i32,
    is_empty() -> bool,
    value(String key) -> JsonValueType,
    value(Latin1StringType key) -> JsonValueType,
    remove(String key),
    take(String key) -> JsonValueType,
    contains(String key) -> bool,
    contains(Latin1StringType key) -> bool,
    begin() -> JsonObject::iterator,
    begin() -> JsonObject::const_iterator,
    const_begin() -> JsonObject::const_iterator,
    end() -> JsonObject::iterator,
    end() -> JsonObject::const_iterator,
    const_end() -> JsonObject::const_iterator,
    erase(JsonObject::iterator it) -> JsonObject::iterator,
    find(String key) -> JsonObject::iterator,
    find(Latin1StringType key) -> JsonObject::iterator,
    find(String key) -> JsonObject::const_iterator,
    find(Latin1StringType key) -> JsonObject::const_iterator,
    const_find(String key) -> JsonObject::const_iterator,
    const_find(Latin1StringType key) -> JsonObject::const_iterator,
    insert(String key, &JsonValueType value) -> JsonObject::iterator,
    empty() -> bool,
    initialize(),
    detach(uint reserve),
    detach2(uint reserve) -> bool,
    compact(),
    key_at(i32 i) -> String,
    value_at(i32 i) -> JsonValueType,
    set_value_at(i32 i, &JsonValueType val),
}

