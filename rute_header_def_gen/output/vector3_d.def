
struct Vector3D {
    is_null() -> bool,
    x() -> float,
    y() -> float,
    z() -> float,
    set_x(float x),
    set_y(float y),
    set_z(float z),
    length() -> float,
    length_squared() -> float,
    normalized() -> Vector3DType,
    normalize(),
    dot_product(&Vector3DType v1, &Vector3DType v2) -> float,
    cross_product(&Vector3DType v1, &Vector3DType v2) -> Vector3DType,
    normal(&Vector3DType v1, &Vector3DType v2) -> Vector3DType,
    normal(&Vector3DType v1, &Vector3DType v2, &Vector3DType v3) -> Vector3DType,
    project(&Matrix4x4Type model_view, &Matrix4x4Type projection, &RectType viewport) -> Vector3DType,
    unproject(&Matrix4x4Type model_view, &Matrix4x4Type projection, &RectType viewport) -> Vector3DType,
    distance_to_point(&Vector3DType point) -> float,
    distance_to_plane(&Vector3DType plane, &Vector3DType normal) -> float,
    distance_to_plane(&Vector3DType plane1, &Vector3DType plane2, &Vector3DType plane3) -> float,
    distance_to_line(&Vector3DType point, &Vector3DType direction) -> float,
    to_vector2_d() -> Vector2DType,
    to_vector4_d() -> Vector4DType,
    to_point() -> PointType,
    to_point_f() -> PointFType,
}

// vim: syntax=rust expandtab ts=4 sw=4
