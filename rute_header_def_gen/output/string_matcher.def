/// 
/// This class is useful when you have a sequence of [QChar](QChar)
/// s that
/// you want to repeatedly match against some strings (perhaps in a
/// loop), or when you want to search for the same sequence of
/// characters multiple times in the same string. Using a matcher
/// object and indexIn() is faster than matching a plain QString with
/// QString::indexOf() if repeated matching takes place. This class
/// offers no benefit if you are doing one-off string matches.
/// 
/// Create the QStringMatcher with the QString you want to search
/// for. Then call indexIn() on the QString that you want to search.
/// 
/// **See also:** QString
/// QByteArrayMatcher
/// QRegExp
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.

struct StringMatcher {
    /// 
    /// Sets the string that this string matcher will search for to *pattern.*
    /// 
    /// **See also:** pattern()
    /// setCaseSensitivity()
    /// indexIn()
    set_pattern(pattern: String),
    /// 
    /// Sets the case sensitivity setting of this string matcher to *cs.*
    /// 
    /// **See also:** caseSensitivity()
    /// setPattern()
    /// indexIn()
    set_case_sensitivity(cs: Rute::CaseSensitivity),
    /// 
    /// Searches the string *str* from character position *from*
    /// (default 0, i.e. from the first character), for the string
    /// pattern() that was set in the constructor or in the most recent
    /// call to setPattern(). Returns the position where the pattern()
    /// matched in *str,* or -1 if no match was found.
    /// 
    /// **See also:** setPattern()
    /// setCaseSensitivity()
    /// 
    /// Searches the string starting at *str* (of length *length)* from
    /// character position *from* (default 0, i.e. from the first
    /// character), for the string pattern() that was set in the
    /// constructor or in the most recent call to setPattern(). Returns
    /// the position where the pattern() matched in *str,* or -1 if no
    /// match was found.
    /// 
    /// **See also:** setPattern()
    /// setCaseSensitivity()
    index_in(str: String, from: i32) -> i32,
    /// 
    /// Searches the string *str* from character position *from*
    /// (default 0, i.e. from the first character), for the string
    /// pattern() that was set in the constructor or in the most recent
    /// call to setPattern(). Returns the position where the pattern()
    /// matched in *str,* or -1 if no match was found.
    /// 
    /// **See also:** setPattern()
    /// setCaseSensitivity()
    /// 
    /// Searches the string starting at *str* (of length *length)* from
    /// character position *from* (default 0, i.e. from the first
    /// character), for the string pattern() that was set in the
    /// constructor or in the most recent call to setPattern(). Returns
    /// the position where the pattern() matched in *str,* or -1 if no
    /// match was found.
    /// 
    /// **See also:** setPattern()
    /// setCaseSensitivity()
    index_in(str: *CharType, length: i32, from: i32) -> i32,
    /// 
    /// Returns the string pattern that this string matcher will search
    /// for.
    /// 
    /// **See also:** setPattern()
    pattern() -> String,
    /// 
    /// Returns the case sensitivity setting for this string matcher.
    /// 
    /// **See also:** setCaseSensitivity()
    case_sensitivity() -> Rute::CaseSensitivity,
}

// vim: syntax=rust expandtab ts=4 sw=4
