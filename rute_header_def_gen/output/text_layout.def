
struct TextLayout {
    set_font(&FontType f),
    font() -> FontType,
    set_raw_font(&RawFontType raw_font),
    set_text(String string),
    text() -> String,
    set_text_option(&TextOptionType option),
    text_option() -> &TextOptionType,
    set_preedit_area(i32 position, String text),
    preedit_area_position() -> i32,
    preedit_area_text() -> String,
    set_additional_formats(onst QList<QTextLayout::FormatRange> & overrides),
    additional_formats() -> List<QTextLayout::FormatRange>,
    clear_additional_formats(),
    set_formats(onst QVector<QTextLayout::FormatRange> & overrides),
    formats() -> Vector<QTextLayout::FormatRange>,
    clear_formats(),
    set_cache_enabled(bool enable),
    cache_enabled() -> bool,
    set_cursor_move_style(Rute::CursorMoveStyle style),
    cursor_move_style() -> Rute::CursorMoveStyle,
    begin_layout(),
    end_layout(),
    clear_layout(),
    create_line() -> TextLineType,
    line_count() -> i32,
    line_at(i32 i) -> TextLineType,
    line_for_text_position(i32 pos) -> TextLineType,
    is_valid_cursor_position(i32 pos) -> bool,
    next_cursor_position(i32 old_pos, TextLayout::CursorMode mode) -> i32,
    previous_cursor_position(i32 old_pos, TextLayout::CursorMode mode) -> i32,
    left_cursor_position(i32 old_pos) -> i32,
    right_cursor_position(i32 old_pos) -> i32,
    draw(&PainterType p, &PointFType pos, onst QVector<QTextLayout::FormatRange> & selections, &RectFType clip),
    draw_cursor(&PainterType p, &PointFType pos, i32 cursor_position),
    draw_cursor(&PainterType p, &PointFType pos, i32 cursor_position, i32 width),
    position() -> PointFType,
    set_position(&PointFType p),
    bounding_rect() -> RectFType,
    minimum_width() -> f32,
    maximum_width() -> f32,
    glyph_runs(i32 from, i32 length) -> <GlyphRunType>,
    engine() -> &TextEngineType,
    set_flags(i32 flags),
}

