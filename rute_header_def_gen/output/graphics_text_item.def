struct GraphicsTextItem : GraphicsObject {
    to_html() -> String,
    set_html(String html),
    to_plain_text() -> String,
    set_plain_text(String text),
    font() -> FontType,
    set_font(&FontType font),
    set_default_text_color(&ColorType c),
    default_text_color() -> ColorType,
    bounding_rect() -> RectFType,
    shape() -> PainterPathType,
    contains(&PointFType point) -> bool,
    paint(&PainterType painter, &StyleOptionGraphicsItemType option, &WidgetType widget),
    is_obscured_by(&GraphicsItemType item) -> bool,
    opaque_area() -> PainterPathType,
    type() -> i32,
    set_text_width(f32 width),
    text_width() -> f32,
    adjust_size(),
    set_document(&TextDocumentType document),
    document() -> &TextDocumentType,
    set_text_interaction_flags(Rute::TextInteractionFlags flags),
    text_interaction_flags() -> Rute::TextInteractionFlags,
    set_tab_changes_focus(bool b),
    tab_changes_focus() -> bool,
    set_open_external_links(bool open),
    open_external_links() -> bool,
    set_text_cursor(&TextCursorType cursor),
    text_cursor() -> TextCursorType,
    link_activated(String arg0),
    link_hovered(String arg0),
    scene_event(&EventType event) -> bool,
    mouse_press_event(&GraphicsSceneMouseEventType event),
    mouse_move_event(&GraphicsSceneMouseEventType event),
    mouse_release_event(&GraphicsSceneMouseEventType event),
    mouse_double_click_event(&GraphicsSceneMouseEventType event),
    context_menu_event(&GraphicsSceneContextMenuEventType event),
    key_press_event(&KeyEventType event),
    key_release_event(&KeyEventType event),
    focus_in_event(&FocusEventType event),
    focus_out_event(&FocusEventType event),
    drag_enter_event(&GraphicsSceneDragDropEventType event),
    drag_leave_event(&GraphicsSceneDragDropEventType event),
    drag_move_event(&GraphicsSceneDragDropEventType event),
    drop_event(&GraphicsSceneDragDropEventType event),
    input_method_event(&InputMethodEventType event),
    hover_enter_event(&GraphicsSceneHoverEventType event),
    hover_move_event(&GraphicsSceneHoverEventType event),
    hover_leave_event(&GraphicsSceneHoverEventType event),
    input_method_query(Rute::InputMethodQuery query) -> VariantType,
    supports_extension(GraphicsItem::Extension extension) -> bool,
    set_extension(GraphicsItem::Extension extension, &VariantType variant),
    extension(&VariantType variant) -> VariantType,
}

