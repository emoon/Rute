/// 
/// For performance reasons, the access to the member variables is
/// direct (i.e., using the `.` or `->` operator). This low-level feel
/// makes the structures straightforward to use and emphasizes that
/// these are simply parameters.
/// 
/// For an example demonstrating how style options can be used, see
/// the [Styles](widgets/styles)
/// example.
/// 
/// **See also:** [`StyleOption`]
/// [`GraphicsItem::paint`]
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct StyleOptionGraphicsItem : StyleOption {
    /// 
    /// Returns the level of detail from the *worldTransform.*
    /// 
    /// Its value represents the maximum value of the height and
    /// width of a unity rectangle, mapped using the *worldTransform*
    /// of the painter used to draw the item. By default, if no
    /// transformations are applied, its value is 1. If zoomed out 1:2, the level
    /// of detail will be 0.5, and if zoomed in 2:1, its value is 2.
    /// 
    /// **See also:** [`GraphicsScene::minimum_render_size`]
    [static] level_of_detail_from_transform(world_transform: &TransformType) -> f32,
}

[org_name(QStyleOptionGraphicsItem)]
enum StyleOptionType {
    /// The type of style option provided (
    Type,
}

[org_name(QStyleOptionGraphicsItem)]
enum StyleOptionVersion {
    /// 1
    Version,
}

// vim: syntax=rust expandtab ts=4 sw=4
