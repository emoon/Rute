
struct Painter {
    qt_check_for_qgadget_macro(),
    device() -> &PaintDeviceType,
    begin(&PaintDeviceType arg0) -> bool,
    end() -> bool,
    is_active() -> bool,
    init_from(&PaintDeviceType device),
    set_composition_mode(Painter::CompositionMode mode),
    composition_mode() -> Painter::CompositionMode,
    font() -> &FontType,
    set_font(&FontType f),
    font_info() -> FontInfoType,
    set_pen(&ColorType color),
    set_pen(&PenType pen),
    set_pen(Rute::PenStyle style),
    pen() -> &PenType,
    set_brush(&BrushType brush),
    set_brush(Rute::BrushStyle style),
    brush() -> &BrushType,
    set_background_mode(Rute::BGMode mode),
    background_mode() -> Rute::BGMode,
    brush_origin() -> PointType,
    set_brush_origin(i32 x, i32 y),
    set_brush_origin(&PointType arg0),
    set_brush_origin(&PointFType arg0),
    set_background(&BrushType bg),
    background() -> &BrushType,
    opacity() -> f32,
    set_opacity(f32 opacity),
    clip_region() -> RegionType,
    clip_path() -> PainterPathType,
    set_clip_rect(&RectFType arg0, Rute::ClipOperation op),
    set_clip_rect(&RectType arg0, Rute::ClipOperation op),
    set_clip_rect(i32 x, i32 y, i32 w, i32 h, Rute::ClipOperation op),
    set_clip_region(&RegionType arg0, Rute::ClipOperation op),
    set_clip_path(&PainterPathType path, Rute::ClipOperation op),
    set_clipping(bool enable),
    has_clipping() -> bool,
    clip_bounding_rect() -> RectFType,
    save(),
    restore(),
    set_transform(&TransformType transform, bool combine),
    device_transform() -> &TransformType,
    reset_transform(),
    set_world_transform(&TransformType matrix, bool combine),
    world_transform() -> &TransformType,
    combined_transform() -> TransformType,
    scale(f32 sx, f32 sy),
    shear(f32 sh, f32 sv),
    rotate(f32 a),
    window() -> RectType,
    set_window(&RectType window),
    set_window(i32 x, i32 y, i32 w, i32 h),
    viewport() -> RectType,
    set_viewport(&RectType viewport),
    set_viewport(i32 x, i32 y, i32 w, i32 h),
    set_view_transform_enabled(bool enable),
    view_transform_enabled() -> bool,
    fill_path(&PainterPathType path, &BrushType brush),
    draw_path(&PainterPathType path),
    draw_point(&PointFType pt),
    draw_point(&PointType p),
    draw_point(i32 x, i32 y),
    draw_points(&PointFType points, i32 point_count),
    draw_points(&PolygonFType points),
    draw_points(&PointType points, i32 point_count),
    draw_points(&PolygonType points),
    draw_line(&LineFType line),
    draw_line(&LineType line),
    draw_line(i32 x1, i32 y1, i32 x2, i32 y2),
    draw_line(&PointType p1, &PointType p2),
    draw_line(&PointFType p1, &PointFType p2),
    draw_lines(&LineFType lines, i32 line_count),
    draw_lines(<LineFType> lines),
    draw_lines(&PointFType point_pairs, i32 line_count),
    draw_lines(<PointFType> point_pairs),
    draw_lines(&LineType lines, i32 line_count),
    draw_lines(<LineType> lines),
    draw_lines(&PointType point_pairs, i32 line_count),
    draw_lines(<PointType> point_pairs),
    draw_rect(&RectFType rect),
    draw_rect(i32 x1, i32 y1, i32 w, i32 h),
    draw_rect(&RectType rect),
    draw_rects(&RectFType rects, i32 rect_count),
    draw_rects(<RectFType> rectangles),
    draw_rects(&RectType rects, i32 rect_count),
    draw_rects(<RectType> rectangles),
    draw_ellipse(&RectFType r),
    draw_ellipse(&RectType r),
    draw_ellipse(i32 x, i32 y, i32 w, i32 h),
    draw_ellipse(&PointFType center, f32 rx, f32 ry),
    draw_ellipse(&PointType center, i32 rx, i32 ry),
    draw_polyline(&PointFType points, i32 point_count),
    draw_polyline(&PolygonFType polyline),
    draw_polyline(&PointType points, i32 point_count),
    draw_polyline(&PolygonType polygon),
    draw_polygon(&PointFType points, i32 point_count, Rute::FillRule fill_rule),
    draw_polygon(&PolygonFType polygon, Rute::FillRule fill_rule),
    draw_polygon(&PointType points, i32 point_count, Rute::FillRule fill_rule),
    draw_polygon(&PolygonType polygon, Rute::FillRule fill_rule),
    draw_convex_polygon(&PointFType points, i32 point_count),
    draw_convex_polygon(&PolygonFType polygon),
    draw_convex_polygon(&PointType points, i32 point_count),
    draw_convex_polygon(&PolygonType polygon),
    draw_arc(&RectFType rect, i32 a, i32 alen),
    draw_arc(&RectType arg0, i32 a, i32 alen),
    draw_arc(i32 x, i32 y, i32 w, i32 h, i32 a, i32 alen),
    draw_pie(&RectFType rect, i32 a, i32 alen),
    draw_pie(i32 x, i32 y, i32 w, i32 h, i32 a, i32 alen),
    draw_pie(&RectType arg0, i32 a, i32 alen),
    draw_chord(&RectFType rect, i32 a, i32 alen),
    draw_chord(i32 x, i32 y, i32 w, i32 h, i32 a, i32 alen),
    draw_chord(&RectType arg0, i32 a, i32 alen),
    draw_rounded_rect(&RectFType rect, f32 x_radius, f32 y_radius, Rute::SizeMode mode),
    draw_rounded_rect(i32 x, i32 y, i32 w, i32 h, f32 x_radius, f32 y_radius, Rute::SizeMode mode),
    draw_rounded_rect(&RectType rect, f32 x_radius, f32 y_radius, Rute::SizeMode mode),
    draw_round_rect(&RectFType r, i32 xround, i32 yround),
    draw_round_rect(i32 x, i32 y, i32 w, i32 h, i32 arg0, i32 arg1),
    draw_round_rect(&RectType r, i32 xround, i32 yround),
    draw_tiled_pixmap(&RectFType rect, &PixmapType pm, &PointFType offset),
    draw_tiled_pixmap(i32 x, i32 y, i32 w, i32 h, &PixmapType arg0, i32 sx, i32 sy),
    draw_tiled_pixmap(&RectType arg0, &PixmapType arg1, &PointType arg2),
    draw_picture(&PointFType p, &PictureType picture),
    draw_picture(i32 x, i32 y, &PictureType picture),
    draw_picture(&PointType p, &PictureType picture),
    draw_pixmap(&RectFType target_rect, &PixmapType pixmap, &RectFType source_rect),
    draw_pixmap(&RectType target_rect, &PixmapType pixmap, &RectType source_rect),
    draw_pixmap(i32 x, i32 y, i32 w, i32 h, &PixmapType pm, i32 sx, i32 sy, i32 sw, i32 sh),
    draw_pixmap(i32 x, i32 y, &PixmapType pm, i32 sx, i32 sy, i32 sw, i32 sh),
    draw_pixmap(&PointFType p, &PixmapType pm, &RectFType sr),
    draw_pixmap(&PointType p, &PixmapType pm, &RectType sr),
    draw_pixmap(&PointFType p, &PixmapType pm),
    draw_pixmap(&PointType p, &PixmapType pm),
    draw_pixmap(i32 x, i32 y, &PixmapType pm),
    draw_pixmap(&RectType r, &PixmapType pm),
    draw_pixmap(i32 x, i32 y, i32 w, i32 h, &PixmapType pm),
    draw_pixmap_fragments(onst QPainter::PixmapFragment * fragments, i32 fragment_count, &PixmapType pixmap, PixmapFragmentHints hints),
    draw_image(&RectFType target_rect, &ImageType image, &RectFType source_rect, Rute::ImageConversionFlags flags),
    draw_image(&RectType target_rect, &ImageType image, &RectType source_rect, Rute::ImageConversionFlags flags),
    draw_image(&PointFType p, &ImageType image, &RectFType sr, Rute::ImageConversionFlags flags),
    draw_image(&PointType p, &ImageType image, &RectType sr, Rute::ImageConversionFlags flags),
    draw_image(&RectFType r, &ImageType image),
    draw_image(&RectType r, &ImageType image),
    draw_image(&PointFType p, &ImageType image),
    draw_image(&PointType p, &ImageType image),
    draw_image(i32 x, i32 y, &ImageType image, i32 sx, i32 sy, i32 sw, i32 sh, Rute::ImageConversionFlags flags),
    set_layout_direction(Rute::LayoutDirection direction),
    layout_direction() -> Rute::LayoutDirection,
    draw_glyph_run(&PointFType position, &GlyphRunType glyph_run),
    draw_static_text(&PointFType top_left_position, &StaticTextType static_text),
    draw_static_text(&PointType top_left_position, &StaticTextType static_text),
    draw_static_text(i32 left, i32 top, &StaticTextType static_text),
    draw_text(&PointFType p, String s),
    draw_text(&PointType p, String s),
    draw_text(i32 x, i32 y, String s),
    draw_text(&PointFType p, String str, i32 tf, i32 justification_padding),
    draw_text(&RectFType r, i32 flags, String text, &RectFType br),
    draw_text(&RectType r, i32 flags, String text, &RectType br),
    draw_text(i32 x, i32 y, i32 w, i32 h, i32 flags, String text, &RectType br),
    draw_text(&RectFType r, String text, &TextOptionType o),
    bounding_rect(&RectFType rect, i32 flags, String text) -> RectFType,
    bounding_rect(&RectType rect, i32 flags, String text) -> RectType,
    bounding_rect(i32 x, i32 y, i32 w, i32 h, i32 flags, String text) -> RectType,
    bounding_rect(&RectFType rect, String text, &TextOptionType o) -> RectFType,
    draw_text_item(&PointFType p, &TextItemType ti),
    draw_text_item(i32 x, i32 y, &TextItemType ti),
    draw_text_item(&PointType p, &TextItemType ti),
    fill_rect(&RectFType arg0, &BrushType arg1),
    fill_rect(i32 x, i32 y, i32 w, i32 h, &BrushType arg0),
    fill_rect(&RectType arg0, &BrushType arg1),
    fill_rect(&RectFType arg0, &ColorType color),
    fill_rect(i32 x, i32 y, i32 w, i32 h, &ColorType color),
    fill_rect(&RectType arg0, &ColorType color),
    fill_rect(i32 x, i32 y, i32 w, i32 h, Rute::GlobalColor c),
    fill_rect(&RectType r, Rute::GlobalColor c),
    fill_rect(&RectFType r, Rute::GlobalColor c),
    fill_rect(i32 x, i32 y, i32 w, i32 h, Rute::BrushStyle style),
    fill_rect(&RectType r, Rute::BrushStyle style),
    fill_rect(&RectFType r, Rute::BrushStyle style),
    erase_rect(&RectFType arg0),
    erase_rect(i32 x, i32 y, i32 w, i32 h),
    erase_rect(&RectType arg0),
    set_render_hint(Painter::RenderHint hint, bool on),
    set_render_hints(RenderHints hints, bool on),
    render_hints() -> RenderHints,
    test_render_hint(Painter::RenderHint hint) -> bool,
    paint_engine() -> &PaintEngineType,
    set_redirected(&PaintDeviceType device, &PaintDeviceType replacement, &PointType offset),
    redirected(&PaintDeviceType device, &PointType offset) -> &PaintDeviceType,
    restore_redirected(&PaintDeviceType device),
    begin_native_painting(),
    end_native_painting(),
}

// vim: syntax=rust expandtab ts=4 sw=4
