///     \class QTextObject
///     \reentrant
/// 
///     \brief The QTextObject class is a base class for different kinds
///     of objects that can group parts of a QTextDocument together.
///     \inmodule QtGui
/// 
///     \ingroup richtext-processing
/// 
///     The common grouping text objects are lists (QTextList), frames
///     (QTextFrame), and tables (QTextTable). A text object has an
///     associated format() and document().
/// 
///     There are essentially two kinds of text objects: those that are used
///     with blocks (block formats), and those that are used with characters
///     (character formats). The first kind are derived from QTextBlockGroup,
///     and the second kind from QTextFrame.
/// 
///     You rarely need to use this class directly. When creating custom text
///     objects, you will also need to reimplement QTextDocument::createObject()
///     which acts as a factory method for creating text objects.
/// 
///     \sa QTextDocument, {Text Object Example}
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct TextObject : Object {
    ///     Sets the text object's \a format.
    /// 
    ///     \sa format()
    set_format(format: &TextFormatType),
    ///     Returns the text object's format.
    /// 
    ///     \sa setFormat(), document()
    format() -> TextFormat,
    ///     Returns the index of the object's format in the document's internal
    ///     list of formats.
    /// 
    ///     \sa QTextDocument::allFormats()
    format_index() -> i32,
    ///     Returns the document this object belongs to.
    /// 
    ///     \sa format()
    document() -> TextDocument?,
    ///     Returns the object index of this object. This can be used together with
    ///     QTextFormat::setObjectIndex().
    object_index() -> i32,
    ///   \internal
    doc_handle() -> TextDocumentPrivate?,
}

// vim: syntax=rust expandtab ts=4 sw=4
