struct MdiArea : AbstractScrollArea {
    size_hint() -> SizeType,
    minimum_size_hint() -> SizeType,
    current_sub_window() -> &MdiSubWindowType,
    active_sub_window() -> &MdiSubWindowType,
    sub_window_list(order: MdiArea::WindowOrder) -> [&MdiSubWindowType],
    add_sub_window(widget: &WidgetType, flags: Rute::WindowFlags) -> &MdiSubWindowType,
    remove_sub_window(widget: &WidgetType),
    background() -> BrushType,
    set_background(background: &BrushType),
    activation_order() -> MdiArea::WindowOrder,
    set_activation_order(order: MdiArea::WindowOrder),
    set_option(option: MdiArea::AreaOption, on: bool),
    test_option(opton: MdiArea::AreaOption) -> bool,
    set_view_mode(mode: MdiArea::ViewMode),
    view_mode() -> MdiArea::ViewMode,
    document_mode() -> bool,
    set_document_mode(enabled: bool),
    set_tabs_closable(closable: bool),
    tabs_closable() -> bool,
    set_tabs_movable(movable: bool),
    tabs_movable() -> bool,
    set_tab_shape(shape: TabWidget::TabShape),
    tab_shape() -> TabWidget::TabShape,
    set_tab_position(position: TabWidget::TabPosition),
    tab_position() -> TabWidget::TabPosition,
    [callback] sub_window_activated(arg0: &MdiSubWindowType),
    set_active_sub_window(window: &MdiSubWindowType),
    tile_sub_windows(),
    cascade_sub_windows(),
    close_active_sub_window(),
    close_all_sub_windows(),
    activate_next_sub_window(),
    activate_previous_sub_window(),
    setup_viewport(viewport: &WidgetType),
    event(event: &EventType) -> bool,
    event_filter(object: &ObjectType, event: &EventType) -> bool,
    paint_event(paint_event: &PaintEventType),
    child_event(child_event: &ChildEventType),
    resize_event(resize_event: &ResizeEventType),
    timer_event(timer_event: &TimerEventType),
    show_event(show_event: &ShowEventType),
    viewport_event(event: &EventType) -> bool,
    scroll_contents_by(dx: i32, dy: i32),
}

// vim: syntax=rust expandtab ts=4 sw=4
