struct MdiArea : AbstractScrollArea {
    size_hint() -> SizeType,
    minimum_size_hint() -> SizeType,
    current_sub_window() -> &MdiSubWindowType,
    active_sub_window() -> &MdiSubWindowType,
    sub_window_list(MdiArea::WindowOrder order) -> <&MdiSubWindowType>,
    add_sub_window(&WidgetType widget, Rute::WindowFlags flags) -> &MdiSubWindowType,
    remove_sub_window(&WidgetType widget),
    background() -> BrushType,
    set_background(&BrushType background),
    activation_order() -> MdiArea::WindowOrder,
    set_activation_order(MdiArea::WindowOrder order),
    set_option(MdiArea::AreaOption option, bool on),
    test_option(MdiArea::AreaOption opton) -> bool,
    set_view_mode(MdiArea::ViewMode mode),
    view_mode() -> MdiArea::ViewMode,
    document_mode() -> bool,
    set_document_mode(bool enabled),
    set_tabs_closable(bool closable),
    tabs_closable() -> bool,
    set_tabs_movable(bool movable),
    tabs_movable() -> bool,
    set_tab_shape(TabWidget::TabShape shape),
    tab_shape() -> TabWidget::TabShape,
    set_tab_position(TabWidget::TabPosition position),
    tab_position() -> TabWidget::TabPosition,
    sub_window_activated(&MdiSubWindowType arg0),
    set_active_sub_window(&MdiSubWindowType window),
    tile_sub_windows(),
    cascade_sub_windows(),
    close_active_sub_window(),
    close_all_sub_windows(),
    activate_next_sub_window(),
    activate_previous_sub_window(),
    setup_viewport(&WidgetType viewport),
    event(&EventType event) -> bool,
    event_filter(&ObjectType object, &EventType event) -> bool,
    paint_event(&PaintEventType paint_event),
    child_event(&ChildEventType child_event),
    resize_event(&ResizeEventType resize_event),
    timer_event(&TimerEventType timer_event),
    show_event(&ShowEventType show_event),
    viewport_event(&EventType event) -> bool,
    scroll_contents_by(i32 dx, i32 dy),
}

