struct GuiApplication : CoreApplication {
    set_application_display_name(name: String),
    application_display_name() -> String,
    set_desktop_file_name(name: String),
    desktop_file_name() -> String,
    all_windows() -> WindowListType,
    top_level_windows() -> WindowListType,
    top_level_at(pos: &PointType) -> &WindowType,
    set_window_icon(icon: &IconType),
    window_icon() -> IconType,
    platform_name() -> String,
    modal_window() -> &WindowType,
    focus_window() -> &WindowType,
    focus_object() -> &ObjectType,
    primary_screen() -> &ScreenType,
    screens() -> [&ScreenType],
    screen_at(point: &PointType) -> &ScreenType,
    device_pixel_ratio() -> f32,
    override_cursor() -> &CursorType,
    set_override_cursor(arg0: &CursorType),
    change_override_cursor(arg0: &CursorType),
    restore_override_cursor(),
    font() -> FontType,
    set_font(arg0: &FontType),
    clipboard() -> &ClipboardType,
    palette() -> PaletteType,
    set_palette(pal: &PaletteType),
    keyboard_modifiers() -> Rute::KeyboardModifiers,
    query_keyboard_modifiers() -> Rute::KeyboardModifiers,
    mouse_buttons() -> Rute::MouseButtons,
    set_layout_direction(direction: Rute::LayoutDirection),
    layout_direction() -> Rute::LayoutDirection,
    is_right_to_left() -> bool,
    is_left_to_right() -> bool,
    style_hints() -> &StyleHintsType,
    set_desktop_settings_aware(on: bool),
    desktop_settings_aware() -> bool,
    input_method() -> &InputMethodType,
    platform_native_interface() -> &PlatformNativeInterfaceType,
    platform_function(function: &ByteArrayType) -> FunctionPointerType,
    set_quit_on_last_window_closed(quit: bool),
    quit_on_last_window_closed() -> bool,
    application_state() -> Rute::ApplicationState,
    exec() -> i32,
    notify(arg0: &ObjectType, arg1: &EventType) -> bool,
    is_session_restored() -> bool,
    session_id() -> String,
    session_key() -> String,
    is_saving_session() -> bool,
    is_fallback_session_management_enabled() -> bool,
    set_fallback_session_management_enabled(arg0: bool),
    sync(),
    [callback] font_database_changed(),
    [callback] screen_added(screen: &ScreenType),
    [callback] screen_removed(screen: &ScreenType),
    [callback] primary_screen_changed(screen: &ScreenType),
    [callback] last_window_closed(),
    [callback] focus_object_changed(focus_object: &ObjectType),
    [callback] focus_window_changed(focus_window: &WindowType),
    [callback] application_state_changed(state: Rute::ApplicationState),
    [callback] layout_direction_changed(direction: Rute::LayoutDirection),
    [callback] commit_data_request(session_manager: &SessionManagerType),
    [callback] save_state_request(session_manager: &SessionManagerType),
    [callback] palette_changed(pal: &PaletteType),
    [callback] application_display_name_changed(),
    event(arg0: &EventType) -> bool,
    compress_event(arg0: &EventType, receiver: &ObjectType, arg1: &PostEventListType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
