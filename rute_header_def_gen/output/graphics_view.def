struct GraphicsView : AbstractScrollArea {
    size_hint() -> SizeType,
    render_hints() -> Painter::RenderHints,
    set_render_hint(Painter::RenderHint hint, bool enabled),
    set_render_hints(Painter::RenderHints hints),
    alignment() -> Rute::Alignment,
    set_alignment(Rute::Alignment alignment),
    set_transformation_anchor(GraphicsView::ViewportAnchor anchor),
    resize_anchor() -> GraphicsView::ViewportAnchor,
    set_resize_anchor(GraphicsView::ViewportAnchor anchor),
    viewport_update_mode() -> GraphicsView::ViewportUpdateMode,
    set_viewport_update_mode(GraphicsView::ViewportUpdateMode mode),
    optimization_flags() -> OptimizationFlags,
    set_optimization_flag(GraphicsView::OptimizationFlag flag, bool enabled),
    set_optimization_flags(OptimizationFlags flags),
    drag_mode() -> GraphicsView::DragMode,
    set_drag_mode(GraphicsView::DragMode mode),
    rubber_band_selection_mode() -> Rute::ItemSelectionMode,
    set_rubber_band_selection_mode(Rute::ItemSelectionMode mode),
    rubber_band_rect() -> RectType,
    cache_mode() -> CacheMode,
    set_cache_mode(CacheMode mode),
    reset_cached_content(),
    is_interactive() -> bool,
    set_interactive(bool allowed),
    scene() -> &GraphicsSceneType,
    set_scene(&GraphicsSceneType scene),
    scene_rect() -> RectFType,
    set_scene_rect(&RectFType rect),
    set_scene_rect(f32 x, f32 y, f32 w, f32 h),
    viewport_transform() -> TransformType,
    is_transformed() -> bool,
    set_transform(&TransformType matrix, bool combine),
    reset_transform(),
    rotate(f32 angle),
    scale(f32 sx, f32 sy),
    shear(f32 sh, f32 sv),
    center_on(&PointFType pos),
    center_on(f32 x, f32 y),
    center_on(&GraphicsItemType item),
    ensure_visible(&RectFType rect, i32 xmargin, i32 ymargin),
    ensure_visible(f32 x, f32 y, f32 w, f32 h, i32 xmargin, i32 ymargin),
    ensure_visible(&GraphicsItemType item, i32 xmargin, i32 ymargin),
    fit_in_view(&RectFType rect, Rute::AspectRatioMode aspect_radio_mode),
    fit_in_view(f32 x, f32 y, f32 w, f32 h, Rute::AspectRatioMode aspect_radio_mode),
    fit_in_view(&GraphicsItemType item, Rute::AspectRatioMode aspect_radio_mode),
    render(&PainterType painter, &RectFType target, &RectType source, Rute::AspectRatioMode aspect_ratio_mode),
    items() -> <&GraphicsItemType>,
    items(&PointType pos) -> <&GraphicsItemType>,
    items(i32 x, i32 y) -> <&GraphicsItemType>,
    items(&RectType rect, Rute::ItemSelectionMode mode) -> <&GraphicsItemType>,
    items(i32 x, i32 y, i32 w, i32 h, Rute::ItemSelectionMode mode) -> <&GraphicsItemType>,
    items(&PolygonType polygon, Rute::ItemSelectionMode mode) -> <&GraphicsItemType>,
    items(&PainterPathType path, Rute::ItemSelectionMode mode) -> <&GraphicsItemType>,
    item_at(&PointType pos) -> &GraphicsItemType,
    item_at(i32 x, i32 y) -> &GraphicsItemType,
    map_to_scene(&PointType point) -> PointFType,
    map_to_scene(&RectType rect) -> PolygonFType,
    map_to_scene(&PolygonType polygon) -> PolygonFType,
    map_to_scene(&PainterPathType path) -> PainterPathType,
    map_from_scene(&PointFType point) -> PointType,
    map_from_scene(&RectFType rect) -> PolygonType,
    map_from_scene(&PolygonFType polygon) -> PolygonType,
    map_from_scene(&PainterPathType path) -> PainterPathType,
    map_to_scene(i32 x, i32 y) -> PointFType,
    map_to_scene(i32 x, i32 y, i32 w, i32 h) -> PolygonFType,
    map_from_scene(f32 x, f32 y) -> PointType,
    map_from_scene(f32 x, f32 y, f32 w, f32 h) -> PolygonType,
    input_method_query(Rute::InputMethodQuery query) -> VariantType,
    background_brush() -> BrushType,
    set_background_brush(&BrushType brush),
    foreground_brush() -> BrushType,
    set_foreground_brush(&BrushType brush),
    update_scene(<RectFType> rects),
    invalidate_scene(&RectFType rect, GraphicsScene::SceneLayers layers),
    update_scene_rect(&RectFType rect),
    [callback] rubber_band_changed(RectType viewport_rect, PointFType from_scene_point, PointFType to_scene_point),
    setup_viewport(&WidgetType widget),
    event(&EventType event) -> bool,
    viewport_event(&EventType event) -> bool,
    context_menu_event(&ContextMenuEventType event),
    drag_enter_event(&DragEnterEventType event),
    drag_leave_event(&DragLeaveEventType event),
    drag_move_event(&DragMoveEventType event),
    drop_event(&DropEventType event),
    focus_in_event(&FocusEventType event),
    focus_next_prev_child(bool next) -> bool,
    focus_out_event(&FocusEventType event),
    key_press_event(&KeyEventType event),
    key_release_event(&KeyEventType event),
    mouse_double_click_event(&MouseEventType event),
    mouse_press_event(&MouseEventType event),
    mouse_move_event(&MouseEventType event),
    mouse_release_event(&MouseEventType event),
    wheel_event(&WheelEventType event),
    paint_event(&PaintEventType event),
    resize_event(&ResizeEventType event),
    scroll_contents_by(i32 dx, i32 dy),
    show_event(&ShowEventType event),
    input_method_event(&InputMethodEventType event),
    draw_background(&PainterType painter, &RectFType rect),
    draw_foreground(&PainterType painter, &RectFType rect),
    draw_items(&PainterType painter, i32 num_items, &GraphicsItemType items, StyleOptionGraphicsItemType options),
}

// vim: syntax=rust expandtab ts=4 sw=4
