///     \class QAccessibleEvent
///     \ingroup accessibility
///     \inmodule QtGui
/// 
///     \brief The QAccessibleEvent class is the base class for accessibility notifications.
/// 
///     This class is used with \l QAccessible::updateAccessibility().
/// 
///     The event type is one of the values of \l QAccessible::Event.
///     There are a number of subclasses that should be used to provide more details about the
///     event.
/// 
///     For example to notify about a focus change when re-implementing QWidget::setFocus,
///     the event could be used as follows:
///     \code
///     void MyWidget::setFocus(Qt::FocusReason reason)
///     {
///         // handle custom focus setting...
///         QAccessibleEvent event(f, QAccessible::Focus);
///         QAccessible::updateAccessibility(&event);
///     }
///     \endcode
/// 
///     To enable in process screen readers, all events must be sent after the change has happened.

struct AccessibleEvent {
    type() -> Accessible::Event,
    object() -> Object?,
    ///     \internal
    ///     Returns the uniqueId of the QAccessibleInterface represented by this event.
    /// 
    ///     In case the object() function returns 0 this is the only way to access the
    ///     interface.
    unique_id() -> Accessible::Id,
    set_child(chld: i32),
    child() -> i32,
    ///     Returns the QAccessibleInterface associated with the event.
    [event] accessible_interface() -> AccessibleInterface?,
}

// vim: syntax=rust expandtab ts=4 sw=4
