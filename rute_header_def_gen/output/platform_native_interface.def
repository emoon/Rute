struct PlatformNativeInterface : Object {
    [event] native_resource_for_integration(resource: &ByteArrayType),
    [event] native_resource_for_context(resource: &ByteArrayType, context: *OpenGLContextType),
    [event] native_resource_for_screen(resource: &ByteArrayType, screen: *ScreenType),
    [event] native_resource_for_window(resource: &ByteArrayType, window: *WindowType),
    [event] native_resource_for_backing_store(resource: &ByteArrayType, backing_store: *BackingStoreType),
    [event] native_resource_for_cursor(resource: &ByteArrayType, cursor: &CursorType),
    [event] native_resource_function_for_integration(resource: &ByteArrayType) -> PlatformNativeInterface::NativeResourceForIntegrationFunction,
    [event] native_resource_function_for_context(resource: &ByteArrayType) -> PlatformNativeInterface::NativeResourceForContextFunction,
    [event] native_resource_function_for_screen(resource: &ByteArrayType) -> PlatformNativeInterface::NativeResourceForScreenFunction,
    [event] native_resource_function_for_window(resource: &ByteArrayType) -> PlatformNativeInterface::NativeResourceForWindowFunction,
    [event] native_resource_function_for_backing_store(resource: &ByteArrayType) -> PlatformNativeInterface::NativeResourceForBackingStoreFunction,
    [event] platform_function(function: &ByteArrayType) -> FunctionPointer,
    [event] window_properties(window: *PlatformWindowType) -> VariantMap,
    [event] window_property(window: *PlatformWindowType, name: String) -> Variant,
    [event] window_property(window: *PlatformWindowType, name: String, default_value: &VariantType) -> Variant,
    [event] set_window_property(window: *PlatformWindowType, name: String, value: &VariantType),
    [signal] window_property_changed(window: *PlatformWindowType, property_name: String),
}

// vim: syntax=rust expandtab ts=4 sw=4
