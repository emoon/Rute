#[org_name(QOpenGLFunctions)]
enum OpenGLFeature {
    Multitexture,
    Shaders,
    Buffers,
    Framebuffers,
    BlendColor,
    BlendEquation,
    BlendEquationSeparate,
    BlendFuncSeparate,
    BlendSubtract,
    CompressedTextures,
    Multisample,
    StencilSeparate,
    NPOTTextures,
    NPOTTextureRepeat,
    FixedFunctionPipeline,
    TextureRGFormats,
    MultipleRenderTargets,
}


struct OpenGLFunctions {
    open_gl_features() -> OpenGLFunctions::OpenGLFeatures,
    has_open_gl_feature(feature: OpenGLFunctions::OpenGLFeature) -> bool,
    initialize_open_gl_functions(),
    gl_bind_texture(target: GLenum, texture: GLuint),
    gl_blend_func(sfactor: GLenum, dfactor: GLenum),
    gl_clear(mask: GLbitfield),
    gl_clear_color(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf),
    gl_clear_stencil(s: GLint),
    gl_color_mask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean),
    gl_copy_tex_image2_d(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint),
    gl_copy_tex_sub_image2_d(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei),
    gl_cull_face(mode: GLenum),
    gl_delete_textures(n: GLsizei, textures: &GLuint),
    gl_depth_func(func: GLenum),
    gl_depth_mask(flag: GLboolean),
    gl_disable(cap: GLenum),
    gl_draw_arrays(mode: GLenum, first: GLint, count: GLsizei),
    gl_draw_elements(mode: GLenum, count: GLsizei, type: GLenum, indices: &GLvoid),
    gl_enable(cap: GLenum),
    gl_finish(),
    gl_flush(),
    gl_front_face(mode: GLenum),
    gl_gen_textures(n: GLsizei, textures: &GLuint),
    gl_get_booleanv(pname: GLenum, params: &GLboolean),
    gl_get_error() -> GLenum,
    gl_get_floatv(pname: GLenum, params: &GLfloat),
    gl_get_integerv(pname: GLenum, params: &GLint),
    gl_get_tex_parameterfv(target: GLenum, pname: GLenum, params: &GLfloat),
    gl_get_tex_parameteriv(target: GLenum, pname: GLenum, params: &GLint),
    gl_hint(target: GLenum, mode: GLenum),
    gl_is_enabled(cap: GLenum) -> GLboolean,
    gl_is_texture(texture: GLuint) -> GLboolean,
    gl_line_width(width: GLfloat),
    gl_pixel_storei(pname: GLenum, param: GLint),
    gl_polygon_offset(factor: GLfloat, units: GLfloat),
    gl_read_pixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: &GLvoid),
    gl_scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei),
    gl_stencil_func(func: GLenum, ref: GLint, mask: GLuint),
    gl_stencil_mask(mask: GLuint),
    gl_stencil_op(fail: GLenum, zfail: GLenum, zpass: GLenum),
    gl_tex_image2_d(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: &GLvoid),
    gl_tex_parameterf(target: GLenum, pname: GLenum, param: GLfloat),
    gl_tex_parameterfv(target: GLenum, pname: GLenum, params: &GLfloat),
    gl_tex_parameteri(target: GLenum, pname: GLenum, param: GLint),
    gl_tex_parameteriv(target: GLenum, pname: GLenum, params: &GLint),
    gl_tex_sub_image2_d(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: &GLvoid),
    gl_viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei),
    gl_active_texture(texture: GLenum),
    gl_attach_shader(program: GLuint, shader: GLuint),
    gl_bind_buffer(target: GLenum, buffer: GLuint),
    gl_bind_framebuffer(target: GLenum, framebuffer: GLuint),
    gl_bind_renderbuffer(target: GLenum, renderbuffer: GLuint),
    gl_blend_color(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf),
    gl_blend_equation(mode: GLenum),
    gl_blend_equation_separate(mode_rgb: GLenum, mode_alpha: GLenum),
    gl_blend_func_separate(src_rgb: GLenum, dst_rgb: GLenum, src_alpha: GLenum, dst_alpha: GLenum),
    gl_buffer_data(target: GLenum, size: qopengl_GLsizeiptr, data: &void, usage: GLenum),
    gl_buffer_sub_data(target: GLenum, offset: qopengl_GLintptr, size: qopengl_GLsizeiptr, data: &void),
    gl_check_framebuffer_status(target: GLenum) -> GLenum,
    gl_clear_depthf(depth: GLclampf),
    gl_compile_shader(shader: GLuint),
    gl_compressed_tex_image2_d(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, image_size: GLsizei, data: &void),
    gl_compressed_tex_sub_image2_d(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, image_size: GLsizei, data: &void),
    gl_create_program() -> GLuint,
    gl_create_shader(type: GLenum) -> GLuint,
    gl_delete_buffers(n: GLsizei, buffers: &GLuint),
    gl_delete_framebuffers(n: GLsizei, framebuffers: &GLuint),
    gl_delete_program(program: GLuint),
    gl_delete_renderbuffers(n: GLsizei, renderbuffers: &GLuint),
    gl_delete_shader(shader: GLuint),
    gl_depth_rangef(z_near: GLclampf, z_far: GLclampf),
    gl_detach_shader(program: GLuint, shader: GLuint),
    gl_framebuffer_renderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint),
    gl_framebuffer_texture2_d(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint),
    gl_gen_buffers(n: GLsizei, buffers: &GLuint),
    gl_generate_mipmap(target: GLenum),
    gl_gen_framebuffers(n: GLsizei, framebuffers: &GLuint),
    gl_gen_renderbuffers(n: GLsizei, renderbuffers: &GLuint),
    gl_get_active_uniform(program: GLuint, index: GLuint, bufsize: GLsizei, length: &GLsizei, size: &GLint, type: &GLenum, name: &char),
    gl_get_attached_shaders(program: GLuint, maxcount: GLsizei, count: &GLsizei, shaders: &GLuint),
    gl_get_buffer_parameteriv(target: GLenum, pname: GLenum, params: &GLint),
    gl_get_framebuffer_attachment_parameteriv(target: GLenum, attachment: GLenum, pname: GLenum, params: &GLint),
    gl_get_programiv(program: GLuint, pname: GLenum, params: &GLint),
    gl_get_program_info_log(program: GLuint, bufsize: GLsizei, length: &GLsizei, infolog: &char),
    gl_get_renderbuffer_parameteriv(target: GLenum, pname: GLenum, params: &GLint),
    gl_get_shaderiv(shader: GLuint, pname: GLenum, params: &GLint),
    gl_get_shader_info_log(shader: GLuint, bufsize: GLsizei, length: &GLsizei, infolog: &char),
    gl_get_shader_precision_format(shadertype: GLenum, precisiontype: GLenum, range: &GLint, precision: &GLint),
    gl_get_shader_source(shader: GLuint, bufsize: GLsizei, length: &GLsizei, source: &char),
    gl_get_uniformfv(program: GLuint, location: GLint, params: &GLfloat),
    gl_get_uniformiv(program: GLuint, location: GLint, params: &GLint),
    gl_get_uniform_location(program: GLuint, name: &char) -> GLint,
    gl_is_buffer(buffer: GLuint) -> GLboolean,
    gl_is_framebuffer(framebuffer: GLuint) -> GLboolean,
    gl_is_program(program: GLuint) -> GLboolean,
    gl_is_renderbuffer(renderbuffer: GLuint) -> GLboolean,
    gl_is_shader(shader: GLuint) -> GLboolean,
    gl_link_program(program: GLuint),
    gl_release_shader_compiler(),
    gl_renderbuffer_storage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei),
    gl_sample_coverage(value: GLclampf, invert: GLboolean),
    gl_shader_binary(n: GLint, shaders: &GLuint, binaryformat: GLenum, binary: &void, length: GLint),
    gl_shader_source(shader: GLuint, count: GLsizei, string: &char, length: &GLint),
    gl_stencil_func_separate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint),
    gl_stencil_mask_separate(face: GLenum, mask: GLuint),
    gl_stencil_op_separate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum),
    gl_uniform1f(location: GLint, x: GLfloat),
    gl_uniform1fv(location: GLint, count: GLsizei, v: &GLfloat),
    gl_uniform1i(location: GLint, x: GLint),
    gl_uniform1iv(location: GLint, count: GLsizei, v: &GLint),
    gl_uniform2f(location: GLint, x: GLfloat, y: GLfloat),
    gl_uniform2fv(location: GLint, count: GLsizei, v: &GLfloat),
    gl_uniform2i(location: GLint, x: GLint, y: GLint),
    gl_uniform2iv(location: GLint, count: GLsizei, v: &GLint),
    gl_uniform3f(location: GLint, x: GLfloat, y: GLfloat, z: GLfloat),
    gl_uniform3fv(location: GLint, count: GLsizei, v: &GLfloat),
    gl_uniform3i(location: GLint, x: GLint, y: GLint, z: GLint),
    gl_uniform3iv(location: GLint, count: GLsizei, v: &GLint),
    gl_uniform4f(location: GLint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat),
    gl_uniform4fv(location: GLint, count: GLsizei, v: &GLfloat),
    gl_uniform4i(location: GLint, x: GLint, y: GLint, z: GLint, w: GLint),
    gl_uniform4iv(location: GLint, count: GLsizei, v: &GLint),
    gl_use_program(program: GLuint),
    gl_validate_program(program: GLuint),
    [static] is_initialized(d: &OpenGLFunctionsPrivateType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
