
struct Matrix {
    m11() -> f32,
    m12() -> f32,
    m21() -> f32,
    m22() -> f32,
    dx() -> f32,
    dy() -> f32,
    map(x: i32, y: i32, tx: &i32, ty: &i32),
    map(x: f32, y: f32, tx: &f32, ty: &f32),
    map_rect(arg0: &RectType) -> RectType,
    map_rect(arg0: &RectFType) -> RectFType,
    map(p: &PointType) -> PointType,
    map(p: &PointFType) -> PointFType,
    map(l: &LineType) -> LineType,
    map(l: &LineFType) -> LineFType,
    map(a: &PolygonFType) -> PolygonFType,
    map(a: &PolygonType) -> PolygonType,
    map(r: &RegionType) -> RegionType,
    map(p: &PainterPathType) -> PainterPathType,
    map_to_polygon(r: &RectType) -> PolygonType,
    reset(),
    is_identity() -> bool,
    scale(sx: f32, sy: f32) -> &MatrixType,
    shear(sh: f32, sv: f32) -> &MatrixType,
    rotate(a: f32) -> &MatrixType,
    is_invertible() -> bool,
    determinant() -> f32,
    inverted(invertible: &bool) -> MatrixType,
}

// vim: syntax=rust expandtab ts=4 sw=4
