struct MdiSubWindow : Widget {
    size_hint() -> SizeType,
    minimum_size_hint() -> SizeType,
    set_widget(&WidgetType widget),
    widget() -> &WidgetType,
    maximized_buttons_widget() -> &WidgetType,
    maximized_system_menu_icon_widget() -> &WidgetType,
    is_shaded() -> bool,
    set_option(MdiSubWindow::SubWindowOption option, bool on),
    test_option(MdiSubWindow::SubWindowOption arg0) -> bool,
    set_keyboard_single_step(i32 step),
    keyboard_single_step() -> i32,
    set_keyboard_page_step(i32 step),
    keyboard_page_step() -> i32,
    set_system_menu(&MenuType system_menu),
    system_menu() -> &MenuType,
    mdi_area() -> &MdiAreaType,
    window_state_changed(Rute::WindowStates old_state, Rute::WindowStates new_state),
    about_to_activate(),
    [callback] show_system_menu(),
    [callback] show_shaded(),
    event_filter(&ObjectType object, &EventType event) -> bool,
    event(&EventType event) -> bool,
    show_event(&ShowEventType show_event),
    hide_event(&HideEventType hide_event),
    change_event(&EventType change_event),
    close_event(&CloseEventType close_event),
    leave_event(&EventType leave_event),
    resize_event(&ResizeEventType resize_event),
    timer_event(&TimerEventType timer_event),
    move_event(&MoveEventType move_event),
    paint_event(&PaintEventType paint_event),
    mouse_press_event(&MouseEventType mouse_event),
    mouse_double_click_event(&MouseEventType mouse_event),
    mouse_release_event(&MouseEventType mouse_event),
    mouse_move_event(&MouseEventType mouse_event),
    key_press_event(&KeyEventType key_event),
    context_menu_event(&ContextMenuEventType context_menu_event),
    focus_in_event(&FocusEventType focus_in_event),
    focus_out_event(&FocusEventType focus_out_event),
    child_event(&ChildEventType child_event),
}

// vim: syntax=rust expandtab ts=4 sw=4
