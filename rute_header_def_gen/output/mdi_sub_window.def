[org_name(QMdiSubWindow)]
enum SubWindowOption {
    AllowOutsideAreaHorizontally,
    AllowOutsideAreaVertically,
    RubberBandResize,
    RubberBandMove,
}

struct MdiSubWindow : Widget {
    [event] size_hint() -> Size,
    [event] minimum_size_hint() -> Size,
    set_widget(widget: *WidgetType),
    widget() -> Widget?,
    maximized_buttons_widget() -> Widget?,
    maximized_system_menu_icon_widget() -> Widget?,
    is_shaded() -> bool,
    set_option(option: MdiSubWindow::SubWindowOption, on: bool),
    test_option(arg0: MdiSubWindow::SubWindowOption) -> bool,
    set_keyboard_single_step(step: i32),
    keyboard_single_step() -> i32,
    set_keyboard_page_step(step: i32),
    keyboard_page_step() -> i32,
    set_system_menu(system_menu: *MenuType),
    system_menu() -> Menu?,
    mdi_area() -> MdiArea?,
    [signal] window_state_changed(old_state: Rute::WindowStates, new_state: Rute::WindowStates),
    [signal] about_to_activate(),
    show_system_menu(),
    show_shaded(),
    [event] event_filter(object: *ObjectType, event: *EventType) -> bool,
    [event] event(event: *EventType) -> bool,
    [event] show_event(show_event: *ShowEventType),
    [event] hide_event(hide_event: *HideEventType),
    [event] change_event(change_event: *EventType),
    [event] close_event(close_event: *CloseEventType),
    [event] leave_event(leave_event: *EventType),
    [event] resize_event(resize_event: *ResizeEventType),
    [event] timer_event(timer_event: *TimerEventType),
    [event] move_event(move_event: *MoveEventType),
    [event] paint_event(paint_event: *PaintEventType),
    [event] mouse_press_event(mouse_event: *MouseEventType),
    [event] mouse_double_click_event(mouse_event: *MouseEventType),
    [event] mouse_release_event(mouse_event: *MouseEventType),
    [event] mouse_move_event(mouse_event: *MouseEventType),
    [event] key_press_event(key_event: *KeyEventType),
    [event] context_menu_event(context_menu_event: *ContextMenuEventType),
    [event] focus_in_event(focus_in_event: *FocusEventType),
    [event] focus_out_event(focus_out_event: *FocusEventType),
    [event] child_event(child_event: *ChildEventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
