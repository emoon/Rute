struct MdiSubWindow : Widget {
    size_hint() -> SizeType,
    minimum_size_hint() -> SizeType,
    set_widget(widget: &WidgetType),
    widget() -> &WidgetType,
    maximized_buttons_widget() -> &WidgetType,
    maximized_system_menu_icon_widget() -> &WidgetType,
    is_shaded() -> bool,
    set_option(option: MdiSubWindow::SubWindowOption, on: bool),
    test_option(arg0: MdiSubWindow::SubWindowOption) -> bool,
    set_keyboard_single_step(step: i32),
    keyboard_single_step() -> i32,
    set_keyboard_page_step(step: i32),
    keyboard_page_step() -> i32,
    set_system_menu(system_menu: &MenuType),
    system_menu() -> &MenuType,
    mdi_area() -> &MdiAreaType,
    [callback] window_state_changed(old_state: Rute::WindowStates, new_state: Rute::WindowStates),
    [callback] about_to_activate(),
    show_system_menu(),
    show_shaded(),
    event_filter(object: &ObjectType, event: &EventType) -> bool,
    event(event: &EventType) -> bool,
    show_event(show_event: &ShowEventType),
    hide_event(hide_event: &HideEventType),
    change_event(change_event: &EventType),
    close_event(close_event: &CloseEventType),
    leave_event(leave_event: &EventType),
    resize_event(resize_event: &ResizeEventType),
    timer_event(timer_event: &TimerEventType),
    move_event(move_event: &MoveEventType),
    paint_event(paint_event: &PaintEventType),
    mouse_press_event(mouse_event: &MouseEventType),
    mouse_double_click_event(mouse_event: &MouseEventType),
    mouse_release_event(mouse_event: &MouseEventType),
    mouse_move_event(mouse_event: &MouseEventType),
    key_press_event(key_event: &KeyEventType),
    context_menu_event(context_menu_event: &ContextMenuEventType),
    focus_in_event(focus_in_event: &FocusEventType),
    focus_out_event(focus_out_event: &FocusEventType),
    child_event(child_event: &ChildEventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
