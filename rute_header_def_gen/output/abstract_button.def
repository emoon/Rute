struct AbstractButton : Widget {
    set_text(text: String),
    text() -> String,
    set_icon(icon: &IconType),
    icon() -> Icon,
    icon_size() -> Size,
    set_shortcut(key: &KeySequenceType),
    shortcut() -> KeySequence,
    set_checkable(arg0: bool),
    is_checkable() -> bool,
    is_checked() -> bool,
    set_down(arg0: bool),
    is_down() -> bool,
    set_auto_repeat(arg0: bool),
    auto_repeat() -> bool,
    set_auto_repeat_delay(arg0: i32),
    auto_repeat_delay() -> i32,
    set_auto_repeat_interval(arg0: i32),
    auto_repeat_interval() -> i32,
    set_auto_exclusive(arg0: bool),
    auto_exclusive() -> bool,
    group() -> ButtonGroup?,
    set_icon_size(size: &SizeType),
    animate_click(msec: i32),
    click(),
    toggle(),
    set_checked(arg0: bool),
    [signal] pressed(),
    [signal] released(),
    [signal] clicked(checked: bool),
    [signal] toggled(checked: bool),
    [event] paint_event(e: *PaintEventType),
    [event] hit_button(pos: &PointType) -> bool,
    [event] check_state_set(),
    [event] next_check_state(),
    [event] event(e: *EventType) -> bool,
    [event] key_press_event(e: *KeyEventType),
    [event] key_release_event(e: *KeyEventType),
    [event] mouse_press_event(e: *MouseEventType),
    [event] mouse_release_event(e: *MouseEventType),
    [event] mouse_move_event(e: *MouseEventType),
    [event] focus_in_event(e: *FocusEventType),
    [event] focus_out_event(e: *FocusEventType),
    [event] change_event(e: *EventType),
    [event] timer_event(e: *TimerEventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
