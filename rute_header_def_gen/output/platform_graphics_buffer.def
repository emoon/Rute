[org_name(QPlatformGraphicsBuffer)]
enum AccessType {
    None,
    SWReadAccess,
    SWWriteAccess,
    TextureAccess,
    HWCompositor,
}

[org_name(QPlatformGraphicsBuffer)]
enum Origin {
    OriginBottomLeft,
    OriginTopLeft,
}

struct PlatformGraphicsBuffer : Object {
    is_locked() -> PlatformGraphicsBuffer::AccessTypes,
    lock(access: PlatformGraphicsBuffer::AccessTypes, rect: &RectType) -> bool,
    unlock(),
    [event] bind_to_texture(rect: &RectType) -> bool,
    [event] data() -> uchar?,
    [event] data() -> uchar?,
    [event] bytes_per_line() -> i32,
    byte_count() -> i32,
    [event] origin() -> PlatformGraphicsBuffer::Origin,
    size() -> Size,
    format() -> PixelFormat,
    [signal] unlocked(previous_access_types: PlatformGraphicsBuffer::AccessTypes),
    [event] do_lock(access: PlatformGraphicsBuffer::AccessTypes, rect: &RectType) -> bool,
    [event] do_unlock(),
}

// vim: syntax=rust expandtab ts=4 sw=4
