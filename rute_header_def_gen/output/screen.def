struct Screen : Object {
    handle() -> &PlatformScreenType,
    name() -> String,
    manufacturer() -> String,
    model() -> String,
    serial_number() -> String,
    depth() -> i32,
    size() -> SizeType,
    physical_size() -> SizeFType,
    physical_dots_per_inch_x() -> f32,
    physical_dots_per_inch_y() -> f32,
    physical_dots_per_inch() -> f32,
    logical_dots_per_inch_x() -> f32,
    logical_dots_per_inch_y() -> f32,
    logical_dots_per_inch() -> f32,
    device_pixel_ratio() -> f32,
    available_size() -> SizeType,
    virtual_siblings() -> <&ScreenType>,
    virtual_size() -> SizeType,
    available_virtual_size() -> SizeType,
    primary_orientation() -> Rute::ScreenOrientation,
    orientation() -> Rute::ScreenOrientation,
    native_orientation() -> Rute::ScreenOrientation,
    orientation_update_mask() -> Rute::ScreenOrientations,
    set_orientation_update_mask(Rute::ScreenOrientations mask),
    angle_between(Rute::ScreenOrientation a, Rute::ScreenOrientation b) -> i32,
    map_between(Rute::ScreenOrientation a, Rute::ScreenOrientation b, &RectType rect) -> RectType,
    is_landscape(Rute::ScreenOrientation orientation) -> bool,
    grab_window(WId window, i32 x, i32 y, i32 w, i32 h) -> PixmapType,
    refresh_rate() -> f32,
    physical_size_changed(&SizeFType size),
    physical_dots_per_inch_changed(f32 dpi),
    logical_dots_per_inch_changed(f32 dpi),
    primary_orientation_changed(Rute::ScreenOrientation orientation),
    orientation_changed(Rute::ScreenOrientation orientation),
    refresh_rate_changed(f32 refresh_rate),
}

