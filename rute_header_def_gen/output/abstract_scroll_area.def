[org_name(QAbstractScrollArea)]
enum SizeAdjustPolicy {
    AdjustIgnored,
    AdjustToContentsOnFirstShow,
    AdjustToContents,
}

struct AbstractScrollArea : Frame {
    vertical_scroll_bar_policy() -> Rute::ScrollBarPolicy,
    set_vertical_scroll_bar_policy(arg0: Rute::ScrollBarPolicy),
    vertical_scroll_bar() -> ScrollBar?,
    set_vertical_scroll_bar(scrollbar: *ScrollBarType),
    horizontal_scroll_bar_policy() -> Rute::ScrollBarPolicy,
    set_horizontal_scroll_bar_policy(arg0: Rute::ScrollBarPolicy),
    horizontal_scroll_bar() -> ScrollBar?,
    set_horizontal_scroll_bar(scrollbar: *ScrollBarType),
    corner_widget() -> Widget?,
    set_corner_widget(widget: *WidgetType),
    add_scroll_bar_widget(widget: *WidgetType, alignment: Rute::Alignment),
    scroll_bar_widgets(alignment: Rute::Alignment) -> WidgetList,
    viewport() -> Widget?,
    set_viewport(widget: *WidgetType),
    maximum_viewport_size() -> Size,
    [event] minimum_size_hint() -> Size,
    [event] size_hint() -> Size,
    [event] setup_viewport(viewport: *WidgetType),
    size_adjust_policy() -> AbstractScrollArea::SizeAdjustPolicy,
    set_size_adjust_policy(policy: AbstractScrollArea::SizeAdjustPolicy),
    set_viewport_margins(left: i32, top: i32, right: i32, bottom: i32),
    set_viewport_margins(margins: &MarginsType),
    viewport_margins() -> Margins,
    [event] event_filter(arg0: *ObjectType, arg1: *EventType) -> bool,
    [event] event(arg0: *EventType) -> bool,
    [event] viewport_event(arg0: *EventType) -> bool,
    [event] resize_event(arg0: *ResizeEventType),
    [event] paint_event(arg0: *PaintEventType),
    [event] mouse_press_event(arg0: *MouseEventType),
    [event] mouse_release_event(arg0: *MouseEventType),
    [event] mouse_double_click_event(arg0: *MouseEventType),
    [event] mouse_move_event(arg0: *MouseEventType),
    [event] wheel_event(arg0: *WheelEventType),
    [event] context_menu_event(arg0: *ContextMenuEventType),
    [event] drag_enter_event(arg0: *DragEnterEventType),
    [event] drag_move_event(arg0: *DragMoveEventType),
    [event] drag_leave_event(arg0: *DragLeaveEventType),
    [event] drop_event(arg0: *DropEventType),
    [event] key_press_event(arg0: *KeyEventType),
    [event] scroll_contents_by(dx: i32, dy: i32),
    [event] viewport_size_hint() -> Size,
}

// vim: syntax=rust expandtab ts=4 sw=4
