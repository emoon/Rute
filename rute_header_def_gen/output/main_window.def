[org_name(QMainWindow)]
enum DockOption {
    AnimatedDocks,
    AllowNestedDocks,
    AllowTabbedDocks,
    ForceTabbedDocks,
    VerticalTabs,
    GroupedDragging,
}

struct MainWindow : Widget {
    icon_size() -> Size,
    set_icon_size(icon_size: &SizeType),
    tool_button_style() -> Rute::ToolButtonStyle,
    set_tool_button_style(tool_button_style: Rute::ToolButtonStyle),
    is_animated() -> bool,
    is_dock_nesting_enabled() -> bool,
    document_mode() -> bool,
    set_document_mode(enabled: bool),
    tab_shape() -> TabWidget::TabShape,
    set_tab_shape(tab_shape: TabWidget::TabShape),
    tab_position(area: Rute::DockWidgetArea) -> TabWidget::TabPosition,
    set_tab_position(areas: Rute::DockWidgetAreas, tab_position: TabWidget::TabPosition),
    set_dock_options(options: DockOptions),
    dock_options() -> DockOptions,
    is_separator(pos: &PointType) -> bool,
    menu_bar() -> MenuBar?,
    set_menu_bar(menubar: *MenuBarType),
    menu_widget() -> Widget?,
    set_menu_widget(menubar: *WidgetType),
    status_bar() -> StatusBar?,
    set_status_bar(statusbar: *StatusBarType),
    set_corner(corner: Rute::Corner, area: Rute::DockWidgetArea),
    corner(corner: Rute::Corner) -> Rute::DockWidgetArea,
    add_tool_bar_break(area: Rute::ToolBarArea),
    insert_tool_bar_break(before: *ToolBarType),
    add_tool_bar(area: Rute::ToolBarArea, toolbar: *ToolBarType),
    add_tool_bar(toolbar: *ToolBarType),
    add_tool_bar(title: String) -> ToolBar?,
    insert_tool_bar(before: *ToolBarType, toolbar: *ToolBarType),
    remove_tool_bar(toolbar: *ToolBarType),
    remove_tool_bar_break(before: *ToolBarType),
    unified_title_and_tool_bar_on_mac() -> bool,
    tool_bar_area(toolbar: *ToolBarType) -> Rute::ToolBarArea,
    tool_bar_break(toolbar: *ToolBarType) -> bool,
    add_dock_widget(area: Rute::DockWidgetArea, dockwidget: *DockWidgetType),
    add_dock_widget(area: Rute::DockWidgetArea, dockwidget: *DockWidgetType, orientation: Rute::Orientation),
    split_dock_widget(after: *DockWidgetType, dockwidget: *DockWidgetType, orientation: Rute::Orientation),
    tabify_dock_widget(first: *DockWidgetType, second: *DockWidgetType),
    tabified_dock_widgets(dockwidget: *DockWidgetType) -> [DockWidget?],
    remove_dock_widget(dockwidget: *DockWidgetType),
    restore_dock_widget(dockwidget: *DockWidgetType) -> bool,
    dock_widget_area(dockwidget: *DockWidgetType) -> Rute::DockWidgetArea,
    resize_docks(docks: [*DockWidgetType], sizes: [i32], orientation: Rute::Orientation),
    save_state(version: i32) -> ByteArray,
    restore_state(state: &ByteArrayType, version: i32) -> bool,
    [event] create_popup_menu() -> Menu?,
    set_animated(enabled: bool),
    set_dock_nesting_enabled(enabled: bool),
    set_unified_title_and_tool_bar_on_mac(set: bool),
    [signal] icon_size_changed(icon_size: &SizeType),
    [signal] tool_button_style_changed(tool_button_style: Rute::ToolButtonStyle),
    [signal] tabified_dock_widget_activated(dock_widget: *DockWidgetType),
    [event] context_menu_event(event: *ContextMenuEventType),
    [event] event(event: *EventType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
