enum ResizeMode {
    Interactive,
    Stretch,
    Fixed,
    ResizeToContents,
    Custom,
}

struct HeaderView : AbstractItemView {
    [replace] set_model(model: &AbstractItemModelType),
    orientation() -> Rute::Orientation,
    offset() -> i32,
    length() -> i32,
    [replace] size_hint() -> Size,
    [replace] set_visible(v: bool),
    section_size_hint(logical_index: i32) -> i32,
    visual_index_at(position: i32) -> i32,
    logical_index_at(position: i32) -> i32,
    logical_index_at(x: i32, y: i32) -> i32,
    logical_index_at(pos: &PointType) -> i32,
    section_size(logical_index: i32) -> i32,
    section_position(logical_index: i32) -> i32,
    section_viewport_position(logical_index: i32) -> i32,
    move_section(from: i32, to: i32),
    swap_sections(first: i32, second: i32),
    resize_section(logical_index: i32, size: i32),
    resize_sections(mode: HeaderView::ResizeMode),
    is_section_hidden(logical_index: i32) -> bool,
    set_section_hidden(logical_index: i32, hide: bool),
    hidden_section_count() -> i32,
    hide_section(logical_index: i32),
    show_section(logical_index: i32),
    count() -> i32,
    visual_index(logical_index: i32) -> i32,
    logical_index(visual_index: i32) -> i32,
    set_sections_movable(movable: bool),
    sections_movable() -> bool,
    set_sections_clickable(clickable: bool),
    sections_clickable() -> bool,
    set_highlight_sections(highlight: bool),
    highlight_sections() -> bool,
    section_resize_mode(logical_index: i32) -> HeaderView::ResizeMode,
    set_section_resize_mode(mode: HeaderView::ResizeMode),
    set_section_resize_mode(logical_index: i32, mode: HeaderView::ResizeMode),
    set_resize_contents_precision(precision: i32),
    resize_contents_precision() -> i32,
    set_sort_indicator_shown(show: bool),
    is_sort_indicator_shown() -> bool,
    set_sort_indicator(logical_index: i32, order: Rute::SortOrder),
    sort_indicator_section() -> i32,
    sort_indicator_order() -> Rute::SortOrder,
    cascading_section_resizes() -> bool,
    set_cascading_section_resizes(enable: bool),
    default_section_size() -> i32,
    set_default_section_size(size: i32),
    reset_default_section_size(),
    minimum_section_size() -> i32,
    set_minimum_section_size(size: i32),
    maximum_section_size() -> i32,
    set_maximum_section_size(size: i32),
    default_alignment() -> Rute::Alignment,
    set_default_alignment(alignment: Rute::Alignment),
    [replace] do_items_layout(),
    sections_moved() -> bool,
    sections_hidden() -> bool,
    save_state() -> ByteArray,
    restore_state(state: &ByteArrayType) -> bool,
    [replace] reset(),
    set_offset(offset: i32),
    set_offset_to_section_position(visual_index: i32),
    set_offset_to_last_section(),
    header_data_changed(orientation: Rute::Orientation, logical_first: i32, logical_last: i32),
    [event] section_moved(logical_index: i32, old_visual_index: i32, new_visual_index: i32),
    [event] section_resized(logical_index: i32, old_size: i32, new_size: i32),
    [event] section_pressed(logical_index: i32),
    [event] section_clicked(logical_index: i32),
    [event] section_entered(logical_index: i32),
    [event] section_double_clicked(logical_index: i32),
    [event] section_count_changed(old_count: i32, new_count: i32),
    [event] section_handle_double_clicked(logical_index: i32),
    [event] sort_indicator_changed(logical_index: i32, order: Rute::SortOrder),
    update_section(logical_index: i32),
    resize_sections(),
    sections_inserted(parent: &ModelIndexType, logical_first: i32, logical_last: i32),
    sections_about_to_be_removed(parent: &ModelIndexType, logical_first: i32, logical_last: i32),
    initialize(),
    initialize_sections(),
    initialize_sections(start: i32, end: i32),
    [replace] current_changed(current: &ModelIndexType, old: &ModelIndexType),
    [replace] event(e: &EventType) -> bool,
    [replace] paint_event(e: &PaintEventType),
    [replace] mouse_press_event(e: &MouseEventType),
    [replace] mouse_move_event(e: &MouseEventType),
    [replace] mouse_release_event(e: &MouseEventType),
    [replace] mouse_double_click_event(e: &MouseEventType),
    [replace] viewport_event(e: &EventType) -> bool,
    [replace] paint_section(painter: &PainterType, rect: &RectType, logical_index: i32),
    [replace] section_size_from_contents(logical_index: i32) -> Size,
    [replace] horizontal_offset() -> i32,
    [replace] vertical_offset() -> i32,
    [replace] scroll_contents_by(dx: i32, dy: i32),
    [replace] data_changed(top_left: &ModelIndexType, bottom_right: &ModelIndexType, roles: [i32]),
    [replace] rows_inserted(parent: &ModelIndexType, start: i32, end: i32),
    [replace] visual_rect(index: &ModelIndexType) -> Rect,
    [replace] scroll_to(index: &ModelIndexType, hint: AbstractItemView::ScrollHint),
    [replace] index_at(p: &PointType) -> ModelIndex,
    [replace] is_index_hidden(index: &ModelIndexType) -> bool,
    [replace] move_cursor(arg0: AbstractItemView::CursorAction, arg1: Rute::KeyboardModifiers) -> ModelIndex,
    [replace] set_selection(rect: &RectType, flags: ItemSelectionModel::SelectionFlags),
    [replace] visual_region_for_selection(selection: &ItemSelectionType) -> Region,
    init_style_option(option: &StyleOptionHeaderType),
}

// vim: syntax=rust expandtab ts=4 sw=4
