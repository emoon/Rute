enum HorizontalHeaderFormat {
    NoHorizontalHeader,
    SingleLetterDayNames,
    ShortDayNames,
    LongDayNames,
}

enum VerticalHeaderFormat {
    NoVerticalHeader,
    ISOWeekNumbers,
}

enum SelectionMode {
    NoSelection,
    SingleSelection,
}

struct CalendarWidget : Widget {
    [override] size_hint() -> SizeType,
    [override] minimum_size_hint() -> SizeType,
    selected_date() -> DateType,
    year_shown() -> i32,
    month_shown() -> i32,
    minimum_date() -> DateType,
    set_minimum_date(date: &DateType),
    maximum_date() -> DateType,
    set_maximum_date(date: &DateType),
    first_day_of_week() -> Rute::DayOfWeek,
    set_first_day_of_week(day_of_week: Rute::DayOfWeek),
    is_navigation_bar_visible() -> bool,
    is_grid_visible() -> bool,
    selection_mode() -> CalendarWidget::SelectionMode,
    set_selection_mode(mode: CalendarWidget::SelectionMode),
    horizontal_header_format() -> CalendarWidget::HorizontalHeaderFormat,
    set_horizontal_header_format(format: CalendarWidget::HorizontalHeaderFormat),
    vertical_header_format() -> CalendarWidget::VerticalHeaderFormat,
    set_vertical_header_format(format: CalendarWidget::VerticalHeaderFormat),
    header_text_format() -> TextCharFormatType,
    set_header_text_format(format: &TextCharFormatType),
    weekday_text_format(day_of_week: Rute::DayOfWeek) -> TextCharFormatType,
    set_weekday_text_format(day_of_week: Rute::DayOfWeek, format: &TextCharFormatType),
    date_text_format() -> Map<QDate,Type,
    date_text_format(date: &DateType) -> TextCharFormatType,
    set_date_text_format(date: &DateType, format: &TextCharFormatType),
    is_date_edit_enabled() -> bool,
    set_date_edit_enabled(enable: bool),
    date_edit_accept_delay() -> i32,
    set_date_edit_accept_delay(delay: i32),
    [override] event(event: &EventType) -> bool,
    [override] event_filter(watched: &ObjectType, event: &EventType) -> bool,
    [override] mouse_press_event(event: &MouseEventType),
    [override] resize_event(event: &ResizeEventType),
    [override] key_press_event(event: &KeyEventType),
    [override] paint_cell(painter: &PainterType, rect: &RectType, date: &DateType),
    update_cell(date: &DateType),
    update_cells(),
    set_selected_date(date: &DateType),
    set_date_range(min: &DateType, max: &DateType),
    set_current_page(year: i32, month: i32),
    set_grid_visible(show: bool),
    set_navigation_bar_visible(visible: bool),
    show_next_month(),
    show_previous_month(),
    show_next_year(),
    show_previous_year(),
    show_selected_date(),
    show_today(),
    [event] selection_changed(),
    [event] clicked(date: &DateType),
    [event] activated(date: &DateType),
    [event] current_page_changed(year: i32, month: i32),
}

// vim: syntax=rust expandtab ts=4 sw=4
