[org_name(QImageIOHandler)]
enum ImageOption {
    Size,
    ClipRect,
    Description,
    ScaledClipRect,
    ScaledSize,
    CompressionRatio,
    Gamma,
    Quality,
    Name,
    SubType,
    IncrementalReading,
    Endianness,
    Animation,
    BackgroundColor,
    ImageFormat,
    SupportedSubTypes,
    OptimizedWrite,
    ProgressiveScanWrite,
    ImageTransformation,
    TransformedByDefault,
}

[org_name(QImageIOHandler)]
enum Transformation {
    TransformationNone,
    TransformationMirror,
    TransformationFlip,
    TransformationRotate180,
    TransformationRotate90,
    TransformationMirrorAndRotate90,
    TransformationFlipAndRotate90,
    TransformationRotate270,
}


struct ImageIOHandler {
    set_device(device: *IODeviceType),
    device() -> IODevice?,
    set_format(format: &ByteArrayType),
    set_format(format: &ByteArrayType),
    format() -> ByteArray,
    [event] name() -> ByteArray,
    [event] can_read() -> bool,
    [event] read(image: *ImageType) -> bool,
    [event] write(image: &ImageType) -> bool,
    [event] option(option: ImageIOHandler::ImageOption) -> Variant,
    [event] set_option(option: ImageIOHandler::ImageOption, value: &VariantType),
    [event] supports_option(option: ImageIOHandler::ImageOption) -> bool,
    [event] jump_to_next_image() -> bool,
    [event] jump_to_image(image_number: i32) -> bool,
    [event] loop_count() -> i32,
    [event] image_count() -> i32,
    [event] next_image_delay() -> i32,
    [event] current_image_number() -> i32,
    [event] current_image_rect() -> Rect,
}

// vim: syntax=rust expandtab ts=4 sw=4
