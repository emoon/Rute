///     \class QErrorMessage
/// 
///     \brief The QErrorMessage class provides an error message display dialog.
/// 
///     \ingroup standard-dialog
///     \inmodule QtWidgets
/// 
///     An error message widget consists of a text label and a checkbox. The
///     checkbox lets the user control whether the same error message will be
///     displayed again in the future, typically displaying the text,
///     "Show this message again" translated into the appropriate local
///     language.
/// 
///     For production applications, the class can be used to display messages which
///     the user only needs to see once. To use QErrorMessage like this, you create
///     the dialog in the usual way, and show it by calling the showMessage() slot or
///     connecting signals to it.
/// 
///     The static qtHandler() function installs a message handler
///     using qInstallMessageHandler() and creates a QErrorMessage that displays
///     qDebug(), qWarning() and qFatal() messages. This is most useful in
///     environments where no console is available to display warnings and
///     error messages.
/// 
///     In both cases QErrorMessage will queue pending messages and display
///     them in order, with each new message being shown as soon as the user
///     has accepted the previous message. Once the user has specified that a
///     message is not to be shown again it is automatically skipped, and the
///     dialog will show the next appropriate message in the queue.
/// 
///     The \l{dialogs/standarddialogs}{Standard Dialogs} example shows
///     how to use QErrorMessage as well as other built-in Qt dialogs.
/// 
///     \image qerrormessage.png
/// 
///     \sa QMessageBox, QStatusBar::showMessage(), {Standard Dialogs Example}
struct ErrorMessage : Dialog {
    ///     Returns a pointer to a QErrorMessage object that outputs the
    ///     default Qt messages. This function creates such an object, if there
    ///     isn't one already.
    [static] qt_handler() -> ErrorMessage?,
    ///     \since 4.5
    ///     \overload
    /// 
    ///     Shows the given message, \a message, and returns immediately. If the user
    ///     has requested for messages of type, \a type, not to be shown again, this
    ///     function does nothing.
    /// 
    ///     Normally, the message is displayed immediately. However, if there are
    ///     pending messages, it will be queued to be displayed later.
    /// 
    ///     \sa showMessage()
    show_message(message: String),
    ///     \since 4.5
    ///     \overload
    /// 
    ///     Shows the given message, \a message, and returns immediately. If the user
    ///     has requested for messages of type, \a type, not to be shown again, this
    ///     function does nothing.
    /// 
    ///     Normally, the message is displayed immediately. However, if there are
    ///     pending messages, it will be queued to be displayed later.
    /// 
    ///     \sa showMessage()
    show_message(message: String, type: String),
    [event] done(arg0: i32),
    ///     \reimp
    [event] change_event(e: *EventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
