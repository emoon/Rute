
struct AccessibleInterface {
    is_valid() -> bool,
    object() -> &ObjectType,
    window() -> &WindowType,
    relations(Accessible::Relation match) -> Vector<QPair<QAccessibleInterface *, QAccessible::Relation> >,
    focus_child() -> &AccessibleInterfaceType,
    child_at(i32 x, i32 y) -> &AccessibleInterfaceType,
    parent() -> &AccessibleInterfaceType,
    child(i32 index) -> &AccessibleInterfaceType,
    child_count() -> i32,
    index_of_child(&AccessibleInterfaceType arg0) -> i32,
    text(Accessible::Text t) -> String,
    set_text(Accessible::Text t, String text),
    rect() -> RectType,
    role() -> Accessible::Role,
    state() -> Accessible::State,
    foreground_color() -> ColorType,
    background_color() -> ColorType,
    text_interface() -> &AccessibleTextInterfaceType,
    editable_text_interface() -> &AccessibleEditableTextInterfaceType,
    value_interface() -> &AccessibleValueInterfaceType,
    action_interface() -> &AccessibleActionInterfaceType,
    image_interface() -> &AccessibleImageInterfaceType,
    table_interface() -> &AccessibleTableInterfaceType,
    table_cell_interface() -> &AccessibleTableCellInterfaceType,
    virtual_hook(i32 id, &void data),
    interface_cast(Accessible::InterfaceType arg0),
}

// vim: syntax=rust expandtab ts=4 sw=4
