
struct AccessibleInterface {
    [event] is_valid() -> bool,
    [event] object() -> Object?,
    [event] window() -> Window?,
    [event] relations(match: Accessible::Relation) -> Vector<QPair<QAccessibleInterface *, QAccessible::Relation> >,
    [event] focus_child() -> AccessibleInterface?,
    [event] child_at(x: i32, y: i32) -> AccessibleInterface?,
    [event] parent() -> AccessibleInterface?,
    [event] child(index: i32) -> AccessibleInterface?,
    [event] child_count() -> i32,
    [event] index_of_child(arg0: *AccessibleInterfaceType) -> i32,
    [event] text(t: Accessible::Text) -> String,
    [event] set_text(t: Accessible::Text, text: String),
    [event] rect() -> Rect,
    [event] role() -> Accessible::Role,
    [event] state() -> Accessible::State,
    [event] foreground_color() -> Color,
    [event] background_color() -> Color,
    text_interface() -> AccessibleTextInterface?,
    editable_text_interface() -> AccessibleEditableTextInterface?,
    value_interface() -> AccessibleValueInterface?,
    action_interface() -> AccessibleActionInterface?,
    image_interface() -> AccessibleImageInterface?,
    table_interface() -> AccessibleTableInterface?,
    table_cell_interface() -> AccessibleTableCellInterface?,
    [event] virtual_hook(id: i32, data: *void),
    [event] interface_cast(arg0: Accessible::InterfaceType),
}

// vim: syntax=rust expandtab ts=4 sw=4
