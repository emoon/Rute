
struct RectF {
    is_null() -> bool,
    is_empty() -> bool,
    is_valid() -> bool,
    normalized() -> RectFType,
    left() -> f32,
    top() -> f32,
    right() -> f32,
    bottom() -> f32,
    x() -> f32,
    y() -> f32,
    set_left(f32 pos),
    set_top(f32 pos),
    set_right(f32 pos),
    set_bottom(f32 pos),
    set_x(f32 pos),
    set_y(f32 pos),
    top_left() -> PointFType,
    bottom_right() -> PointFType,
    top_right() -> PointFType,
    bottom_left() -> PointFType,
    center() -> PointFType,
    set_top_left(&PointFType p),
    set_bottom_right(&PointFType p),
    set_top_right(&PointFType p),
    set_bottom_left(&PointFType p),
    move_left(f32 pos),
    move_top(f32 pos),
    move_right(f32 pos),
    move_bottom(f32 pos),
    move_top_left(&PointFType p),
    move_bottom_right(&PointFType p),
    move_top_right(&PointFType p),
    move_bottom_left(&PointFType p),
    move_center(&PointFType p),
    move_to(f32 x, f32 y),
    move_to(&PointFType p),
    set_rect(f32 x, f32 y, f32 w, f32 h),
    get_rect(&f32 x, &f32 y, &f32 w, &f32 h),
    set_coords(f32 x1, f32 y1, f32 x2, f32 y2),
    get_coords(&f32 x1, &f32 y1, &f32 x2, &f32 y2),
    adjust(f32 x1, f32 y1, f32 x2, f32 y2),
    adjusted(f32 x1, f32 y1, f32 x2, f32 y2) -> RectFType,
    size() -> SizeFType,
    width() -> f32,
    height() -> f32,
    set_width(f32 w),
    set_height(f32 h),
    set_size(&SizeFType s),
    contains(&RectFType r) -> bool,
    contains(&PointFType p) -> bool,
    contains(f32 x, f32 y) -> bool,
    united(&RectFType other) -> RectFType,
    intersected(&RectFType other) -> RectFType,
    intersects(&RectFType r) -> bool,
    margins_added(&MarginsFType margins) -> RectFType,
    margins_removed(&MarginsFType margins) -> RectFType,
    to_rect() -> RectType,
    to_aligned_rect() -> RectType,
    from_cg_rect(CGRect rect) -> RectFType,
    to_cg_rect() -> CGRect,
}

