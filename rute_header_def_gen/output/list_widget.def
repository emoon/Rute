struct ListWidget : ListView {
    set_selection_model(&ItemSelectionModelType selection_model),
    item(i32 row) -> &ListWidgetItemType,
    row(&ListWidgetItemType item) -> i32,
    insert_item(i32 row, &ListWidgetItemType item),
    insert_item(i32 row, String label),
    insert_items(i32 row, &StringListType labels),
    add_item(String label),
    add_item(&ListWidgetItemType item),
    add_items(&StringListType labels),
    take_item(i32 row) -> &ListWidgetItemType,
    count() -> i32,
    current_item() -> &ListWidgetItemType,
    set_current_item(&ListWidgetItemType item),
    set_current_item(&ListWidgetItemType item, ItemSelectionModel::SelectionFlags command),
    current_row() -> i32,
    set_current_row(i32 row),
    set_current_row(i32 row, ItemSelectionModel::SelectionFlags command),
    item_at(&PointType p) -> &ListWidgetItemType,
    item_at(i32 x, i32 y) -> &ListWidgetItemType,
    visual_item_rect(&ListWidgetItemType item) -> RectType,
    sort_items(Rute::SortOrder order),
    set_sorting_enabled(bool enable),
    is_sorting_enabled() -> bool,
    edit_item(&ListWidgetItemType item),
    open_persistent_editor(&ListWidgetItemType item),
    close_persistent_editor(&ListWidgetItemType item),
    is_persistent_editor_open(&ListWidgetItemType item) -> bool,
    item_widget(&ListWidgetItemType item) -> &WidgetType,
    set_item_widget(&ListWidgetItemType item, &WidgetType widget),
    remove_item_widget(&ListWidgetItemType item),
    is_item_selected(&ListWidgetItemType item) -> bool,
    set_item_selected(&ListWidgetItemType item, bool select),
    selected_items() -> <&ListWidgetItemType>,
    find_items(String text, Rute::MatchFlags flags) -> <&ListWidgetItemType>,
    is_item_hidden(&ListWidgetItemType item) -> bool,
    set_item_hidden(&ListWidgetItemType item, bool hide),
    drop_event(&DropEventType event),
    scroll_to_item(&ListWidgetItemType item, AbstractItemView::ScrollHint hint),
    clear(),
    [callback] item_pressed(&ListWidgetItemType item),
    [callback] item_clicked(&ListWidgetItemType item),
    [callback] item_double_clicked(&ListWidgetItemType item),
    [callback] item_activated(&ListWidgetItemType item),
    [callback] item_entered(&ListWidgetItemType item),
    [callback] item_changed(&ListWidgetItemType item),
    [callback] current_item_changed(&ListWidgetItemType current, &ListWidgetItemType previous),
    [callback] current_text_changed(String current_text),
    [callback] current_row_changed(i32 current_row),
    [callback] item_selection_changed(),
    event(&EventType e) -> bool,
    mime_types() -> StringListType,
    mime_data(<&ListWidgetItemType> items) -> &MimeDataType,
    drop_mime_data(i32 index, &MimeDataType data, Rute::DropAction action) -> bool,
    supported_drop_actions() -> Rute::DropActions,
    items(&MimeDataType data) -> <&ListWidgetItemType>,
    index_from_item(&ListWidgetItemType item) -> ModelIndexType,
    item_from_index(&ModelIndexType index) -> &ListWidgetItemType,
}

// vim: syntax=rust expandtab ts=4 sw=4
