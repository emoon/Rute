struct UndoStack : Object {
    clear(),
    push(cmd: *UndoCommandType),
    can_undo() -> bool,
    can_redo() -> bool,
    undo_text() -> String,
    redo_text() -> String,
    count() -> i32,
    index() -> i32,
    text(idx: i32) -> String,
    create_undo_action(parent: *ObjectType, prefix: String) -> Action?,
    create_redo_action(parent: *ObjectType, prefix: String) -> Action?,
    is_active() -> bool,
    is_clean() -> bool,
    clean_index() -> i32,
    begin_macro(text: String),
    end_macro(),
    set_undo_limit(limit: i32),
    undo_limit() -> i32,
    command(index: i32) -> UndoCommand?,
    set_clean(),
    reset_clean(),
    set_index(idx: i32),
    undo(),
    redo(),
    set_active(active: bool),
    [event] index_changed(idx: i32),
    [event] clean_changed(clean: bool),
    [event] can_undo_changed(can_undo: bool),
    [event] can_redo_changed(can_redo: bool),
    [event] undo_text_changed(undo_text: String),
    [event] redo_text_changed(redo_text: String),
}

// vim: syntax=rust expandtab ts=4 sw=4
