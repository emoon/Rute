struct UndoStack : Object {
    clear(),
    push(&UndoCommandType cmd),
    can_undo() -> bool,
    can_redo() -> bool,
    undo_text() -> String,
    redo_text() -> String,
    count() -> i32,
    index() -> i32,
    text(i32 idx) -> String,
    create_undo_action(&ObjectType parent, String prefix) -> &ActionType,
    create_redo_action(&ObjectType parent, String prefix) -> &ActionType,
    is_active() -> bool,
    is_clean() -> bool,
    clean_index() -> i32,
    begin_macro(String text),
    end_macro(),
    set_undo_limit(i32 limit),
    undo_limit() -> i32,
    command(i32 index) -> &UndoCommandType,
    [callback] set_clean(),
    [callback] reset_clean(),
    [callback] set_index(i32 idx),
    [callback] undo(),
    [callback] redo(),
    [callback] set_active(bool active),
    index_changed(i32 idx),
    clean_changed(bool clean),
    can_undo_changed(bool can_undo),
    can_redo_changed(bool can_redo),
    undo_text_changed(String undo_text),
    redo_text_changed(String redo_text),
}

// vim: syntax=rust expandtab ts=4 sw=4
