///     \class QSystemTrayIcon
///     \brief The QSystemTrayIcon class provides an icon for an application in the system tray.
///     \since 4.2
///     \ingroup desktop
///     \inmodule QtWidgets
/// 
///     Modern operating systems usually provide a special area on the desktop,
///     called the \e{system tray} or \e{notification area}, where long-running
///     applications can display icons and short messages.
/// 
///     \image system-tray.png The system tray on Windows XP.
/// 
///     The QSystemTrayIcon class can be used on the following platforms:
/// 
///     \list
///     \li All supported versions of Windows.
///     \li All window managers and independent tray implementations for X11 that implement the
///        \l{http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html freedesktop.org}
///        XEmbed system tray specification.
///     \li All X11 desktop environments that implement the D-Bus
///        \l{http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem}
///        specification, including recent versions of KDE and Unity.
///     \li All supported versions of \macos.
///     \endlist
/// 
///     To check whether a system tray is present on the user's desktop,
///     call the QSystemTrayIcon::isSystemTrayAvailable() static function.
/// 
///     To add a system tray entry, create a QSystemTrayIcon object, call setContextMenu()
///     to provide a context menu for the icon, and call show() to make it visible in the
///     system tray. Status notification messages ("balloon messages") can be displayed at
///     any time using showMessage().
/// 
///     If the system tray is unavailable when a system tray icon is constructed, but
///     becomes available later, QSystemTrayIcon will automatically add an entry for the
///     application in the system tray if the icon is \l visible.
/// 
///     The activated() signal is emitted when the user activates the icon.
/// 
///     Only on X11, when a tooltip is requested, the QSystemTrayIcon receives a QHelpEvent
///     of type QEvent::ToolTip. Additionally, the QSystemTrayIcon receives wheel events of
///     type QEvent::Wheel. These are not supported on any other platform.
/// 
///     \sa QDesktopServices, QDesktopWidget, {Desktop Integration}, {System Tray Icon Example}
[org_name(QSystemTrayIcon)]
enum ActivationReason {
    Unknown,
    Context,
    DoubleClick,
    Trigger,
    MiddleClick,
}

[org_name(QSystemTrayIcon)]
enum MessageIcon {
    NoIcon,
    Information,
    Warning,
    Critical,
}

struct SystemTrayIcon : Object {
    ///     Sets the specified \a menu to be the context menu for the system tray icon.
    /// 
    ///     The menu will pop up when the user requests the context menu for the system
    ///     tray icon by clicking the mouse button.
    /// 
    ///     On \macos, this is currenly converted to a NSMenu, so the
    ///     aboutToHide() signal is not emitted.
    /// 
    ///     \note The system tray icon does not take ownership of the menu. You must
    ///     ensure that it is deleted at the appropriate time by, for example, creating
    ///     the menu with a suitable parent object.
    set_context_menu(menu: *MenuType),
    ///     Returns the current context menu for the system tray entry.
    context_menu() -> Menu?,
    icon() -> Icon,
    ///     \property QSystemTrayIcon::icon
    ///     \brief the system tray icon
    /// 
    ///     On Windows, the system tray icon size is 16x16; on X11, the preferred size is
    ///     22x22. The icon will be scaled to the appropriate size as necessary.
    set_icon(icon: &IconType),
    tool_tip() -> String,
    ///     \property QSystemTrayIcon::toolTip
    ///     \brief the tooltip for the system tray entry
    /// 
    ///     On some systems, the tooltip's length is limited. The tooltip will be truncated
    ///     if necessary.
    set_tool_tip(tip: String),
    ///     Returns \c true if the system tray is available; otherwise returns \c false.
    /// 
    ///     If the system tray is currently unavailable but becomes available later,
    ///     QSystemTrayIcon will automatically add an entry in the system tray if it
    ///     is \l visible.
    [static] is_system_tray_available() -> bool,
    ///     Returns \c true if the system tray supports balloon messages; otherwise returns \c false.
    /// 
    ///     \sa showMessage()
    [static] supports_messages() -> bool,
    is_visible() -> bool,
    ///     \property QSystemTrayIcon::visible
    ///     \brief whether the system tray entry is visible
    /// 
    ///     Setting this property to true or calling show() makes the system tray icon
    ///     visible; setting this property to false or calling hide() hides it.
    set_visible(visible: bool),
    show(),
    hide(),
    show_message(title: String, msg: String, icon: &IconType, msecs: i32),
    show_message(title: String, msg: String, icon: SystemTrayIcon::MessageIcon, msecs: i32),
    [signal] activated(reason: SystemTrayIcon::ActivationReason),
    [signal] message_clicked(),
    ///   \reimp
    [event] event(event: *EventType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
