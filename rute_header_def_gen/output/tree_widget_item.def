enum ItemType {
    Type,
    UserType,
}

enum ChildIndicatorPolicy {
    ShowIndicator,
    DontShowIndicator,
    DontShowIndicatorWhenChildless,
}


struct TreeWidgetItem {
    [override] clone() -> &TreeWidgetItemType,
    set_selected(select: bool),
    is_selected() -> bool,
    set_hidden(hide: bool),
    is_hidden() -> bool,
    set_expanded(expand: bool),
    is_expanded() -> bool,
    set_first_column_spanned(span: bool),
    is_first_column_spanned() -> bool,
    set_disabled(disabled: bool),
    is_disabled() -> bool,
    set_child_indicator_policy(policy: TreeWidgetItem::ChildIndicatorPolicy),
    child_indicator_policy() -> TreeWidgetItem::ChildIndicatorPolicy,
    flags() -> Rute::ItemFlags,
    set_flags(flags: Rute::ItemFlags),
    text(column: i32) -> String,
    set_text(column: i32, text: String),
    icon(column: i32) -> IconType,
    set_icon(column: i32, icon: &IconType),
    status_tip(column: i32) -> String,
    set_status_tip(column: i32, status_tip: String),
    tool_tip(column: i32) -> String,
    set_tool_tip(column: i32, tool_tip: String),
    whats_this(column: i32) -> String,
    set_whats_this(column: i32, whats_this: String),
    font(column: i32) -> FontType,
    set_font(column: i32, font: &FontType),
    text_alignment(column: i32) -> i32,
    set_text_alignment(column: i32, alignment: i32),
    background_color(column: i32) -> ColorType,
    set_background_color(column: i32, color: &ColorType),
    background(column: i32) -> BrushType,
    set_background(column: i32, brush: &BrushType),
    text_color(column: i32) -> ColorType,
    set_text_color(column: i32, color: &ColorType),
    foreground(column: i32) -> BrushType,
    set_foreground(column: i32, brush: &BrushType),
    check_state(column: i32) -> Rute::CheckState,
    set_check_state(column: i32, state: Rute::CheckState),
    size_hint(column: i32) -> SizeType,
    set_size_hint(column: i32, size: &SizeType),
    [override] data(column: i32, role: i32) -> VariantType,
    [override] set_data(column: i32, role: i32, value: &VariantType),
    [override] read(in: &DataStreamType),
    [override] write(out: &DataStreamType),
    parent() -> &TreeWidgetItemType,
    child(index: i32) -> &TreeWidgetItemType,
    child_count() -> i32,
    column_count() -> i32,
    index_of_child(child: &TreeWidgetItemType) -> i32,
    add_child(child: &TreeWidgetItemType),
    insert_child(index: i32, child: &TreeWidgetItemType),
    remove_child(child: &TreeWidgetItemType),
    take_child(index: i32) -> &TreeWidgetItemType,
    add_children(children: [&TreeWidgetItemType]),
    insert_children(index: i32, children: [&TreeWidgetItemType]),
    take_children() -> [&TreeWidgetItemType],
    type() -> i32,
    sort_children(column: i32, order: Rute::SortOrder),
    emit_data_changed(),
}

// vim: syntax=rust expandtab ts=4 sw=4
