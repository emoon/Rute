
struct TextFormat {
    qt_check_for_qgadget_macro(),
    swap(other: &TextFormatType),
    merge(other: &TextFormatType),
    is_valid() -> bool,
    is_empty() -> bool,
    type() -> i32,
    object_index() -> i32,
    set_object_index(object: i32),
    property(property_id: i32) -> VariantType,
    set_property(property_id: i32, value: &VariantType),
    clear_property(property_id: i32),
    has_property(property_id: i32) -> bool,
    bool_property(property_id: i32) -> bool,
    int_property(property_id: i32) -> i32,
    double_property(property_id: i32) -> f32,
    color_property(property_id: i32) -> ColorType,
    pen_property(property_id: i32) -> PenType,
    brush_property(property_id: i32) -> BrushType,
    length_property(property_id: i32) -> TextLengthType,
    length_vector_property(property_id: i32) -> [TextLengthType],
    set_property(property_id: i32, lengths: [TextLengthType]),
    properties() -> Map<int,Type,
    property_count() -> i32,
    set_object_type(type: i32),
    object_type() -> i32,
    is_char_format() -> bool,
    is_block_format() -> bool,
    is_list_format() -> bool,
    is_frame_format() -> bool,
    is_image_format() -> bool,
    is_table_format() -> bool,
    is_table_cell_format() -> bool,
    to_block_format() -> TextBlockFormatType,
    to_char_format() -> TextCharFormatType,
    to_list_format() -> TextListFormatType,
    to_table_format() -> TextTableFormatType,
    to_frame_format() -> TextFrameFormatType,
    to_image_format() -> TextImageFormatType,
    to_table_cell_format() -> TextTableCellFormatType,
    set_layout_direction(direction: Rute::LayoutDirection),
    layout_direction() -> Rute::LayoutDirection,
    set_background(brush: &BrushType),
    background() -> BrushType,
    clear_background(),
    set_foreground(brush: &BrushType),
    foreground() -> BrushType,
    clear_foreground(),
}

// vim: syntax=rust expandtab ts=4 sw=4
