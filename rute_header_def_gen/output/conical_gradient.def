/// 
/// Conical gradients interpolate interpolate colors counter-clockwise
/// around a center point.
/// 
/// ![qconicalgradient.png](qconicalgradient.png)
/// 
/// The colors in a gradient is defined using stop points of the
/// QGradientStop type, i.e. a position and a color. Use the
/// QGradient::setColorAt() or the QGradient::setStops() function to
/// define the stop points. It is the gradient's complete set of stop
/// points that describes how the gradient area should be filled. If
/// no stop points have been specified, a gradient of black at 0 to
/// white at 1 is used.
/// 
/// In addition to the functions inherited from QGradient, the
/// QConicalGradient class provides the angle() and center() functions
/// returning the start angle and center of the gradient.
/// 
/// Note that the setSpread() function has no effect for conical
/// gradients. The reason is that the conical gradient is closed by
/// definition, i.e. the conical gradient fills the entire circle from
/// 0 - 360 degrees, while the boundary of a radial or a linear
/// gradient can be specified through its radius or final stop points,
/// respectively.
/// 
/// **See also:** QLinearGradient
/// QRadialGradient
/// {painting/gradients}{The
/// Gradients Example}
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct ConicalGradient : Gradient {
    /// 
    /// Returns the center of the conical gradient in logical
    /// coordinates.
    /// 
    /// **See also:** stops()
    center() -> PointF,
    /// 
    /// **Overloads**
    /// Sets the center of this conical gradient in logical coordinates to
    /// ( *x,* *y).*
    /// 
    /// **See also:** center()
    /// 
    /// Sets the center of this conical gradient in logical coordinates to
    /// *center.*
    /// 
    /// **See also:** center()
    set_center(center: &PointFType),
    /// 
    /// **Overloads**
    /// Sets the center of this conical gradient in logical coordinates to
    /// ( *x,* *y).*
    /// 
    /// **See also:** center()
    /// 
    /// Sets the center of this conical gradient in logical coordinates to
    /// *center.*
    /// 
    /// **See also:** center()
    set_center_2(x: f32, y: f32),
    /// 
    /// Returns the start angle of the conical gradient in logical
    /// coordinates.
    /// 
    /// **See also:** stops()
    angle() -> f32,
    /// 
    /// Sets *angle* to be the start angle for this conical gradient in
    /// logical coordinates.
    /// 
    /// **See also:** angle()
    set_angle(angle: f32),
}

// vim: syntax=rust expandtab ts=4 sw=4
