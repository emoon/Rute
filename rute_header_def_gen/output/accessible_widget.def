struct AccessibleWidget : AccessibleObject, AccessibleActionInterface {
    is_valid() -> bool,
    window() -> &WindowType,
    child_count() -> i32,
    index_of_child(child: &AccessibleInterfaceType) -> i32,
    relations(match: Accessible::Relation) -> Vector<QPair<QAccessibleInterface *, QAccessible::Relation> >,
    focus_child() -> &AccessibleInterfaceType,
    rect() -> RectType,
    parent() -> &AccessibleInterfaceType,
    child(index: i32) -> &AccessibleInterfaceType,
    text(t: Accessible::Text) -> String,
    role() -> Accessible::Role,
    state() -> Accessible::State,
    foreground_color() -> ColorType,
    background_color() -> ColorType,
    interface_cast(t: Accessible::InterfaceType),
    action_names() -> StringListType,
    do_action(action_name: String),
    key_bindings_for_action(action_name: String) -> StringListType,
    widget() -> &WidgetType,
    parent_object() -> &ObjectType,
}

// vim: syntax=rust expandtab ts=4 sw=4
