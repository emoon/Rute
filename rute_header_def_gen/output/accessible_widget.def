struct AccessibleWidget : AccessibleObject, AccessibleActionInterface {
    [override] is_valid() -> bool,
    [override] window() -> &WindowType,
    [override] child_count() -> i32,
    [override] index_of_child(child: &AccessibleInterfaceType) -> i32,
    [override] relations(match: Accessible::Relation) -> Vector<QPair<QAccessibleInterface *, QAccessible::Relation> >,
    [override] focus_child() -> &AccessibleInterfaceType,
    [override] rect() -> RectType,
    [override] parent() -> &AccessibleInterfaceType,
    [override] child(index: i32) -> &AccessibleInterfaceType,
    [override] text(t: Accessible::Text) -> String,
    [override] role() -> Accessible::Role,
    [override] state() -> Accessible::State,
    [override] foreground_color() -> ColorType,
    [override] background_color() -> ColorType,
    [override] interface_cast(t: Accessible::InterfaceType),
    [override] action_names() -> StringListType,
    [override] do_action(action_name: String),
    [override] key_bindings_for_action(action_name: String) -> StringListType,
    widget() -> &WidgetType,
    parent_object() -> &ObjectType,
}

// vim: syntax=rust expandtab ts=4 sw=4
