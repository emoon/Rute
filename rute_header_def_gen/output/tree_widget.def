struct TreeWidget : TreeView {
    column_count() -> i32,
    set_column_count(columns: i32),
    invisible_root_item() -> &TreeWidgetItemType,
    top_level_item(index: i32) -> &TreeWidgetItemType,
    top_level_item_count() -> i32,
    insert_top_level_item(index: i32, item: &TreeWidgetItemType),
    add_top_level_item(item: &TreeWidgetItemType),
    take_top_level_item(index: i32) -> &TreeWidgetItemType,
    index_of_top_level_item(item: &TreeWidgetItemType) -> i32,
    insert_top_level_items(index: i32, items: [&TreeWidgetItemType]),
    add_top_level_items(items: [&TreeWidgetItemType]),
    header_item() -> &TreeWidgetItemType,
    set_header_item(item: &TreeWidgetItemType),
    set_header_labels(labels: &StringListType),
    set_header_label(label: String),
    current_item() -> &TreeWidgetItemType,
    current_column() -> i32,
    set_current_item(item: &TreeWidgetItemType),
    set_current_item(item: &TreeWidgetItemType, column: i32),
    set_current_item(item: &TreeWidgetItemType, column: i32, command: ItemSelectionModel::SelectionFlags),
    item_at(p: &PointType) -> &TreeWidgetItemType,
    item_at(x: i32, y: i32) -> &TreeWidgetItemType,
    visual_item_rect(item: &TreeWidgetItemType) -> RectType,
    sort_column() -> i32,
    sort_items(column: i32, order: Rute::SortOrder),
    edit_item(item: &TreeWidgetItemType, column: i32),
    open_persistent_editor(item: &TreeWidgetItemType, column: i32),
    close_persistent_editor(item: &TreeWidgetItemType, column: i32),
    is_persistent_editor_open(item: &TreeWidgetItemType, column: i32) -> bool,
    item_widget(item: &TreeWidgetItemType, column: i32) -> &WidgetType,
    set_item_widget(item: &TreeWidgetItemType, column: i32, widget: &WidgetType),
    remove_item_widget(item: &TreeWidgetItemType, column: i32),
    is_item_selected(item: &TreeWidgetItemType) -> bool,
    set_item_selected(item: &TreeWidgetItemType, select: bool),
    selected_items() -> [&TreeWidgetItemType],
    find_items(text: String, flags: Rute::MatchFlags, column: i32) -> [&TreeWidgetItemType],
    is_item_hidden(item: &TreeWidgetItemType) -> bool,
    set_item_hidden(item: &TreeWidgetItemType, hide: bool),
    is_item_expanded(item: &TreeWidgetItemType) -> bool,
    set_item_expanded(item: &TreeWidgetItemType, expand: bool),
    is_first_item_column_spanned(item: &TreeWidgetItemType) -> bool,
    set_first_item_column_spanned(item: &TreeWidgetItemType, span: bool),
    item_above(item: &TreeWidgetItemType) -> &TreeWidgetItemType,
    item_below(item: &TreeWidgetItemType) -> &TreeWidgetItemType,
    [override] set_selection_model(selection_model: &ItemSelectionModelType),
    scroll_to_item(item: &TreeWidgetItemType, hint: AbstractItemView::ScrollHint),
    expand_item(item: &TreeWidgetItemType),
    collapse_item(item: &TreeWidgetItemType),
    clear(),
    [event] item_pressed(item: &TreeWidgetItemType, column: i32),
    [event] item_clicked(item: &TreeWidgetItemType, column: i32),
    [event] item_double_clicked(item: &TreeWidgetItemType, column: i32),
    [event] item_activated(item: &TreeWidgetItemType, column: i32),
    [event] item_entered(item: &TreeWidgetItemType, column: i32),
    [event] item_changed(item: &TreeWidgetItemType, column: i32),
    [event] item_expanded(item: &TreeWidgetItemType),
    [event] item_collapsed(item: &TreeWidgetItemType),
    [event] current_item_changed(current: &TreeWidgetItemType, previous: &TreeWidgetItemType),
    [event] item_selection_changed(),
    [override] event(e: &EventType) -> bool,
    [override] mime_types() -> StringListType,
    [override] mime_data(items: [&TreeWidgetItemType]) -> &MimeDataType,
    [override] drop_mime_data(parent: &TreeWidgetItemType, index: i32, data: &MimeDataType, action: Rute::DropAction) -> bool,
    [override] supported_drop_actions() -> Rute::DropActions,
    items(data: &MimeDataType) -> [&TreeWidgetItemType],
    index_from_item(item: &TreeWidgetItemType, column: i32) -> ModelIndexType,
    index_from_item(item: &TreeWidgetItemType, column: i32) -> ModelIndexType,
    item_from_index(index: &ModelIndexType) -> &TreeWidgetItemType,
    [override] drop_event(event: &DropEventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
