
struct RegularExpressionMatch {
    swap(other: &RegularExpressionMatchType),
    regular_expression() -> RegularExpression,
    match_type() -> RegularExpression::MatchType,
    match_options() -> RegularExpression::MatchOptions,
    has_match() -> bool,
    has_partial_match() -> bool,
    is_valid() -> bool,
    last_captured_index() -> i32,
    captured(nth: i32) -> String,
    captured_ref(nth: i32) -> StringRef,
    captured_view(nth: i32) -> StringView,
    captured(name: String) -> String,
    captured_ref(name: String) -> StringRef,
    captured(name: StringViewType) -> String,
    captured_ref(name: StringViewType) -> StringRef,
    captured_view(name: StringViewType) -> StringView,
    captured_texts() -> [String],
    captured_start(nth: i32) -> i32,
    captured_length(nth: i32) -> i32,
    captured_end(nth: i32) -> i32,
    captured_start(name: String) -> i32,
    captured_length(name: String) -> i32,
    captured_end(name: String) -> i32,
    captured_start(name: StringViewType) -> i32,
    captured_length(name: StringViewType) -> i32,
    captured_end(name: StringViewType) -> i32,
}

// vim: syntax=rust expandtab ts=4 sw=4
