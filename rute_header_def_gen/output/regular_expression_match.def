
struct RegularExpressionMatch {
    swap(&RegularExpressionMatchType other),
    regular_expression() -> RegularExpressionType,
    match_type() -> RegularExpression::MatchType,
    match_options() -> RegularExpression::MatchOptions,
    has_match() -> bool,
    has_partial_match() -> bool,
    is_valid() -> bool,
    last_captured_index() -> i32,
    captured(i32 nth) -> String,
    captured_ref(i32 nth) -> StringRefType,
    captured_view(i32 nth) -> StringViewType,
    captured(String name) -> String,
    captured_ref(String name) -> StringRefType,
    captured(StringViewType name) -> String,
    captured_ref(StringViewType name) -> StringRefType,
    captured_view(StringViewType name) -> StringViewType,
    captured_texts() -> StringListType,
    captured_start(i32 nth) -> i32,
    captured_length(i32 nth) -> i32,
    captured_end(i32 nth) -> i32,
    captured_start(String name) -> i32,
    captured_length(String name) -> i32,
    captured_end(String name) -> i32,
    captured_start(StringViewType name) -> i32,
    captured_length(StringViewType name) -> i32,
    captured_end(StringViewType name) -> i32,
}

// vim: syntax=rust expandtab ts=4 sw=4
