struct MenuBar : Widget {
    add_action(String text) -> &ActionType,
    add_action(String text, &ObjectType receiver, &char member) -> &ActionType,
    add_menu(&MenuType menu) -> &ActionType,
    add_menu(String title) -> &MenuType,
    add_menu(&IconType icon, String title) -> &MenuType,
    add_separator() -> &ActionType,
    insert_separator(&ActionType before) -> &ActionType,
    insert_menu(&ActionType before, &MenuType menu) -> &ActionType,
    clear(),
    active_action() -> &ActionType,
    set_active_action(&ActionType action),
    set_default_up(bool arg0),
    is_default_up() -> bool,
    size_hint() -> SizeType,
    minimum_size_hint() -> SizeType,
    height_for_width(i32 arg0) -> i32,
    action_at(&PointType arg0) -> &ActionType,
    set_corner_widget(&WidgetType w, Rute::Corner corner),
    corner_widget(Rute::Corner corner) -> &WidgetType,
    to_ns_menu() -> &NSMenu,
    is_native_menu_bar() -> bool,
    set_native_menu_bar(bool native_menu_bar),
    platform_menu_bar() -> &PlatformMenuBarType,
    set_visible(bool visible),
    hovered(&ActionType action),
    change_event(&EventType arg0),
    key_press_event(&KeyEventType arg0),
    mouse_release_event(&MouseEventType arg0),
    mouse_press_event(&MouseEventType arg0),
    mouse_move_event(&MouseEventType arg0),
    leave_event(&EventType arg0),
    paint_event(&PaintEventType arg0),
    resize_event(&ResizeEventType arg0),
    action_event(&ActionEventType arg0),
    focus_out_event(&FocusEventType arg0),
    focus_in_event(&FocusEventType arg0),
    timer_event(&TimerEventType arg0),
    event_filter(&ObjectType arg0, &EventType arg1) -> bool,
    event(&EventType arg0) -> bool,
    init_style_option(&StyleOptionMenuItemType option, &ActionType action),
}

// vim: syntax=rust expandtab ts=4 sw=4
