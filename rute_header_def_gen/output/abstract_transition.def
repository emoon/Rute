[org_name(QAbstractTransition)]
enum TransitionType {
    ExternalTransition,
    InternalTransition,
}

struct AbstractTransition : Object {
    source_state() -> State?,
    target_state() -> AbstractState?,
    set_target_state(target: &AbstractStateType),
    target_states() -> [AbstractState?],
    set_target_states(targets: [&AbstractStateType]),
    set_transition_type(type: AbstractTransition::TransitionType),
    machine() -> StateMachine?,
    add_animation(animation: &AbstractAnimationType),
    remove_animation(animation: &AbstractAnimationType),
    animations() -> [AbstractAnimation?],
    [event] target_state_changed(arg0: AbstractTransition::QPrivateSignal),
    [event] target_states_changed(arg0: AbstractTransition::QPrivateSignal),
    [replace] event_test(event: &EventType) -> bool,
    [replace] on_transition(event: &EventType),
    [replace] event(e: &EventType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
