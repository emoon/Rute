struct Style : Object {
    polish(widget: &WidgetType),
    unpolish(widget: &WidgetType),
    polish(application: &ApplicationType),
    unpolish(application: &ApplicationType),
    polish(palette: &PaletteType),
    item_text_rect(fm: &FontMetricsType, r: &RectType, flags: i32, enabled: bool, text: String) -> RectType,
    item_pixmap_rect(r: &RectType, flags: i32, pixmap: &PixmapType) -> RectType,
    draw_item_text(painter: &PainterType, rect: &RectType, flags: i32, pal: &PaletteType, enabled: bool, text: String, text_role: Palette::ColorRole),
    draw_item_pixmap(painter: &PainterType, rect: &RectType, alignment: i32, pixmap: &PixmapType),
    standard_palette() -> PaletteType,
    draw_primitive(pe: Style::PrimitiveElement, opt: &StyleOptionType, p: &PainterType, w: &WidgetType),
    sub_element_rect(sub_element: Style::SubElement, option: &StyleOptionType, widget: &WidgetType) -> RectType,
    size_from_contents(ct: Style::ContentsType, opt: &StyleOptionType, contents_size: &SizeType, w: &WidgetType) -> SizeType,
    style_hint(stylehint: Style::StyleHint, opt: &StyleOptionType, widget: &WidgetType, return_data: &StyleHintReturnType) -> i32,
    standard_pixmap(standard_pixmap: Style::StandardPixmap, opt: &StyleOptionType, widget: &WidgetType) -> PixmapType,
    standard_icon(standard_icon: Style::StandardPixmap, option: &StyleOptionType, widget: &WidgetType) -> IconType,
    generated_icon_pixmap(icon_mode: Icon::Mode, pixmap: &PixmapType, opt: &StyleOptionType) -> PixmapType,
    visual_rect(direction: Rute::LayoutDirection, bounding_rect: &RectType, logical_rect: &RectType) -> RectType,
    visual_pos(direction: Rute::LayoutDirection, bounding_rect: &RectType, logical_pos: &PointType) -> PointType,
    slider_position_from_value(min: i32, max: i32, val: i32, space: i32, upside_down: bool) -> i32,
    slider_value_from_position(min: i32, max: i32, pos: i32, space: i32, upside_down: bool) -> i32,
    visual_alignment(direction: Rute::LayoutDirection, alignment: Rute::Alignment) -> Rute::Alignment,
    aligned_rect(direction: Rute::LayoutDirection, alignment: Rute::Alignment, size: &SizeType, rectangle: &RectType) -> RectType,
    layout_spacing(control1: SizePolicy::ControlType, control2: SizePolicy::ControlType, orientation: Rute::Orientation, option: &StyleOptionType, widget: &WidgetType) -> i32,
    combined_layout_spacing(controls1: SizePolicy::ControlTypes, controls2: SizePolicy::ControlTypes, orientation: Rute::Orientation, option: &StyleOptionType, widget: &WidgetType) -> i32,
    proxy() -> &StyleType,
}

// vim: syntax=rust expandtab ts=4 sw=4
