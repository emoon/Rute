
struct StringView {
    cast_helper(&storage_type str) -> &storage_type,
    size() -> i32,
    data() -> const_pointer,
    utf16() -> &storage_type,
    to_latin1() -> ByteArrayType,
    to_utf8() -> ByteArrayType,
    to_local8_bit() -> ByteArrayType,
    to_ucs4() -> Vector<uint>Type,
    at(i32 n) -> CharType,
    mid(i32 pos) -> StringViewType,
    left(i32 n) -> StringViewType,
    right(i32 n) -> StringViewType,
    chopped(i32 n) -> StringViewType,
    chop(i32 n),
    starts_with(StringViewType s, Rute::CaseSensitivity cs) -> bool,
    starts_with(Latin1StringType s, Rute::CaseSensitivity cs) -> bool,
    starts_with(CharType c) -> bool,
    starts_with(CharType c, Rute::CaseSensitivity cs) -> bool,
    ends_with(StringViewType s, Rute::CaseSensitivity cs) -> bool,
    ends_with(Latin1StringType s, Rute::CaseSensitivity cs) -> bool,
    ends_with(CharType c) -> bool,
    ends_with(CharType c, Rute::CaseSensitivity cs) -> bool,
    begin() -> const_iterator,
    end() -> const_iterator,
    cbegin() -> const_iterator,
    cend() -> const_iterator,
    rbegin() -> const_reverse_iterator,
    rend() -> const_reverse_iterator,
    crbegin() -> const_reverse_iterator,
    crend() -> const_reverse_iterator,
    empty() -> bool,
    front() -> CharType,
    back() -> CharType,
    is_null() -> bool,
    is_empty() -> bool,
    length() -> i32,
    first() -> CharType,
    last() -> CharType,
}

// vim: syntax=rust expandtab ts=4 sw=4
