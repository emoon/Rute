struct FileDialog : Dialog {
    set_directory(directory: String),
    set_directory(directory: &DirType),
    directory() -> DirType,
    set_directory_url(directory: &UrlType),
    directory_url() -> UrlType,
    select_file(filename: String),
    selected_files() -> StringListType,
    select_url(url: &UrlType),
    selected_urls() -> [UrlType],
    set_name_filter_details_visible(enabled: bool),
    is_name_filter_details_visible() -> bool,
    set_name_filter(filter: String),
    set_name_filters(filters: &StringListType),
    name_filters() -> StringListType,
    select_name_filter(filter: String),
    selected_mime_type_filter() -> String,
    selected_name_filter() -> String,
    set_mime_type_filters(filters: &StringListType),
    mime_type_filters() -> StringListType,
    select_mime_type_filter(filter: String),
    filter() -> Dir::Filters,
    set_filter(filters: Dir::Filters),
    set_view_mode(mode: FileDialog::ViewMode),
    view_mode() -> FileDialog::ViewMode,
    set_file_mode(mode: FileDialog::FileMode),
    file_mode() -> FileDialog::FileMode,
    set_accept_mode(mode: FileDialog::AcceptMode),
    accept_mode() -> FileDialog::AcceptMode,
    set_read_only(enabled: bool),
    is_read_only() -> bool,
    set_resolve_symlinks(enabled: bool),
    resolve_symlinks() -> bool,
    set_sidebar_urls(urls: [UrlType]),
    sidebar_urls() -> [UrlType],
    save_state() -> ByteArrayType,
    restore_state(state: &ByteArrayType) -> bool,
    set_confirm_overwrite(enabled: bool),
    confirm_overwrite() -> bool,
    set_default_suffix(suffix: String),
    default_suffix() -> String,
    set_history(paths: &StringListType),
    history() -> StringListType,
    set_item_delegate(delegate: &AbstractItemDelegateType),
    item_delegate() -> &AbstractItemDelegateType,
    set_icon_provider(provider: &FileIconProviderType),
    icon_provider() -> &FileIconProviderType,
    set_label_text(label: FileDialog::DialogLabel, text: String),
    label_text(label: FileDialog::DialogLabel) -> String,
    set_supported_schemes(schemes: &StringListType),
    supported_schemes() -> StringListType,
    set_proxy_model(model: &AbstractProxyModelType),
    proxy_model() -> &AbstractProxyModelType,
    set_option(option: FileDialog::Option, on: bool),
    test_option(option: FileDialog::Option) -> bool,
    set_options(options: Options),
    options() -> Options,
    open(receiver: &ObjectType, member: &char),
    set_visible(visible: bool),
    [callback] file_selected(file: String),
    [callback] files_selected(files: &StringListType),
    [callback] current_changed(path: String),
    [callback] directory_entered(directory: String),
    [callback] url_selected(url: &UrlType),
    [callback] urls_selected(urls: [UrlType]),
    [callback] current_url_changed(url: &UrlType),
    [callback] directory_url_entered(directory: &UrlType),
    [callback] filter_selected(filter: String),
    get_open_file_name(parent: &WidgetType, caption: String, dir: String, filter: String, selected_filter: String, options: Options) -> String,
    get_open_file_url(parent: &WidgetType, caption: String, dir: &UrlType, filter: String, selected_filter: String, options: Options, supported_schemes: &StringListType) -> UrlType,
    get_save_file_name(parent: &WidgetType, caption: String, dir: String, filter: String, selected_filter: String, options: Options) -> String,
    get_save_file_url(parent: &WidgetType, caption: String, dir: &UrlType, filter: String, selected_filter: String, options: Options, supported_schemes: &StringListType) -> UrlType,
    get_existing_directory(parent: &WidgetType, caption: String, dir: String, options: Options) -> String,
    get_existing_directory_url(parent: &WidgetType, caption: String, dir: &UrlType, options: Options, supported_schemes: &StringListType) -> UrlType,
    get_open_file_names(parent: &WidgetType, caption: String, dir: String, filter: String, selected_filter: String, options: Options) -> StringListType,
    get_open_file_urls(parent: &WidgetType, caption: String, dir: &UrlType, filter: String, selected_filter: String, options: Options, supported_schemes: &StringListType) -> [UrlType],
    done(result: i32),
    accept(),
    change_event(e: &EventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
