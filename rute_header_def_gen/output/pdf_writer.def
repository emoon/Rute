/// 
/// QPdfWriter generates PDF out of a series of drawing commands using QPainter.
/// The newPage() method can be used to create several pages.
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct PdfWriter : Object, PagedPaintDevice {
    /// 
    /// Sets the PDF version for this writer to *version.*
    /// 
    /// If *version* is the same value as currently set then no change will be made.
    set_pdf_version(version: PagedPaintDevice::PdfVersion),
    /// 
    /// Returns the PDF version for this writer. The default is `PdfVersion_1_4.`
    pdf_version() -> PagedPaintDevice::PdfVersion,
    /// 
    /// Returns the title of the document.
    title() -> String,
    /// 
    /// Sets the title of the document being created to *title.*
    set_title(title: String),
    /// 
    /// Returns the creator of the document.
    creator() -> String,
    /// 
    /// Sets the creator of the document to *creator.*
    set_creator(creator: String),
    /// 
    [event] new_page() -> bool,
    /// 
    /// Sets the PDF *resolution* in DPI.
    /// 
    /// This setting affects the coordinate system as returned by, for
    /// example QPainter::viewport().
    /// 
    /// **See also:** [`resolution()`]
    set_resolution(resolution: i32),
    /// 
    /// Returns the resolution of the PDF in DPI.
    /// 
    /// **See also:** [`set_resolution()`]
    resolution() -> i32,
    /// 
    /// Sets the PDF page size to *pageSize.*
    /// 
    /// To get the current QPageSize use pageLayout().pageSize().
    /// 
    /// You should call this before calling QPainter::begin(), or immediately
    /// before calling newPage() to apply the new page size to a new page.
    /// You should not call any painting methods between a call to setPageSize()
    /// and newPage() as the wrong paint metrics may be used.
    /// 
    /// Returns true if the page size was successfully set to *pageSize.*
    /// 
    /// **See also:** [`page_layout()`]
    /// 
    /// **See also:** [`set_page_size()`]
    /// 
    /// **See also:** [`set_page_size()`]
    [event] set_page_size(size: PagedPaintDevice::PageSize),
    /// 
    /// **See also:** [`set_page_size()`]
    [event] set_page_size_mm(size: &SizeFType),
    /// 
    /// **See also:** [`set_page_margins()`]
    [event] set_margins(m: onst QPagedPaintDevice::Margins &),
    /// 
    [event] paint_engine() -> PaintEngine?,
}

// vim: syntax=rust expandtab ts=4 sw=4
