struct TextDocument : Object {
    clone(&ObjectType parent) -> &TextDocumentType,
    is_empty() -> bool,
    clear(),
    set_undo_redo_enabled(bool enable),
    is_undo_redo_enabled() -> bool,
    is_undo_available() -> bool,
    is_redo_available() -> bool,
    available_undo_steps() -> i32,
    available_redo_steps() -> i32,
    revision() -> i32,
    set_document_layout(&AbstractTextDocumentLayoutType layout),
    document_layout() -> &AbstractTextDocumentLayoutType,
    set_meta_information(TextDocument::MetaInformation info, String arg0),
    meta_information(TextDocument::MetaInformation info) -> String,
    to_html(&ByteArrayType encoding) -> String,
    set_html(String html),
    to_raw_text() -> String,
    to_plain_text() -> String,
    set_plain_text(String text),
    character_at(i32 pos) -> CharType,
    find(String sub_string, i32 from, FindFlags options) -> TextCursorType,
    find(String sub_string, &TextCursorType cursor, FindFlags options) -> TextCursorType,
    find(&RegExpType expr, i32 from, FindFlags options) -> TextCursorType,
    find(&RegExpType expr, &TextCursorType cursor, FindFlags options) -> TextCursorType,
    find(&RegularExpressionType expr, i32 from, FindFlags options) -> TextCursorType,
    find(&RegularExpressionType expr, &TextCursorType cursor, FindFlags options) -> TextCursorType,
    frame_at(i32 pos) -> &TextFrameType,
    root_frame() -> &TextFrameType,
    object(i32 object_index) -> &TextObjectType,
    object_for_format(&TextFormatType arg0) -> &TextObjectType,
    find_block(i32 pos) -> TextBlockType,
    find_block_by_number(i32 block_number) -> TextBlockType,
    find_block_by_line_number(i32 block_number) -> TextBlockType,
    begin() -> TextBlockType,
    end() -> TextBlockType,
    first_block() -> TextBlockType,
    last_block() -> TextBlockType,
    set_page_size(&SizeFType size),
    page_size() -> SizeFType,
    set_default_font(&FontType font),
    default_font() -> FontType,
    page_count() -> i32,
    is_modified() -> bool,
    print(&PagedPaintDeviceType printer),
    resource(i32 type, &UrlType name) -> VariantType,
    add_resource(i32 type, &UrlType name, &VariantType resource),
    all_formats() -> <TextFormatType>,
    mark_contents_dirty(i32 from, i32 length),
    draw_contents(&PainterType painter, &RectFType rect),
    set_text_width(f32 width),
    text_width() -> f32,
    ideal_width() -> f32,
    indent_width() -> f32,
    set_indent_width(f32 width),
    document_margin() -> f32,
    set_document_margin(f32 margin),
    adjust_size(),
    size() -> SizeFType,
    block_count() -> i32,
    line_count() -> i32,
    character_count() -> i32,
    set_default_style_sheet(String sheet),
    default_style_sheet() -> String,
    undo(&TextCursorType cursor),
    redo(&TextCursorType cursor),
    clear_undo_redo_stacks(TextDocument::Stacks history_to_clear),
    maximum_block_count() -> i32,
    set_maximum_block_count(i32 maximum),
    default_text_option() -> TextOptionType,
    set_default_text_option(&TextOptionType option),
    base_url() -> UrlType,
    set_base_url(&UrlType url),
    default_cursor_move_style() -> Rute::CursorMoveStyle,
    set_default_cursor_move_style(Rute::CursorMoveStyle style),
    [callback] contents_change(i32 from, i32 chars_removed, i32 chars_added),
    [callback] contents_changed(),
    [callback] undo_available(bool arg0),
    [callback] redo_available(bool arg0),
    [callback] undo_command_added(),
    [callback] modification_changed(bool m),
    [callback] cursor_position_changed(&TextCursorType cursor),
    [callback] block_count_changed(i32 new_block_count),
    [callback] base_url_changed(&UrlType url),
    [callback] document_layout_changed(),
    undo(),
    redo(),
    append_undo_item(&AbstractUndoItemType arg0),
    set_modified(bool m),
    create_object(&TextFormatType f) -> &TextObjectType,
    load_resource(i32 type, &UrlType name) -> VariantType,
    doc_handle() -> &TextDocumentPrivateType,
}

// vim: syntax=rust expandtab ts=4 sw=4
