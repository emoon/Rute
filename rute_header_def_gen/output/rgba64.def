
struct Rgba64 {
    from_rgba64(quint64 c) -> Rgba64Type,
    from_rgba64(quint16 red, quint16 green, quint16 blue, quint16 alpha) -> Rgba64Type,
    from_rgba(quint8 red, quint8 green, quint8 blue, quint8 alpha) -> Rgba64Type,
    from_argb32(uint rgb) -> Rgba64Type,
    is_opaque() -> bool,
    is_transparent() -> bool,
    red() -> quint16,
    green() -> quint16,
    blue() -> quint16,
    alpha() -> quint16,
    set_red(quint16 red),
    set_green(quint16 green),
    set_blue(quint16 blue),
    set_alpha(quint16 alpha),
    red8() -> quint8,
    green8() -> quint8,
    blue8() -> quint8,
    alpha8() -> quint8,
    to_argb32() -> uint,
    to_rgb16() -> ushort,
    premultiplied() -> Rgba64Type,
    unpremultiplied() -> Rgba64Type,
    alpha_mask() -> quint64,
    div_257_floor(uint x) -> quint8,
    div_257(quint16 x) -> quint8,
    div_65535(uint x) -> quint16,
    unpremultiplied_32bit() -> Rgba64Type,
    unpremultiplied_64bit() -> Rgba64Type,
}

