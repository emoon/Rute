
struct WidgetLineControl {
    set_accessible_object(&ObjectType object),
    accessible_object() -> &ObjectType,
    next_mask_blank(i32 pos) -> i32,
    prev_mask_blank(i32 pos) -> i32,
    is_undo_available() -> bool,
    is_redo_available() -> bool,
    clear_undo(),
    is_modified() -> bool,
    set_modified(bool modified),
    all_selected() -> bool,
    has_selected_text() -> bool,
    width() -> i32,
    height() -> i32,
    ascent() -> i32,
    natural_text_width() -> f32,
    set_selection(i32 start, i32 length),
    selected_text() -> String,
    text_before_selection() -> String,
    text_after_selection() -> String,
    selection_start() -> i32,
    selection_end() -> i32,
    in_selection(i32 x) -> bool,
    remove_selection(),
    start() -> i32,
    end() -> i32,
    copy(Clipboard::Mode mode),
    paste(Clipboard::Mode mode),
    cursor() -> i32,
    preedit_cursor() -> i32,
    cursor_width() -> i32,
    set_cursor_width(i32 value),
    cursor_move_style() -> Rute::CursorMoveStyle,
    set_cursor_move_style(Rute::CursorMoveStyle style),
    move_cursor(i32 pos, bool mark),
    cursor_forward(bool mark, i32 steps),
    cursor_word_forward(bool mark),
    cursor_word_backward(bool mark),
    home(bool mark),
    end(bool mark),
    x_to_pos(i32 x, TextLine::CursorPosition arg0) -> i32,
    rect_for_pos(i32 pos) -> RectType,
    cursor_rect() -> RectType,
    anchor_rect() -> RectType,
    cursor_to_x(i32 cursor) -> f32,
    cursor_to_x() -> f32,
    is_read_only() -> bool,
    set_read_only(bool enable),
    text() -> String,
    set_text(String txt),
    commit_preedit(),
    display_text() -> String,
    surrounding_text() -> String,
    backspace(),
    del(),
    deselect(),
    select_all(),
    insert(String arg0),
    clear(),
    undo(),
    redo(),
    select_word_at_pos(i32 arg0),
    echo_mode() -> uint,
    set_echo_mode(uint mode),
    max_length() -> i32,
    set_max_length(i32 max_length),
    validator() -> &ValidatorType,
    set_validator(&ValidatorType v),
    completer() -> &CompleterType,
    set_completer(&CompleterType c),
    complete(i32 key),
    cursor_position() -> i32,
    set_cursor_position(i32 pos),
    has_acceptable_input() -> bool,
    fixup() -> bool,
    input_mask() -> String,
    set_input_mask(String mask),
    compose_mode() -> bool,
    set_preedit_area(i32 cursor, String text),
    preedit_area_text() -> String,
    update_password_echo_editing(bool editing),
    password_echo_editing() -> bool,
    password_character() -> CharType,
    set_password_character(CharType character),
    password_mask_delay() -> i32,
    set_password_mask_delay(i32 delay),
    layout_direction() -> Rute::LayoutDirection,
    set_layout_direction(Rute::LayoutDirection direction),
    set_font(&FontType font),
    process_input_method_event(&InputMethodEventType event),
    process_key_event(&KeyEventType ev),
    set_blinking_cursor_enabled(bool enable),
    update_cursor_blinking(),
    reset_cursor_blink_timer(),
    cursor_blink_status() -> bool,
    cancel_text() -> String,
    set_cancel_text(String text),
    palette() -> &PaletteType,
    set_palette(&PaletteType p),
    draw(&PainterType arg0, &PointType arg1, &RectType arg2, i32 flags),
    process_shortcut_override_event(&KeyEventType ke),
    text_layout() -> &TextLayoutType,
    init(String txt),
    remove_selected_text(),
    internal_set_text(String txt, i32 pos, bool edited),
    update_display_text(bool force_update),
    internal_insert(String s),
    internal_delete(bool was_backspace),
    internal_remove(i32 pos),
    internal_deselect(),
    internal_undo(i32 until),
    internal_redo(),
    emit_cursor_position_changed(),
    finish_change(i32 validate_from_state, bool update, bool edited) -> bool,
    advance_to_enabled_item(i32 dir) -> bool,
    add_command(onst QWidgetLineControl::Command & cmd),
    separate(),
    parse_input_mask(String mask_fields),
    is_valid_input(CharType key, CharType mask) -> bool,
    has_acceptable_input(String text) -> bool,
    find_in_mask(i32 pos, bool forward, bool find_separator, CharType search_char) -> i32,
    cancel_password_echo_timer(),
    redo_text_layout() -> i32,
    cursor_position_changed(i32 arg0, i32 arg1),
    selection_changed(),
    display_text_changed(String arg0),
    text_changed(String arg0),
    text_edited(String arg0),
    reset_input_context(),
    update_micro_focus(),
    accepted(),
    editing_finished(),
    update_needed(&RectType arg0),
    timer_event(&TimerEventType event),
    q_delete_selected(),
}

