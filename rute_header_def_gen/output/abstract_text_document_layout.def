struct AbstractTextDocumentLayout : Object {
    draw(&PainterType painter, onst QAbstractTextDocumentLayout::PaintContext & context),
    hit_test(&PointFType point, Rute::HitTestAccuracy accuracy) -> i32,
    anchor_at(&PointFType pos) -> String,
    image_at(&PointFType pos) -> String,
    format_at(&PointFType pos) -> TextFormatType,
    page_count() -> i32,
    document_size() -> SizeFType,
    frame_bounding_rect(&TextFrameType frame) -> RectFType,
    block_bounding_rect(&TextBlockType block) -> RectFType,
    set_paint_device(&PaintDeviceType device),
    paint_device() -> &PaintDeviceType,
    document() -> &TextDocumentType,
    register_handler(i32 object_type, &ObjectType component),
    unregister_handler(i32 object_type, &ObjectType component),
    handler_for_object(i32 object_type) -> &TextObjectInterfaceType,
    [callback] update(&RectFType arg0),
    [callback] update_block(&TextBlockType block),
    [callback] document_size_changed(&SizeFType new_size),
    [callback] page_count_changed(i32 new_pages),
    document_changed(i32 from, i32 chars_removed, i32 chars_added),
    resize_inline_object(TextInlineObjectType item, i32 pos_in_document, &TextFormatType format),
    position_inline_object(TextInlineObjectType item, i32 pos_in_document, &TextFormatType format),
    draw_inline_object(&PainterType painter, &RectFType rect, TextInlineObjectType object, i32 pos_in_document, &TextFormatType format),
    format_index(i32 pos) -> i32,
    format(i32 pos) -> TextCharFormatType,
}

// vim: syntax=rust expandtab ts=4 sw=4
