struct AbstractTextDocumentLayout : Object {
    draw(painter: &PainterType, context: onst QAbstractTextDocumentLayout::PaintContext &),
    hit_test(point: &PointFType, accuracy: Rute::HitTestAccuracy) -> i32,
    anchor_at(pos: &PointFType) -> String,
    image_at(pos: &PointFType) -> String,
    format_at(pos: &PointFType) -> TextFormatType,
    page_count() -> i32,
    document_size() -> SizeFType,
    frame_bounding_rect(frame: &TextFrameType) -> RectFType,
    block_bounding_rect(block: &TextBlockType) -> RectFType,
    set_paint_device(device: &PaintDeviceType),
    paint_device() -> &PaintDeviceType,
    document() -> &TextDocumentType,
    register_handler(object_type: i32, component: &ObjectType),
    unregister_handler(object_type: i32, component: &ObjectType),
    handler_for_object(object_type: i32) -> &TextObjectInterfaceType,
    [callback] update(arg0: &RectFType),
    [callback] update_block(block: &TextBlockType),
    [callback] document_size_changed(new_size: &SizeFType),
    [callback] page_count_changed(new_pages: i32),
    document_changed(from: i32, chars_removed: i32, chars_added: i32),
    resize_inline_object(item: TextInlineObjectType, pos_in_document: i32, format: &TextFormatType),
    position_inline_object(item: TextInlineObjectType, pos_in_document: i32, format: &TextFormatType),
    draw_inline_object(painter: &PainterType, rect: &RectFType, object: TextInlineObjectType, pos_in_document: i32, format: &TextFormatType),
    format_index(pos: i32) -> i32,
    format(pos: i32) -> TextCharFormatType,
}

// vim: syntax=rust expandtab ts=4 sw=4
