[org_name(QPlatformDialogHelper)]
enum StyleHint {
}

[org_name(QPlatformDialogHelper)]
enum DialogCode {
    Rejected,
    Accepted,
}

[org_name(QPlatformDialogHelper)]
enum StandardButton {
    NoButton,
    Ok,
    Save,
    SaveAll,
    Open,
    Yes,
    YesToAll,
    No,
    NoToAll,
    Abort,
    Retry,
    Ignore,
    Close,
    Cancel,
    Discard,
    Help,
    Apply,
    Reset,
    RestoreDefaults,
    FirstButton,
    LastButton,
    LowestBit,
    HighestBit,
}

[org_name(QPlatformDialogHelper)]
enum ButtonRole {
    InvalidRole,
    AcceptRole,
    RejectRole,
    DestructiveRole,
    ActionRole,
    HelpRole,
    YesRole,
    NoRole,
    ResetRole,
    ApplyRole,
    NRoles,
    RoleMask,
    AlternateRole,
    Stretch,
    Reverse,
    EOL,
}

[org_name(QPlatformDialogHelper)]
enum ButtonLayout {
    UnknownLayout,
    WinLayout,
    MacLayout,
    KdeLayout,
    GnomeLayout,
    MacModelessLayout,
    AndroidLayout,
}

struct PlatformDialogHelper : Object {
    [event] style_hint(hint: PlatformDialogHelper::StyleHint) -> Variant,
    [event] exec(),
    [event] show(window_flags: Rute::WindowFlags, window_modality: Rute::WindowModality, parent: *WindowType) -> bool,
    [event] hide(),
    [static] default_style_hint(hint: PlatformDialogHelper::StyleHint) -> Variant,
    [static] button_layout(orientation: Rute::Orientation, policy: PlatformDialogHelper::ButtonLayout) -> i32?,
    [static] button_role(button: PlatformDialogHelper::StandardButton) -> PlatformDialogHelper::ButtonRole,
    [signal] accept(),
    [signal] reject(),
}

// vim: syntax=rust expandtab ts=4 sw=4
