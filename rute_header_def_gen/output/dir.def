[org_name(QDir)]
enum Filter {
    Dirs,
    Files,
    Drives,
    NoSymLinks,
    AllEntries,
    TypeMask,
    Readable,
    Writable,
    Executable,
    PermissionMask,
    Modified,
    Hidden,
    System,
    AccessMask,
    AllDirs,
    CaseSensitive,
    NoDot,
    NoDotDot,
    NoDotAndDotDot,
    NoFilter,
}

[org_name(QDir)]
enum SortFlag {
    Name,
    Time,
    Size,
    Unsorted,
    SortByMask,
    DirsFirst,
    Reversed,
    IgnoreCase,
    DirsLast,
    LocaleAware,
    Type,
    NoSort,
}


struct Dir {
    swap(other: &DirType),
    set_path(path: String),
    path() -> String,
    absolute_path() -> String,
    canonical_path() -> String,
    [static] add_resource_search_path(path: String),
    [static] set_search_paths(prefix: String, search_paths: &[String]),
    [static] add_search_path(prefix: String, path: String),
    [static] search_paths(prefix: String) -> [String],
    dir_name() -> String,
    file_path(file_name: String) -> String,
    absolute_file_path(file_name: String) -> String,
    relative_file_path(file_name: String) -> String,
    [static] to_native_separators(path_name: String) -> String,
    [static] from_native_separators(path_name: String) -> String,
    cd(dir_name: String) -> bool,
    cd_up() -> bool,
    name_filters() -> [String],
    set_name_filters(name_filters: &[String]),
    filter() -> Dir::Filters,
    set_filter(filter: Dir::Filters),
    sorting() -> Dir::SortFlags,
    set_sorting(sort: Dir::SortFlags),
    count() -> uint,
    is_empty(filters: Dir::Filters) -> bool,
    mkdir(dir_name: String) -> bool,
    rmdir(dir_name: String) -> bool,
    mkpath(dir_path: String) -> bool,
    rmpath(dir_path: String) -> bool,
    remove_recursively() -> bool,
    is_readable() -> bool,
    exists() -> bool,
    is_root() -> bool,
    [static] is_relative_path(path: String) -> bool,
    [static] is_absolute_path(path: String) -> bool,
    is_relative() -> bool,
    is_absolute() -> bool,
    make_absolute() -> bool,
    remove(file_name: String) -> bool,
    rename(old_name: String, new_name: String) -> bool,
    exists(name: String) -> bool,
    [static] drives() -> FileInfoList,
    [static] list_separator() -> Char,
    [static] separator() -> Char,
    [static] set_current(path: String) -> bool,
    [static] current() -> Dir,
    [static] current_path() -> String,
    [static] home() -> Dir,
    [static] home_path() -> String,
    [static] root() -> Dir,
    [static] root_path() -> String,
    [static] temp() -> Dir,
    [static] temp_path() -> String,
    [static] match(filters: &[String], file_name: String) -> bool,
    [static] match(filter: String, file_name: String) -> bool,
    [static] clean_path(path: String) -> String,
    refresh(),
}

// vim: syntax=rust expandtab ts=4 sw=4
