
struct MetaProperty {
    name() -> &char,
    type_name() -> &char,
    type() -> Variant::Type,
    user_type() -> i32,
    property_index() -> i32,
    is_readable() -> bool,
    is_writable() -> bool,
    is_resettable() -> bool,
    is_designable(&ObjectType obj) -> bool,
    is_scriptable(&ObjectType obj) -> bool,
    is_stored(&ObjectType obj) -> bool,
    is_editable(&ObjectType obj) -> bool,
    is_user(&ObjectType obj) -> bool,
    is_constant() -> bool,
    is_final() -> bool,
    is_flag_type() -> bool,
    is_enum_type() -> bool,
    enumerator() -> MetaEnumType,
    has_notify_signal() -> bool,
    notify_signal() -> MetaMethodType,
    notify_signal_index() -> i32,
    revision() -> i32,
    read(&ObjectType obj) -> VariantType,
    write(&ObjectType obj, &VariantType value) -> bool,
    reset(&ObjectType obj) -> bool,
    read_on_gadget(&void gadget) -> VariantType,
    write_on_gadget(&void gadget, &VariantType value) -> bool,
    reset_on_gadget(&void gadget) -> bool,
    has_std_cpp_set() -> bool,
    is_valid() -> bool,
    enclosing_meta_object() -> &MetaObjectType,
    register_property_type() -> i32,
}

