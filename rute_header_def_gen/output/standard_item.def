#[org_name(QStandardItem)]
enum ItemType {
    Type,
    UserType,
}


struct StandardItem {
    [replace] data(role: i32) -> Variant,
    [replace] set_data(value: &VariantType, role: i32),
    text() -> String,
    set_text(text: String),
    icon() -> Icon,
    set_icon(icon: &IconType),
    tool_tip() -> String,
    set_tool_tip(tool_tip: String),
    status_tip() -> String,
    set_status_tip(status_tip: String),
    whats_this() -> String,
    set_whats_this(whats_this: String),
    size_hint() -> Size,
    set_size_hint(size_hint: &SizeType),
    font() -> Font,
    set_font(font: &FontType),
    text_alignment() -> Rute::Alignment,
    set_text_alignment(text_alignment: Rute::Alignment),
    background() -> Brush,
    set_background(brush: &BrushType),
    foreground() -> Brush,
    set_foreground(brush: &BrushType),
    check_state() -> Rute::CheckState,
    set_check_state(check_state: Rute::CheckState),
    accessible_text() -> String,
    set_accessible_text(accessible_text: String),
    accessible_description() -> String,
    set_accessible_description(accessible_description: String),
    flags() -> Rute::ItemFlags,
    set_flags(flags: Rute::ItemFlags),
    is_enabled() -> bool,
    set_enabled(enabled: bool),
    is_editable() -> bool,
    set_editable(editable: bool),
    is_selectable() -> bool,
    set_selectable(selectable: bool),
    is_checkable() -> bool,
    set_checkable(checkable: bool),
    is_auto_tristate() -> bool,
    set_auto_tristate(tristate: bool),
    is_user_tristate() -> bool,
    set_user_tristate(tristate: bool),
    is_tristate() -> bool,
    set_tristate(tristate: bool),
    is_drag_enabled() -> bool,
    set_drag_enabled(drag_enabled: bool),
    is_drop_enabled() -> bool,
    set_drop_enabled(drop_enabled: bool),
    parent() -> StandardItem?,
    row() -> i32,
    column() -> i32,
    index() -> ModelIndex,
    model() -> StandardItemModel?,
    row_count() -> i32,
    set_row_count(rows: i32),
    column_count() -> i32,
    set_column_count(columns: i32),
    has_children() -> bool,
    child(row: i32, column: i32) -> StandardItem?,
    set_child(row: i32, column: i32, item: &StandardItemType),
    set_child(row: i32, item: &StandardItemType),
    insert_row(row: i32, items: [&StandardItemType]),
    insert_column(column: i32, items: [&StandardItemType]),
    insert_rows(row: i32, items: [&StandardItemType]),
    insert_rows(row: i32, count: i32),
    insert_columns(column: i32, count: i32),
    remove_row(row: i32),
    remove_column(column: i32),
    remove_rows(row: i32, count: i32),
    remove_columns(column: i32, count: i32),
    append_row(items: [&StandardItemType]),
    append_rows(items: [&StandardItemType]),
    append_column(items: [&StandardItemType]),
    insert_row(row: i32, item: &StandardItemType),
    append_row(item: &StandardItemType),
    take_child(row: i32, column: i32) -> StandardItem?,
    take_row(row: i32) -> [StandardItem?],
    take_column(column: i32) -> [StandardItem?],
    sort_children(column: i32, order: Rute::SortOrder),
    [replace] clone() -> StandardItem?,
    [replace] type() -> i32,
    [replace] read(in: &DataStreamType),
    [replace] write(out: &DataStreamType),
    emit_data_changed(),
}

// vim: syntax=rust expandtab ts=4 sw=4
