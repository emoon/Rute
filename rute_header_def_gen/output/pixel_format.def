
struct PixelFormat {
    get(offset: PixelFormat::Field, width: PixelFormat::FieldWidth) -> uchar,
    set(offset: PixelFormat::Field, width: PixelFormat::FieldWidth, value: uchar) -> quint64,
    color_model() -> PixelFormat::ColorModel,
    channel_count() -> uchar,
    red_size() -> uchar,
    green_size() -> uchar,
    blue_size() -> uchar,
    cyan_size() -> uchar,
    magenta_size() -> uchar,
    yellow_size() -> uchar,
    black_size() -> uchar,
    hue_size() -> uchar,
    saturation_size() -> uchar,
    lightness_size() -> uchar,
    brightness_size() -> uchar,
    alpha_size() -> uchar,
    bits_per_pixel() -> uchar,
    alpha_usage() -> PixelFormat::AlphaUsage,
    alpha_position() -> PixelFormat::AlphaPosition,
    premultiplied() -> PixelFormat::AlphaPremultiplied,
    type_interpretation() -> PixelFormat::TypeInterpretation,
    byte_order() -> PixelFormat::ByteOrder,
    yuv_layout() -> PixelFormat::YUVLayout,
    sub_enum() -> uchar,
}

// vim: syntax=rust expandtab ts=4 sw=4
