/// 
/// QStyleOptionToolBar contains all the information that QStyle
/// functions need to draw QToolBar.
/// 
/// For performance reasons, the access to the member variables is
/// direct (i.e., using the `.` or `->` operator). This low-level feel
/// makes the structures straightforward to use and emphasizes that
/// these are simply parameters used by the style functions.
/// 
/// The QStyleOptionToolBar class holds the lineWidth and the
/// midLineWidth for drawing the widget. It also stores information
/// about which [area](toolBarArea)
/// the toolbar should be located
/// in, whether it is movable or not, which position the toolbar line
/// should have (positionOfLine), and the toolbar's position within
/// the line (positionWithinLine).
/// 
/// In addition, the class provides a couple of enums: The
/// ToolBarFeature enum is used to describe whether a toolbar is
/// movable or not, and the ToolBarPosition enum is used to describe
/// the position of a toolbar line, as well as the toolbar's position
/// within the line.
/// 
/// For an example demonstrating how style options can be used, see
/// the [Styles](widgets/styles)
/// example.
/// 
/// **See also:** [`StyleOption`]
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct StyleOptionToolBar : StyleOption {
}

[org_name(QStyleOptionToolBar)]
enum StyleOptionType {
    Type,
}

[org_name(QStyleOptionToolBar)]
enum StyleOptionVersion {
    Version,
}

[org_name(QStyleOptionToolBar)]
enum ToolBarPosition {
    Beginning,
    Middle,
    End,
    OnlyOne,
}

[org_name(QStyleOptionToolBar)]
enum ToolBarFeature {
    None,
    Movable,
}

// vim: syntax=rust expandtab ts=4 sw=4
