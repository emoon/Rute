struct Application : GuiApplication {
    [static] style() -> &StyleType,
    [static] set_style(arg0: &StyleType),
    [static] set_style(arg0: String) -> &StyleType,
    [static] color_spec() -> i32,
    [static] set_color_spec(arg0: i32),
    [static] palette(arg0: &WidgetType) -> PaletteType,
    [static] palette(class_name: &char) -> PaletteType,
    [static] set_palette(arg0: &PaletteType, class_name: &char),
    [static] font() -> FontType,
    [static] font(arg0: &WidgetType) -> FontType,
    [static] font(class_name: &char) -> FontType,
    [static] set_font(arg0: &FontType, class_name: &char),
    [static] set_window_icon(icon: &IconType),
    [static] window_icon() -> IconType,
    [static] all_widgets() -> WidgetListType,
    [static] top_level_widgets() -> WidgetListType,
    [static] desktop() -> &DesktopWidgetType,
    [static] active_popup_widget() -> &WidgetType,
    [static] active_modal_widget() -> &WidgetType,
    [static] focus_widget() -> &WidgetType,
    [static] active_window() -> &WidgetType,
    [static] set_active_window(act: &WidgetType),
    [static] widget_at(p: &PointType) -> &WidgetType,
    [static] widget_at(x: i32, y: i32) -> &WidgetType,
    [static] top_level_at(p: &PointType) -> &WidgetType,
    [static] top_level_at(x: i32, y: i32) -> &WidgetType,
    [static] beep(),
    [static] alert(widget: &WidgetType, duration: i32),
    [static] set_cursor_flash_time(arg0: i32),
    [static] cursor_flash_time() -> i32,
    [static] set_double_click_interval(arg0: i32),
    [static] double_click_interval() -> i32,
    [static] set_keyboard_input_interval(arg0: i32),
    [static] keyboard_input_interval() -> i32,
    [static] set_wheel_scroll_lines(arg0: i32),
    [static] wheel_scroll_lines() -> i32,
    [static] set_start_drag_time(ms: i32),
    [static] start_drag_time() -> i32,
    [static] set_start_drag_distance(l: i32),
    [static] start_drag_distance() -> i32,
    [static] is_effect_enabled(arg0: Rute::UIEffect) -> bool,
    [static] set_effect_enabled(arg0: Rute::UIEffect, enable: bool),
    [static] exec() -> i32,
    [override] notify(arg0: &ObjectType, arg1: &EventType) -> bool,
    [event] focus_changed(old: &WidgetType, now: &WidgetType),
    style_sheet() -> String,
    set_style_sheet(sheet: String),
    set_auto_sip_enabled(enabled: bool),
    auto_sip_enabled() -> bool,
    [static] close_all_windows(),
    [static] about_qt(),
    [override] event(arg0: &EventType) -> bool,
    [override] compress_event(arg0: &EventType, receiver: &ObjectType, arg1: &PostEventListType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
