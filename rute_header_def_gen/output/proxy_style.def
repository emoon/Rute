struct ProxyStyle : CommonStyle {
    base_style() -> &StyleType,
    set_base_style(&StyleType style),
    draw_primitive(Style::PrimitiveElement element, &StyleOptionType option, &PainterType painter, &WidgetType widget),
    draw_item_text(&PainterType painter, &RectType rect, i32 flags, &PaletteType pal, bool enabled, String text, Palette::ColorRole text_role),
    draw_item_pixmap(&PainterType painter, &RectType rect, i32 alignment, &PixmapType pixmap),
    size_from_contents(Style::ContentsType type, &StyleOptionType option, &SizeType size, &WidgetType widget) -> SizeType,
    sub_element_rect(Style::SubElement element, &StyleOptionType option, &WidgetType widget) -> RectType,
    item_text_rect(&FontMetricsType fm, &RectType r, i32 flags, bool enabled, String text) -> RectType,
    item_pixmap_rect(&RectType r, i32 flags, &PixmapType pixmap) -> RectType,
    style_hint(Style::StyleHint hint, &StyleOptionType option, &WidgetType widget, &StyleHintReturnType return_data) -> i32,
    layout_spacing(SizePolicy::ControlType control1, SizePolicy::ControlType control2, Rute::Orientation orientation, &StyleOptionType option, &WidgetType widget) -> i32,
    standard_icon(Style::StandardPixmap standard_icon, &StyleOptionType option, &WidgetType widget) -> IconType,
    standard_pixmap(Style::StandardPixmap standard_pixmap, &StyleOptionType opt, &WidgetType widget) -> PixmapType,
    generated_icon_pixmap(Icon::Mode icon_mode, &PixmapType pixmap, &StyleOptionType opt) -> PixmapType,
    standard_palette() -> PaletteType,
    polish(&WidgetType widget),
    polish(&PaletteType pal),
    polish(&ApplicationType app),
    unpolish(&WidgetType widget),
    unpolish(&ApplicationType app),
    event(&EventType e) -> bool,
}

