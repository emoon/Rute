struct Layout : Object, LayoutItem {
    margin() -> i32,
    spacing() -> i32,
    set_margin(i32 arg0),
    set_spacing(i32 arg0),
    set_contents_margins(i32 left, i32 top, i32 right, i32 bottom),
    set_contents_margins(&MarginsType margins),
    get_contents_margins(&i32 left, &i32 top, &i32 right, &i32 bottom),
    contents_margins() -> MarginsType,
    contents_rect() -> RectType,
    set_alignment(&WidgetType w, Rute::Alignment alignment) -> bool,
    set_alignment(&LayoutType l, Rute::Alignment alignment) -> bool,
    set_menu_bar(&WidgetType w),
    menu_bar() -> &WidgetType,
    parent_widget() -> &WidgetType,
    invalidate(),
    activate() -> bool,
    update(),
    add_widget(&WidgetType w),
    add_item(&LayoutItemType arg0),
    remove_widget(&WidgetType w),
    remove_item(&LayoutItemType arg0),
    expanding_directions() -> Rute::Orientations,
    minimum_size() -> SizeType,
    maximum_size() -> SizeType,
    item_at(i32 index) -> &LayoutItemType,
    take_at(i32 index) -> &LayoutItemType,
    index_of(&WidgetType arg0) -> i32,
    count() -> i32,
    is_empty() -> bool,
    replace_widget(&WidgetType from, &WidgetType to, Rute::FindChildOptions options) -> &LayoutItemType,
    total_height_for_width(i32 w) -> i32,
    total_minimum_size() -> SizeType,
    total_maximum_size() -> SizeType,
    total_size_hint() -> SizeType,
    layout() -> &LayoutType,
    set_enabled(bool arg0),
    is_enabled() -> bool,
    closest_acceptable_size(&WidgetType w, &SizeType s) -> SizeType,
    widget_event(&EventType arg0),
    child_event(&ChildEventType e),
    add_child_layout(&LayoutType l),
    add_child_widget(&WidgetType w),
    adopt_layout(&LayoutType layout) -> bool,
    alignment_rect(&RectType arg0) -> RectType,
    activate_recursive_helper(&LayoutItemType item),
}

// vim: syntax=rust expandtab ts=4 sw=4
