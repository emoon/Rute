///     \class QOpenGLExtraFunctions
///     \brief The QOpenGLExtraFunctions class provides cross-platform access to the OpenGL ES 3.0, 3.1 and 3.2 API.
///     \since 5.6
///     \ingroup painting-3D
///     \inmodule QtGui
/// 
///     This subclass of QOpenGLFunctions includes the OpenGL ES 3.0, 3.1 and 3.2
///     functions. These will only work when an OpenGL ES 3.x context, or an
///     OpenGL context of a version containing the functions in question either in
///     core or as extension, is in use. This allows developing GLES 3.x
///     applications in a cross-platform manner: development can happen on a desktop
///     platform with OpenGL 3.x or 4.x, deploying to a true GLES 3.x device later
///     on will require no or minimal changes to the application.
/// 
///     \note This class is different from the versioned OpenGL wrappers, for
///     instance QOpenGLFunctions_3_2_Core. The versioned function wrappers target a
///     given version and profile of OpenGL. They are therefore not suitable for
///     cross-OpenGL-OpenGLES development.
///  */
/// 
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct OpenGLExtraFunctions : OpenGLFunctions {
    gl_read_buffer(mode: i32),
    gl_draw_range_elements(mode: i32, start: i32, end: i32, count: i32, type: i32, indices: *void),
    gl_tex_image3_d(target: i32, level: GLint, internalformat: GLint, width: i32, height: i32, depth: i32, border: GLint, format: i32, type: i32, pixels: *void),
    gl_tex_sub_image3_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: i32, height: i32, depth: i32, format: i32, type: i32, pixels: *void),
    gl_copy_tex_sub_image3_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: i32, height: i32),
    gl_compressed_tex_image3_d(target: i32, level: GLint, internalformat: i32, width: i32, height: i32, depth: i32, border: GLint, image_size: i32, data: *void),
    gl_compressed_tex_sub_image3_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: i32, height: i32, depth: i32, format: i32, image_size: i32, data: *void),
    gl_gen_queries(n: i32, ids: *i32),
    gl_delete_queries(n: i32, ids: *i32),
    gl_is_query(id: i32) -> i32,
    gl_begin_query(target: i32, id: i32),
    gl_end_query(target: i32),
    gl_get_queryiv(target: i32, pname: i32, params: *GLint),
    gl_get_query_objectuiv(id: i32, pname: i32, params: *i32),
    gl_unmap_buffer(target: i32) -> i32,
    gl_get_buffer_pointerv(target: i32, pname: i32, params: *void),
    gl_draw_buffers(n: i32, bufs: *i32),
    gl_blit_framebuffer(src_x0: GLint, src_y0: GLint, src_x1: GLint, src_y1: GLint, dst_x0: GLint, dst_y0: GLint, dst_x1: GLint, dst_y1: GLint, mask: i32, filter: i32),
    gl_renderbuffer_storage_multisample(target: i32, samples: i32, internalformat: i32, width: i32, height: i32),
    gl_framebuffer_texture_layer(target: i32, attachment: i32, texture: i32, level: GLint, layer: GLint),
    gl_map_buffer_range(target: i32, offset: GLintptr, length: GLsizeiptr, access: i32),
    gl_flush_mapped_buffer_range(target: i32, offset: GLintptr, length: GLsizeiptr),
    gl_bind_vertex_array(array: i32),
    gl_delete_vertex_arrays(n: i32, arrays: *i32),
    gl_gen_vertex_arrays(n: i32, arrays: *i32),
    gl_is_vertex_array(array: i32) -> i32,
    gl_get_integeri_v(target: i32, index: i32, data: *GLint),
    gl_begin_transform_feedback(primitive_mode: i32),
    gl_end_transform_feedback(),
    gl_bind_buffer_range(target: i32, index: i32, buffer: i32, offset: GLintptr, size: GLsizeiptr),
    gl_bind_buffer_base(target: i32, index: i32, buffer: i32),
    gl_transform_feedback_varyings(program: i32, count: i32, varyings: *GLchar, buffer_mode: i32),
    gl_get_transform_feedback_varying(program: i32, index: i32, buf_size: i32, length: *i32, size: *i32, type: *i32, name: *GLchar),
    gl_get_uniformuiv(program: i32, location: GLint, params: *i32),
    gl_get_frag_data_location(program: i32, name: *GLchar) -> i32,
    gl_uniform1ui(location: GLint, v0: i32),
    gl_uniform2ui(location: GLint, v0: i32, v1: i32),
    gl_uniform3ui(location: GLint, v0: i32, v1: i32, v2: i32),
    gl_uniform4ui(location: GLint, v0: i32, v1: i32, v2: i32, v3: i32),
    gl_uniform1uiv(location: GLint, count: i32, value: *i32),
    gl_uniform2uiv(location: GLint, count: i32, value: *i32),
    gl_uniform3uiv(location: GLint, count: i32, value: *i32),
    gl_uniform4uiv(location: GLint, count: i32, value: *i32),
    gl_clear_bufferiv(buffer: i32, drawbuffer: GLint, value: *GLint),
    gl_clear_bufferuiv(buffer: i32, drawbuffer: GLint, value: *i32),
    gl_clear_bufferfv(buffer: i32, drawbuffer: GLint, value: *i32),
    gl_clear_bufferfi(buffer: i32, drawbuffer: GLint, depth: i32, stencil: GLint),
    gl_copy_buffer_sub_data(read_target: i32, write_target: i32, read_offset: GLintptr, write_offset: GLintptr, size: GLsizeiptr),
    gl_get_uniform_indices(program: i32, uniform_count: i32, uniform_names: *GLchar, uniform_indices: *i32),
    gl_get_active_uniformsiv(program: i32, uniform_count: i32, uniform_indices: *i32, pname: i32, params: *GLint),
    gl_get_uniform_block_index(program: i32, uniform_block_name: *GLchar) -> i32,
    gl_get_active_uniform_blockiv(program: i32, uniform_block_index: i32, pname: i32, params: *GLint),
    gl_get_active_uniform_block_name(program: i32, uniform_block_index: i32, buf_size: i32, length: *i32, uniform_block_name: *GLchar),
    gl_uniform_block_binding(program: i32, uniform_block_index: i32, uniform_block_binding: i32),
    gl_draw_arrays_instanced(mode: i32, first: GLint, count: i32, instancecount: i32),
    gl_draw_elements_instanced(mode: i32, count: i32, type: i32, indices: *void, instancecount: i32),
    gl_fence_sync(condition: i32, flags: i32) -> GLsync,
    gl_is_sync(sync: GLsync) -> i32,
    gl_delete_sync(sync: GLsync),
    gl_client_wait_sync(sync: GLsync, flags: i32, timeout: GLuint64) -> i32,
    gl_wait_sync(sync: GLsync, flags: i32, timeout: GLuint64),
    gl_get_integer64v(pname: i32, data: *GLint64),
    gl_get_synciv(sync: GLsync, pname: i32, buf_size: i32, length: *i32, values: *GLint),
    gl_get_integer64i_v(target: i32, index: i32, data: *GLint64),
    gl_get_buffer_parameteri64v(target: i32, pname: i32, params: *GLint64),
    gl_gen_samplers(count: i32, samplers: *i32),
    gl_delete_samplers(count: i32, samplers: *i32),
    gl_is_sampler(sampler: i32) -> i32,
    gl_bind_sampler(unit: i32, sampler: i32),
    gl_sampler_parameteri(sampler: i32, pname: i32, param: GLint),
    gl_sampler_parameteriv(sampler: i32, pname: i32, param: *GLint),
    gl_sampler_parameterf(sampler: i32, pname: i32, param: i32),
    gl_sampler_parameterfv(sampler: i32, pname: i32, param: *i32),
    gl_get_sampler_parameteriv(sampler: i32, pname: i32, params: *GLint),
    gl_get_sampler_parameterfv(sampler: i32, pname: i32, params: *i32),
    gl_bind_transform_feedback(target: i32, id: i32),
    gl_delete_transform_feedbacks(n: i32, ids: *i32),
    gl_gen_transform_feedbacks(n: i32, ids: *i32),
    gl_is_transform_feedback(id: i32) -> i32,
    gl_pause_transform_feedback(),
    gl_resume_transform_feedback(),
    gl_get_program_binary(program: i32, buf_size: i32, length: *i32, binary_format: *i32, binary: *void),
    gl_program_binary(program: i32, binary_format: i32, binary: *void, length: i32),
    gl_program_parameteri(program: i32, pname: i32, value: GLint),
    gl_invalidate_framebuffer(target: i32, num_attachments: i32, attachments: *i32),
    gl_invalidate_sub_framebuffer(target: i32, num_attachments: i32, attachments: *i32, x: GLint, y: GLint, width: i32, height: i32),
    gl_tex_storage2_d(target: i32, levels: i32, internalformat: i32, width: i32, height: i32),
    gl_tex_storage3_d(target: i32, levels: i32, internalformat: i32, width: i32, height: i32, depth: i32),
    gl_get_internalformativ(target: i32, internalformat: i32, pname: i32, buf_size: i32, params: *GLint),
    gl_dispatch_compute(num_groups_x: i32, num_groups_y: i32, num_groups_z: i32),
    gl_dispatch_compute_indirect(indirect: GLintptr),
    gl_draw_arrays_indirect(mode: i32, indirect: *void),
    gl_draw_elements_indirect(mode: i32, type: i32, indirect: *void),
    gl_framebuffer_parameteri(target: i32, pname: i32, param: GLint),
    gl_get_framebuffer_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_get_program_interfaceiv(program: i32, program_interface: i32, pname: i32, params: *GLint),
    gl_get_program_resource_index(program: i32, program_interface: i32, name: *GLchar) -> i32,
    gl_get_program_resource_name(program: i32, program_interface: i32, index: i32, buf_size: i32, length: *i32, name: *GLchar),
    gl_get_program_resourceiv(program: i32, program_interface: i32, index: i32, prop_count: i32, props: *i32, buf_size: i32, length: *i32, params: *GLint),
    gl_get_program_resource_location(program: i32, program_interface: i32, name: *GLchar) -> i32,
    gl_use_program_stages(pipeline: i32, stages: i32, program: i32),
    gl_active_shader_program(pipeline: i32, program: i32),
    gl_create_shader_programv(type: i32, count: i32, strings: *GLchar) -> i32,
    gl_bind_program_pipeline(pipeline: i32),
    gl_delete_program_pipelines(n: i32, pipelines: *i32),
    gl_gen_program_pipelines(n: i32, pipelines: *i32),
    gl_is_program_pipeline(pipeline: i32) -> i32,
    gl_get_program_pipelineiv(pipeline: i32, pname: i32, params: *GLint),
    gl_program_uniform1i(program: i32, location: GLint, v0: GLint),
    gl_program_uniform2i(program: i32, location: GLint, v0: GLint, v1: GLint),
    gl_program_uniform3i(program: i32, location: GLint, v0: GLint, v1: GLint, v2: GLint),
    gl_program_uniform4i(program: i32, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint),
    gl_program_uniform1ui(program: i32, location: GLint, v0: i32),
    gl_program_uniform2ui(program: i32, location: GLint, v0: i32, v1: i32),
    gl_program_uniform3ui(program: i32, location: GLint, v0: i32, v1: i32, v2: i32),
    gl_program_uniform4ui(program: i32, location: GLint, v0: i32, v1: i32, v2: i32, v3: i32),
    gl_program_uniform1f(program: i32, location: GLint, v0: i32),
    gl_program_uniform2f(program: i32, location: GLint, v0: i32, v1: i32),
    gl_program_uniform3f(program: i32, location: GLint, v0: i32, v1: i32, v2: i32),
    gl_program_uniform4f(program: i32, location: GLint, v0: i32, v1: i32, v2: i32, v3: i32),
    gl_program_uniform1iv(program: i32, location: GLint, count: i32, value: *GLint),
    gl_program_uniform2iv(program: i32, location: GLint, count: i32, value: *GLint),
    gl_program_uniform3iv(program: i32, location: GLint, count: i32, value: *GLint),
    gl_program_uniform4iv(program: i32, location: GLint, count: i32, value: *GLint),
    gl_program_uniform1uiv(program: i32, location: GLint, count: i32, value: *i32),
    gl_program_uniform2uiv(program: i32, location: GLint, count: i32, value: *i32),
    gl_program_uniform3uiv(program: i32, location: GLint, count: i32, value: *i32),
    gl_program_uniform4uiv(program: i32, location: GLint, count: i32, value: *i32),
    gl_program_uniform1fv(program: i32, location: GLint, count: i32, value: *i32),
    gl_program_uniform2fv(program: i32, location: GLint, count: i32, value: *i32),
    gl_program_uniform3fv(program: i32, location: GLint, count: i32, value: *i32),
    gl_program_uniform4fv(program: i32, location: GLint, count: i32, value: *i32),
    gl_validate_program_pipeline(pipeline: i32),
    gl_get_program_pipeline_info_log(pipeline: i32, buf_size: i32, length: *i32, info_log: *GLchar),
    gl_bind_image_texture(unit: i32, texture: i32, level: GLint, layered: i32, layer: GLint, access: i32, format: i32),
    gl_get_booleani_v(target: i32, index: i32, data: *i32),
    gl_memory_barrier(barriers: i32),
    gl_memory_barrier_by_region(barriers: i32),
    gl_tex_storage2_d_multisample(target: i32, samples: i32, internalformat: i32, width: i32, height: i32, fixedsamplelocations: i32),
    gl_get_multisamplefv(pname: i32, index: i32, val: *i32),
    gl_sample_maski(mask_number: i32, mask: i32),
    gl_get_tex_level_parameteriv(target: i32, level: GLint, pname: i32, params: *GLint),
    gl_get_tex_level_parameterfv(target: i32, level: GLint, pname: i32, params: *i32),
    gl_bind_vertex_buffer(bindingindex: i32, buffer: i32, offset: GLintptr, stride: i32),
    gl_vertex_binding_divisor(bindingindex: i32, divisor: i32),
    gl_blend_barrier(),
    gl_copy_image_sub_data(src_name: i32, src_target: i32, src_level: GLint, src_x: GLint, src_y: GLint, src_z: GLint, dst_name: i32, dst_target: i32, dst_level: GLint, dst_x: GLint, dst_y: GLint, dst_z: GLint, src_width: i32, src_height: i32, src_depth: i32),
    gl_debug_message_insert(source: i32, type: i32, id: i32, severity: i32, length: i32, buf: *GLchar),
    gl_debug_message_callback(callback: GLDEBUGPROC, user_param: *void),
    gl_get_debug_message_log(count: i32, buf_size: i32, sources: *i32, types: *i32, ids: *i32, severities: *i32, lengths: *i32, message_log: *GLchar) -> i32,
    gl_push_debug_group(source: i32, id: i32, length: i32, message: *GLchar),
    gl_pop_debug_group(),
    gl_object_label(identifier: i32, name: i32, length: i32, label: *GLchar),
    gl_get_object_label(identifier: i32, name: i32, buf_size: i32, length: *i32, label: *GLchar),
    gl_get_pointerv(pname: i32, params: *void),
    gl_enablei(target: i32, index: i32),
    gl_disablei(target: i32, index: i32),
    gl_blend_equationi(buf: i32, mode: i32),
    gl_blend_equation_separatei(buf: i32, mode_rgb: i32, mode_alpha: i32),
    gl_blend_funci(buf: i32, src: i32, dst: i32),
    gl_blend_func_separatei(buf: i32, src_rgb: i32, dst_rgb: i32, src_alpha: i32, dst_alpha: i32),
    gl_color_maski(index: i32, r: i32, g: i32, b: i32, a: i32),
    gl_is_enabledi(target: i32, index: i32) -> i32,
    gl_draw_elements_base_vertex(mode: i32, count: i32, type: i32, indices: *void, basevertex: GLint),
    gl_draw_range_elements_base_vertex(mode: i32, start: i32, end: i32, count: i32, type: i32, indices: *void, basevertex: GLint),
    gl_draw_elements_instanced_base_vertex(mode: i32, count: i32, type: i32, indices: *void, instancecount: i32, basevertex: GLint),
    gl_framebuffer_texture(target: i32, attachment: i32, texture: i32, level: GLint),
    gl_primitive_bounding_box(min_x: i32, min_y: i32, min_z: i32, min_w: i32, max_x: i32, max_y: i32, max_z: i32, max_w: i32),
    gl_get_graphics_reset_status() -> i32,
    gl_readn_pixels(x: GLint, y: GLint, width: i32, height: i32, format: i32, type: i32, buf_size: i32, data: *void),
    gl_getn_uniformfv(program: i32, location: GLint, buf_size: i32, params: *i32),
    gl_getn_uniformiv(program: i32, location: GLint, buf_size: i32, params: *GLint),
    gl_getn_uniformuiv(program: i32, location: GLint, buf_size: i32, params: *i32),
    gl_min_sample_shading(value: i32),
    gl_patch_parameteri(pname: i32, value: GLint),
    gl_tex_parameter_iiv(target: i32, pname: i32, params: *GLint),
    gl_tex_parameter_iuiv(target: i32, pname: i32, params: *i32),
    gl_get_tex_parameter_iiv(target: i32, pname: i32, params: *GLint),
    gl_get_tex_parameter_iuiv(target: i32, pname: i32, params: *i32),
    gl_sampler_parameter_iiv(sampler: i32, pname: i32, param: *GLint),
    gl_sampler_parameter_iuiv(sampler: i32, pname: i32, param: *i32),
    gl_get_sampler_parameter_iiv(sampler: i32, pname: i32, params: *GLint),
    gl_get_sampler_parameter_iuiv(sampler: i32, pname: i32, params: *i32),
    gl_tex_buffer(target: i32, internalformat: i32, buffer: i32),
    gl_tex_buffer_range(target: i32, internalformat: i32, buffer: i32, offset: GLintptr, size: GLsizeiptr),
    gl_tex_storage3_d_multisample(target: i32, samples: i32, internalformat: i32, width: i32, height: i32, depth: i32, fixedsamplelocations: i32),
}

// vim: syntax=rust expandtab ts=4 sw=4
