///     \class QLine
///     \inmodule QtCore
///     \ingroup painting
/// 
///     \brief The QLine class provides a two-dimensional vector using
///     integer precision.
/// 
///     A QLine describes a finite length line (or a line segment) on a
///     two-dimensional surface. The start and end points of the line are
///     specified using integer point accuracy for coordinates. Use the
///     QLineF constructor to retrieve a floating point copy.
/// 
///     \table
///     \row
///         \li \inlineimage qline-point.png
///         \li \inlineimage qline-coordinates.png
///     \endtable
/// 
///     The positions of the line's start and end points can be retrieved
///     using the p1(), x1(), y1(), p2(), x2(), and y2() functions. The
///     dx() and dy() functions return the horizontal and vertical
///     components of the line. Use isNull() to determine whether the
///     QLine represents a valid line or a null line.
/// 
///     Finally, the line can be translated a given offset using the
///     translate() function.
/// 
///     \sa QLineF, QPolygon, QRect

struct Line {
    is_null() -> bool,
    p1() -> Point,
    p2() -> Point,
    x1() -> i32,
    y1() -> i32,
    x2() -> i32,
    y2() -> i32,
    dx() -> i32,
    dy() -> i32,
    center() -> Point,
    set_p1(p1: &PointType),
    set_p2(p2: &PointType),
    set_points(p1: &PointType, p2: &PointType),
    set_line(x1: i32, y1: i32, x2: i32, y2: i32),
}

// vim: syntax=rust expandtab ts=4 sw=4
