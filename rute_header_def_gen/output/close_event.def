/// 
/// Close events are sent to widgets that the user wants to close,
/// usually by choosing from the window menu, or by clicking
/// the **{X}** title bar button. They are also sent when you call
/// QWidget::close() to close a widget programmatically.
/// 
/// Close events contain a flag that indicates whether the receiver
/// wants the widget to be closed or not. When a widget accepts the
/// close event, it is hidden (and destroyed if it was created with
/// the Qt::WA_DeleteOnClose flag). If it refuses to accept the close
/// event nothing happens. (Under X11 it is possible that the window
/// manager will forcibly close the window; but at the time of writing
/// we are not aware of any window manager that does this.)
/// 
/// The event handler QWidget::closeEvent() receives close events. The
/// default implementation of this event handler accepts the close
/// event. If you do not want your widget to be hidden, or want some
/// special handling, you should reimplement the event handler and
/// ignore() the event.
/// 
/// The [closeEvent() in the
/// Application example](mainwindows/application%23close%20event%20handler)
/// shows a close event handler that
/// asks whether to save a document before closing.
/// 
/// If you want the widget to be deleted when it is closed, create it
/// with the Qt::WA_DeleteOnClose flag. This is very useful for
/// independent top-level windows in a multi-window application.
/// 
/// [QObject](QObject)
/// s emits the [destroyed()](QObject::destroyed())
/// 
/// signal when they are deleted.
/// 
/// If the last top-level window is closed, the
/// QGuiApplication::lastWindowClosed() signal is emitted.
/// 
/// The isAccepted() function returns `true` if the event's receiver has
/// agreed to close the widget; call accept() to agree to close the
/// widget and call ignore() if the receiver of this event does not
/// want the widget to be closed.
/// 
/// **See also:** [`Widget::close`]
/// [`Widget::hide`]
/// [`Object::destroyed`]
/// [`CoreApplication::exec`]
/// [`CoreApplication::quit`]
/// [`GuiApplication::last_window_closed`]
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct CloseEvent : Event {
}

// vim: syntax=rust expandtab ts=4 sw=4
