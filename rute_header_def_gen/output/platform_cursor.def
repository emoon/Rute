///     \class QPlatformCursor
///     \since 5.0
///     \internal
///     \preliminary
///     \ingroup qpa
/// 
///     \brief The QPlatformCursor class provides information about
///     pointer device events (movement, buttons), and requests to change
///     the currently displayed cursor.
/// 
///     Note that QPlatformCursor does not include any graphics for
///     display. An application that sets a QCursor may provide its own
///     graphics.
/// 
///     \sa QPlatformCursorImage
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
[org_name(QPlatformCursor)]
enum Capability {
    OverrideCursor,
}

struct PlatformCursor : Object {
    [event] pointer_event(event: &MouseEventType),
    [event] change_cursor(window_cursor: *CursorType, window: *WindowType),
    ///     Reimplement this function in subclass to set an override cursor
    ///     on the associated screen and return true to indicate success.
    /// 
    ///     This function can be implemented on platforms where the cursor is a
    ///     property of the application or the screen rather than a property
    ///     of the window. On these platforms, the OverrideCursor capability
    ///     should be set.
    /// 
    ///     \sa QGuiApplication::setOverrideCursor(), Capabilities
    /// 
    ///     \since 5.10
    [event] set_override_cursor(arg0: &CursorType),
    ///     Reimplement this function in subclass to clear the override cursor.
    /// 
    ///     \sa QGuiApplication::clearOverrideCursor(), Capabilities
    /// 
    ///     \since 5.10
    [event] clear_override_cursor(),
    [event] pos() -> Point,
    [event] set_pos(pos: &PointType),
    [static] capabilities() -> PlatformCursor::Capabilities,
    [static] set_capabilities(c: PlatformCursor::Capabilities),
    [static] set_capability(c: PlatformCursor::Capability),
}

// vim: syntax=rust expandtab ts=4 sw=4
