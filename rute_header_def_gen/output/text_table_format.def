///     \class QTextTableFormat
///     \reentrant
/// 
///     \brief The QTextTableFormat class provides formatting information for
///     tables in a QTextDocument.
///     \inmodule QtGui
/// 
///     \ingroup richtext-processing
///     \ingroup shared
/// 
///     A table is a group of cells ordered into rows and columns. Each table
///     contains at least one row and one column. Each cell contains a block.
///     Tables in rich text documents are formatted using the properties
///     defined in this class.
/// 
///     Tables are horizontally justified within their parent frame according to the
///     table's alignment. This can be read with the alignment() function and set
///     with setAlignment().
/// 
///     Cells within the table are separated by cell spacing. The number of pixels
///     between cells is set with setCellSpacing() and read with cellSpacing().
///     The contents of each cell is surrounded by cell padding. The number of pixels
///     between each cell edge and its contents is set with setCellPadding() and read
///     with cellPadding().
/// 
///     \image qtexttableformat-cell.png
/// 
///     The table's background color can be read with the background() function,
///     and can be specified with setBackground(). The background color of each
///     cell can be set independently, and will control the color of the cell within
///     the padded area.
/// 
///     The table format also provides a way to constrain the widths of the columns
///     in the table. Columns can be assigned a fixed width, a variable width, or
///     a percentage of the available width (see QTextLength). The columns() function
///     returns the number of columns with constraints, and the
///     columnWidthConstraints() function returns the constraints defined for the
///     table. These quantities can also be set by calling setColumnWidthConstraints()
///     with a vector containing new constraints. If no constraints are
///     required, clearColumnWidthConstraints() can be used to remove them.
/// 
///     \sa QTextTable, QTextTableCell, QTextLength
/// The documentation provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct TextTableFormat : TextFrameFormat {
    is_valid() -> bool,
    columns() -> i32,
    set_columns(columns: i32),
    cell_spacing() -> f32,
    set_cell_spacing(spacing: f32),
    cell_padding() -> f32,
    set_cell_padding(padding: f32),
    set_alignment(alignment: Rute::Alignment),
    alignment() -> Rute::Alignment,
    set_header_row_count(count: i32),
    header_row_count() -> i32,
}

// vim: syntax=rust expandtab ts=4 sw=4
