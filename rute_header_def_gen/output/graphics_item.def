
struct GraphicsItem {
    scene() -> &GraphicsSceneType,
    parent_item() -> &GraphicsItemType,
    top_level_item() -> &GraphicsItemType,
    parent_object() -> &GraphicsObjectType,
    parent_widget() -> &GraphicsWidgetType,
    top_level_widget() -> &GraphicsWidgetType,
    window() -> &GraphicsWidgetType,
    panel() -> &GraphicsItemType,
    set_parent_item(&GraphicsItemType parent),
    child_items() -> <&GraphicsItemType>,
    is_widget() -> bool,
    is_window() -> bool,
    is_panel() -> bool,
    to_graphics_object() -> &GraphicsObjectType,
    to_graphics_object() -> &GraphicsObjectType,
    group() -> &GraphicsItemGroupType,
    set_group(&GraphicsItemGroupType group),
    flags() -> GraphicsItemFlags,
    set_flag(GraphicsItem::GraphicsItemFlag flag, bool enabled),
    set_flags(GraphicsItemFlags flags),
    cache_mode() -> GraphicsItem::CacheMode,
    set_cache_mode(GraphicsItem::CacheMode mode, &SizeType cache_size),
    panel_modality() -> GraphicsItem::PanelModality,
    set_panel_modality(GraphicsItem::PanelModality panel_modality),
    is_blocked_by_modal_panel(&GraphicsItemType blocking_panel) -> bool,
    tool_tip() -> String,
    set_tool_tip(String tool_tip),
    cursor() -> CursorType,
    set_cursor(&CursorType cursor),
    has_cursor() -> bool,
    unset_cursor(),
    is_visible() -> bool,
    is_visible_to(&GraphicsItemType parent) -> bool,
    set_visible(bool visible),
    hide(),
    show(),
    is_enabled() -> bool,
    set_enabled(bool enabled),
    is_selected() -> bool,
    set_selected(bool selected),
    accept_drops() -> bool,
    set_accept_drops(bool on),
    opacity() -> f32,
    effective_opacity() -> f32,
    set_opacity(f32 opacity),
    graphics_effect() -> &GraphicsEffectType,
    set_graphics_effect(&GraphicsEffectType effect),
    accepted_mouse_buttons() -> Rute::MouseButtons,
    set_accepted_mouse_buttons(Rute::MouseButtons buttons),
    accept_hover_events() -> bool,
    set_accept_hover_events(bool enabled),
    accept_touch_events() -> bool,
    set_accept_touch_events(bool enabled),
    filters_child_events() -> bool,
    set_filters_child_events(bool enabled),
    handles_child_events() -> bool,
    set_handles_child_events(bool enabled),
    is_active() -> bool,
    set_active(bool active),
    has_focus() -> bool,
    set_focus(Rute::FocusReason focus_reason),
    clear_focus(),
    focus_proxy() -> &GraphicsItemType,
    set_focus_proxy(&GraphicsItemType item),
    focus_item() -> &GraphicsItemType,
    focus_scope_item() -> &GraphicsItemType,
    grab_mouse(),
    ungrab_mouse(),
    grab_keyboard(),
    ungrab_keyboard(),
    pos() -> PointFType,
    x() -> f32,
    set_x(f32 x),
    y() -> f32,
    set_y(f32 y),
    scene_pos() -> PointFType,
    set_pos(&PointFType pos),
    set_pos(f32 x, f32 y),
    move_by(f32 dx, f32 dy),
    ensure_visible(&RectFType rect, i32 xmargin, i32 ymargin),
    ensure_visible(f32 x, f32 y, f32 w, f32 h, i32 xmargin, i32 ymargin),
    scene_transform() -> TransformType,
    device_transform(&TransformType viewport_transform) -> TransformType,
    item_transform(&GraphicsItemType other, &bool ok) -> TransformType,
    set_transform(&TransformType matrix, bool combine),
    reset_transform(),
    set_rotation(f32 angle),
    rotation() -> f32,
    set_scale(f32 scale),
    scale() -> f32,
    set_transformations(<&GraphicsTransformType> transformations),
    set_transform_origin_point(&PointFType origin),
    set_transform_origin_point(f32 ax, f32 ay),
    advance(i32 phase),
    z_value() -> f32,
    set_z_value(f32 z),
    stack_before(&GraphicsItemType sibling),
    bounding_rect() -> RectFType,
    children_bounding_rect() -> RectFType,
    scene_bounding_rect() -> RectFType,
    shape() -> PainterPathType,
    is_clipped() -> bool,
    clip_path() -> PainterPathType,
    contains(&PointFType point) -> bool,
    collides_with_item(&GraphicsItemType other, Rute::ItemSelectionMode mode) -> bool,
    collides_with_path(&PainterPathType path, Rute::ItemSelectionMode mode) -> bool,
    colliding_items(Rute::ItemSelectionMode mode) -> <&GraphicsItemType>,
    is_obscured(&RectFType rect) -> bool,
    is_obscured(f32 x, f32 y, f32 w, f32 h) -> bool,
    is_obscured_by(&GraphicsItemType item) -> bool,
    opaque_area() -> PainterPathType,
    bounding_region(&TransformType item_to_device_transform) -> RegionType,
    bounding_region_granularity() -> f32,
    set_bounding_region_granularity(f32 granularity),
    paint(&PainterType painter, &StyleOptionGraphicsItemType option, &WidgetType widget),
    update(&RectFType rect),
    update(f32 x, f32 y, f32 width, f32 height),
    scroll(f32 dx, f32 dy, &RectFType rect),
    map_to_item(&GraphicsItemType item, &PointFType point) -> PointFType,
    map_to_parent(&PointFType point) -> PointFType,
    map_to_scene(&PointFType point) -> PointFType,
    map_to_item(&GraphicsItemType item, &RectFType rect) -> PolygonFType,
    map_to_parent(&RectFType rect) -> PolygonFType,
    map_to_scene(&RectFType rect) -> PolygonFType,
    map_rect_to_item(&GraphicsItemType item, &RectFType rect) -> RectFType,
    map_rect_to_parent(&RectFType rect) -> RectFType,
    map_rect_to_scene(&RectFType rect) -> RectFType,
    map_to_item(&GraphicsItemType item, &PolygonFType polygon) -> PolygonFType,
    map_to_parent(&PolygonFType polygon) -> PolygonFType,
    map_to_scene(&PolygonFType polygon) -> PolygonFType,
    map_to_item(&GraphicsItemType item, &PainterPathType path) -> PainterPathType,
    map_to_parent(&PainterPathType path) -> PainterPathType,
    map_to_scene(&PainterPathType path) -> PainterPathType,
    map_from_item(&GraphicsItemType item, &PointFType point) -> PointFType,
    map_from_parent(&PointFType point) -> PointFType,
    map_from_scene(&PointFType point) -> PointFType,
    map_from_item(&GraphicsItemType item, &RectFType rect) -> PolygonFType,
    map_from_parent(&RectFType rect) -> PolygonFType,
    map_from_scene(&RectFType rect) -> PolygonFType,
    map_rect_from_item(&GraphicsItemType item, &RectFType rect) -> RectFType,
    map_rect_from_parent(&RectFType rect) -> RectFType,
    map_rect_from_scene(&RectFType rect) -> RectFType,
    map_from_item(&GraphicsItemType item, &PolygonFType polygon) -> PolygonFType,
    map_from_parent(&PolygonFType polygon) -> PolygonFType,
    map_from_scene(&PolygonFType polygon) -> PolygonFType,
    map_from_item(&GraphicsItemType item, &PainterPathType path) -> PainterPathType,
    map_from_parent(&PainterPathType path) -> PainterPathType,
    map_from_scene(&PainterPathType path) -> PainterPathType,
    map_to_item(&GraphicsItemType item, f32 x, f32 y) -> PointFType,
    map_to_parent(f32 x, f32 y) -> PointFType,
    map_to_scene(f32 x, f32 y) -> PointFType,
    map_to_item(&GraphicsItemType item, f32 x, f32 y, f32 w, f32 h) -> PolygonFType,
    map_to_parent(f32 x, f32 y, f32 w, f32 h) -> PolygonFType,
    map_to_scene(f32 x, f32 y, f32 w, f32 h) -> PolygonFType,
    map_rect_to_item(&GraphicsItemType item, f32 x, f32 y, f32 w, f32 h) -> RectFType,
    map_rect_to_parent(f32 x, f32 y, f32 w, f32 h) -> RectFType,
    map_rect_to_scene(f32 x, f32 y, f32 w, f32 h) -> RectFType,
    map_from_item(&GraphicsItemType item, f32 x, f32 y) -> PointFType,
    map_from_parent(f32 x, f32 y) -> PointFType,
    map_from_scene(f32 x, f32 y) -> PointFType,
    map_from_item(&GraphicsItemType item, f32 x, f32 y, f32 w, f32 h) -> PolygonFType,
    map_from_parent(f32 x, f32 y, f32 w, f32 h) -> PolygonFType,
    map_from_scene(f32 x, f32 y, f32 w, f32 h) -> PolygonFType,
    map_rect_from_item(&GraphicsItemType item, f32 x, f32 y, f32 w, f32 h) -> RectFType,
    map_rect_from_parent(f32 x, f32 y, f32 w, f32 h) -> RectFType,
    map_rect_from_scene(f32 x, f32 y, f32 w, f32 h) -> RectFType,
    is_ancestor_of(&GraphicsItemType child) -> bool,
    common_ancestor_item(&GraphicsItemType other) -> &GraphicsItemType,
    is_under_mouse() -> bool,
    data(i32 key) -> VariantType,
    set_data(i32 key, &VariantType value),
    input_method_hints() -> Rute::InputMethodHints,
    set_input_method_hints(Rute::InputMethodHints hints),
    type() -> i32,
    install_scene_event_filter(&GraphicsItemType filter_item),
    remove_scene_event_filter(&GraphicsItemType filter_item),
    update_micro_focus(),
    scene_event_filter(&GraphicsItemType watched, &EventType event) -> bool,
    scene_event(&EventType event) -> bool,
    context_menu_event(&GraphicsSceneContextMenuEventType event),
    drag_enter_event(&GraphicsSceneDragDropEventType event),
    drag_leave_event(&GraphicsSceneDragDropEventType event),
    drag_move_event(&GraphicsSceneDragDropEventType event),
    drop_event(&GraphicsSceneDragDropEventType event),
    focus_in_event(&FocusEventType event),
    focus_out_event(&FocusEventType event),
    hover_enter_event(&GraphicsSceneHoverEventType event),
    hover_move_event(&GraphicsSceneHoverEventType event),
    hover_leave_event(&GraphicsSceneHoverEventType event),
    key_press_event(&KeyEventType event),
    key_release_event(&KeyEventType event),
    mouse_press_event(&GraphicsSceneMouseEventType event),
    mouse_move_event(&GraphicsSceneMouseEventType event),
    mouse_release_event(&GraphicsSceneMouseEventType event),
    mouse_double_click_event(&GraphicsSceneMouseEventType event),
    wheel_event(&GraphicsSceneWheelEventType event),
    input_method_event(&InputMethodEventType event),
    input_method_query(Rute::InputMethodQuery query) -> VariantType,
    item_change(GraphicsItem::GraphicsItemChange change, &VariantType value) -> VariantType,
    supports_extension(GraphicsItem::Extension extension) -> bool,
    set_extension(GraphicsItem::Extension extension, &VariantType variant),
    extension(&VariantType variant) -> VariantType,
    add_to_index(),
    remove_from_index(),
}

// vim: syntax=rust expandtab ts=4 sw=4
