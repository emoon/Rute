
struct GraphicsItem {
    scene() -> &GraphicsSceneType,
    parent_item() -> &GraphicsItemType,
    top_level_item() -> &GraphicsItemType,
    parent_object() -> &GraphicsObjectType,
    parent_widget() -> &GraphicsWidgetType,
    top_level_widget() -> &GraphicsWidgetType,
    window() -> &GraphicsWidgetType,
    panel() -> &GraphicsItemType,
    set_parent_item(parent: &GraphicsItemType),
    child_items() -> [&GraphicsItemType],
    is_widget() -> bool,
    is_window() -> bool,
    is_panel() -> bool,
    to_graphics_object() -> &GraphicsObjectType,
    to_graphics_object() -> &GraphicsObjectType,
    group() -> &GraphicsItemGroupType,
    set_group(group: &GraphicsItemGroupType),
    flags() -> GraphicsItemFlags,
    set_flag(flag: GraphicsItem::GraphicsItemFlag, enabled: bool),
    set_flags(flags: GraphicsItemFlags),
    cache_mode() -> GraphicsItem::CacheMode,
    set_cache_mode(mode: GraphicsItem::CacheMode, cache_size: &SizeType),
    panel_modality() -> GraphicsItem::PanelModality,
    set_panel_modality(panel_modality: GraphicsItem::PanelModality),
    is_blocked_by_modal_panel(blocking_panel: &GraphicsItemType) -> bool,
    tool_tip() -> String,
    set_tool_tip(tool_tip: String),
    cursor() -> CursorType,
    set_cursor(cursor: &CursorType),
    has_cursor() -> bool,
    unset_cursor(),
    is_visible() -> bool,
    is_visible_to(parent: &GraphicsItemType) -> bool,
    set_visible(visible: bool),
    hide(),
    show(),
    is_enabled() -> bool,
    set_enabled(enabled: bool),
    is_selected() -> bool,
    set_selected(selected: bool),
    accept_drops() -> bool,
    set_accept_drops(on: bool),
    opacity() -> f32,
    effective_opacity() -> f32,
    set_opacity(opacity: f32),
    graphics_effect() -> &GraphicsEffectType,
    set_graphics_effect(effect: &GraphicsEffectType),
    accepted_mouse_buttons() -> Rute::MouseButtons,
    set_accepted_mouse_buttons(buttons: Rute::MouseButtons),
    accept_hover_events() -> bool,
    set_accept_hover_events(enabled: bool),
    accept_touch_events() -> bool,
    set_accept_touch_events(enabled: bool),
    filters_child_events() -> bool,
    set_filters_child_events(enabled: bool),
    handles_child_events() -> bool,
    set_handles_child_events(enabled: bool),
    is_active() -> bool,
    set_active(active: bool),
    has_focus() -> bool,
    set_focus(focus_reason: Rute::FocusReason),
    clear_focus(),
    focus_proxy() -> &GraphicsItemType,
    set_focus_proxy(item: &GraphicsItemType),
    focus_item() -> &GraphicsItemType,
    focus_scope_item() -> &GraphicsItemType,
    grab_mouse(),
    ungrab_mouse(),
    grab_keyboard(),
    ungrab_keyboard(),
    pos() -> PointFType,
    x() -> f32,
    set_x(x: f32),
    y() -> f32,
    set_y(y: f32),
    scene_pos() -> PointFType,
    set_pos(pos: &PointFType),
    set_pos(x: f32, y: f32),
    move_by(dx: f32, dy: f32),
    ensure_visible(rect: &RectFType, xmargin: i32, ymargin: i32),
    ensure_visible(x: f32, y: f32, w: f32, h: f32, xmargin: i32, ymargin: i32),
    scene_transform() -> TransformType,
    device_transform(viewport_transform: &TransformType) -> TransformType,
    item_transform(other: &GraphicsItemType, ok: &bool) -> TransformType,
    set_transform(matrix: &TransformType, combine: bool),
    reset_transform(),
    set_rotation(angle: f32),
    rotation() -> f32,
    set_scale(scale: f32),
    scale() -> f32,
    set_transformations(transformations: [&GraphicsTransformType]),
    set_transform_origin_point(origin: &PointFType),
    set_transform_origin_point(ax: f32, ay: f32),
    advance(phase: i32),
    z_value() -> f32,
    set_z_value(z: f32),
    stack_before(sibling: &GraphicsItemType),
    bounding_rect() -> RectFType,
    children_bounding_rect() -> RectFType,
    scene_bounding_rect() -> RectFType,
    shape() -> PainterPathType,
    is_clipped() -> bool,
    clip_path() -> PainterPathType,
    contains(point: &PointFType) -> bool,
    collides_with_item(other: &GraphicsItemType, mode: Rute::ItemSelectionMode) -> bool,
    collides_with_path(path: &PainterPathType, mode: Rute::ItemSelectionMode) -> bool,
    colliding_items(mode: Rute::ItemSelectionMode) -> [&GraphicsItemType],
    is_obscured(rect: &RectFType) -> bool,
    is_obscured(x: f32, y: f32, w: f32, h: f32) -> bool,
    is_obscured_by(item: &GraphicsItemType) -> bool,
    opaque_area() -> PainterPathType,
    bounding_region(item_to_device_transform: &TransformType) -> RegionType,
    bounding_region_granularity() -> f32,
    set_bounding_region_granularity(granularity: f32),
    paint(painter: &PainterType, option: &StyleOptionGraphicsItemType, widget: &WidgetType),
    update(rect: &RectFType),
    update(x: f32, y: f32, width: f32, height: f32),
    scroll(dx: f32, dy: f32, rect: &RectFType),
    map_to_item(item: &GraphicsItemType, point: &PointFType) -> PointFType,
    map_to_parent(point: &PointFType) -> PointFType,
    map_to_scene(point: &PointFType) -> PointFType,
    map_to_item(item: &GraphicsItemType, rect: &RectFType) -> PolygonFType,
    map_to_parent(rect: &RectFType) -> PolygonFType,
    map_to_scene(rect: &RectFType) -> PolygonFType,
    map_rect_to_item(item: &GraphicsItemType, rect: &RectFType) -> RectFType,
    map_rect_to_parent(rect: &RectFType) -> RectFType,
    map_rect_to_scene(rect: &RectFType) -> RectFType,
    map_to_item(item: &GraphicsItemType, polygon: &PolygonFType) -> PolygonFType,
    map_to_parent(polygon: &PolygonFType) -> PolygonFType,
    map_to_scene(polygon: &PolygonFType) -> PolygonFType,
    map_to_item(item: &GraphicsItemType, path: &PainterPathType) -> PainterPathType,
    map_to_parent(path: &PainterPathType) -> PainterPathType,
    map_to_scene(path: &PainterPathType) -> PainterPathType,
    map_from_item(item: &GraphicsItemType, point: &PointFType) -> PointFType,
    map_from_parent(point: &PointFType) -> PointFType,
    map_from_scene(point: &PointFType) -> PointFType,
    map_from_item(item: &GraphicsItemType, rect: &RectFType) -> PolygonFType,
    map_from_parent(rect: &RectFType) -> PolygonFType,
    map_from_scene(rect: &RectFType) -> PolygonFType,
    map_rect_from_item(item: &GraphicsItemType, rect: &RectFType) -> RectFType,
    map_rect_from_parent(rect: &RectFType) -> RectFType,
    map_rect_from_scene(rect: &RectFType) -> RectFType,
    map_from_item(item: &GraphicsItemType, polygon: &PolygonFType) -> PolygonFType,
    map_from_parent(polygon: &PolygonFType) -> PolygonFType,
    map_from_scene(polygon: &PolygonFType) -> PolygonFType,
    map_from_item(item: &GraphicsItemType, path: &PainterPathType) -> PainterPathType,
    map_from_parent(path: &PainterPathType) -> PainterPathType,
    map_from_scene(path: &PainterPathType) -> PainterPathType,
    map_to_item(item: &GraphicsItemType, x: f32, y: f32) -> PointFType,
    map_to_parent(x: f32, y: f32) -> PointFType,
    map_to_scene(x: f32, y: f32) -> PointFType,
    map_to_item(item: &GraphicsItemType, x: f32, y: f32, w: f32, h: f32) -> PolygonFType,
    map_to_parent(x: f32, y: f32, w: f32, h: f32) -> PolygonFType,
    map_to_scene(x: f32, y: f32, w: f32, h: f32) -> PolygonFType,
    map_rect_to_item(item: &GraphicsItemType, x: f32, y: f32, w: f32, h: f32) -> RectFType,
    map_rect_to_parent(x: f32, y: f32, w: f32, h: f32) -> RectFType,
    map_rect_to_scene(x: f32, y: f32, w: f32, h: f32) -> RectFType,
    map_from_item(item: &GraphicsItemType, x: f32, y: f32) -> PointFType,
    map_from_parent(x: f32, y: f32) -> PointFType,
    map_from_scene(x: f32, y: f32) -> PointFType,
    map_from_item(item: &GraphicsItemType, x: f32, y: f32, w: f32, h: f32) -> PolygonFType,
    map_from_parent(x: f32, y: f32, w: f32, h: f32) -> PolygonFType,
    map_from_scene(x: f32, y: f32, w: f32, h: f32) -> PolygonFType,
    map_rect_from_item(item: &GraphicsItemType, x: f32, y: f32, w: f32, h: f32) -> RectFType,
    map_rect_from_parent(x: f32, y: f32, w: f32, h: f32) -> RectFType,
    map_rect_from_scene(x: f32, y: f32, w: f32, h: f32) -> RectFType,
    is_ancestor_of(child: &GraphicsItemType) -> bool,
    common_ancestor_item(other: &GraphicsItemType) -> &GraphicsItemType,
    is_under_mouse() -> bool,
    data(key: i32) -> VariantType,
    set_data(key: i32, value: &VariantType),
    input_method_hints() -> Rute::InputMethodHints,
    set_input_method_hints(hints: Rute::InputMethodHints),
    type() -> i32,
    install_scene_event_filter(filter_item: &GraphicsItemType),
    remove_scene_event_filter(filter_item: &GraphicsItemType),
    update_micro_focus(),
    scene_event_filter(watched: &GraphicsItemType, event: &EventType) -> bool,
    scene_event(event: &EventType) -> bool,
    context_menu_event(event: &GraphicsSceneContextMenuEventType),
    drag_enter_event(event: &GraphicsSceneDragDropEventType),
    drag_leave_event(event: &GraphicsSceneDragDropEventType),
    drag_move_event(event: &GraphicsSceneDragDropEventType),
    drop_event(event: &GraphicsSceneDragDropEventType),
    focus_in_event(event: &FocusEventType),
    focus_out_event(event: &FocusEventType),
    hover_enter_event(event: &GraphicsSceneHoverEventType),
    hover_move_event(event: &GraphicsSceneHoverEventType),
    hover_leave_event(event: &GraphicsSceneHoverEventType),
    key_press_event(event: &KeyEventType),
    key_release_event(event: &KeyEventType),
    mouse_press_event(event: &GraphicsSceneMouseEventType),
    mouse_move_event(event: &GraphicsSceneMouseEventType),
    mouse_release_event(event: &GraphicsSceneMouseEventType),
    mouse_double_click_event(event: &GraphicsSceneMouseEventType),
    wheel_event(event: &GraphicsSceneWheelEventType),
    input_method_event(event: &InputMethodEventType),
    input_method_query(query: Rute::InputMethodQuery) -> VariantType,
    item_change(change: GraphicsItem::GraphicsItemChange, value: &VariantType) -> VariantType,
    supports_extension(extension: GraphicsItem::Extension) -> bool,
    set_extension(extension: GraphicsItem::Extension, variant: &VariantType),
    extension(variant: &VariantType) -> VariantType,
    add_to_index(),
    remove_from_index(),
}

// vim: syntax=rust expandtab ts=4 sw=4
