#[org_name(QFileSystemModel)]
enum Roles {
    FileIconRole,
    FilePathRole,
    FileNameRole,
    FilePermissions,
}

struct FileSystemModel : AbstractItemModel {
    [event] root_path_changed(new_path: String),
    [event] file_renamed(path: String, old_name: String, new_name: String),
    [event] directory_loaded(path: String),
    [replace] index(row: i32, column: i32, parent: &ModelIndexType) -> ModelIndex,
    index(path: String, column: i32) -> ModelIndex,
    [replace] parent(child: &ModelIndexType) -> ModelIndex,
    [replace] sibling(row: i32, column: i32, idx: &ModelIndexType) -> ModelIndex,
    [replace] has_children(parent: &ModelIndexType) -> bool,
    [replace] can_fetch_more(parent: &ModelIndexType) -> bool,
    [replace] fetch_more(parent: &ModelIndexType),
    [replace] row_count(parent: &ModelIndexType) -> i32,
    [replace] column_count(parent: &ModelIndexType) -> i32,
    my_computer(role: i32) -> Variant,
    [replace] data(index: &ModelIndexType, role: i32) -> Variant,
    [replace] set_data(index: &ModelIndexType, value: &VariantType, role: i32) -> bool,
    [replace] header_data(section: i32, orientation: Rute::Orientation, role: i32) -> Variant,
    [replace] flags(index: &ModelIndexType) -> Rute::ItemFlags,
    [replace] sort(column: i32, order: Rute::SortOrder),
    [replace] mime_types() -> [String],
    [replace] mime_data(indexes: &[ModelIndex]) -> MimeData?,
    [replace] drop_mime_data(data: &MimeDataType, action: Rute::DropAction, row: i32, column: i32, parent: &ModelIndexType) -> bool,
    [replace] supported_drop_actions() -> Rute::DropActions,
    set_root_path(path: String) -> ModelIndex,
    root_path() -> String,
    root_directory() -> Dir,
    set_icon_provider(provider: &FileIconProviderType),
    icon_provider() -> FileIconProvider?,
    set_filter(filters: Dir::Filters),
    filter() -> Dir::Filters,
    set_resolve_symlinks(enable: bool),
    resolve_symlinks() -> bool,
    set_read_only(enable: bool),
    is_read_only() -> bool,
    set_name_filter_disables(enable: bool),
    name_filter_disables() -> bool,
    set_name_filters(filters: &[String]),
    name_filters() -> [String],
    file_path(index: &ModelIndexType) -> String,
    is_dir(index: &ModelIndexType) -> bool,
    size(index: &ModelIndexType) -> i64,
    type(index: &ModelIndexType) -> String,
    last_modified(index: &ModelIndexType) -> DateTime,
    mkdir(parent: &ModelIndexType, name: String) -> ModelIndex,
    rmdir(index: &ModelIndexType) -> bool,
    file_name(index: &ModelIndexType) -> String,
    file_icon(index: &ModelIndexType) -> Icon,
    permissions(index: &ModelIndexType) -> File::Permissions,
    file_info(index: &ModelIndexType) -> FileInfo,
    remove(index: &ModelIndexType) -> bool,
    [replace] timer_event(event: &TimerEventType),
    [replace] event(event: &EventType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
