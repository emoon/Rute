enum MonthNameType {
    DateFormat,
    StandaloneFormat,
}


struct Date {
    is_null() -> bool,
    is_valid() -> bool,
    year() -> i32,
    month() -> i32,
    day() -> i32,
    day_of_week() -> i32,
    day_of_year() -> i32,
    days_in_month() -> i32,
    days_in_year() -> i32,
    week_number(year_num: &i32) -> i32,
    [static] short_month_name(month: i32, type: Date::MonthNameType) -> String,
    [static] short_day_name(weekday: i32, type: Date::MonthNameType) -> String,
    [static] long_month_name(month: i32, type: Date::MonthNameType) -> String,
    [static] long_day_name(weekday: i32, type: Date::MonthNameType) -> String,
    set_date(year: i32, month: i32, day: i32) -> bool,
    get_date(year: &i32, month: &i32, day: &i32),
    get_date(year: &i32, month: &i32, day: &i32),
    add_days(days: i64) -> DateType,
    add_months(months: i32) -> DateType,
    add_years(years: i32) -> DateType,
    days_to(arg0: &DateType) -> i64,
    [static] current_date() -> DateType,
    [static] is_valid(y: i32, m: i32, d: i32) -> bool,
    [static] is_leap_year(year: i32) -> bool,
    [static] from_julian_day(jd: i64) -> DateType,
    to_julian_day() -> i64,
}

// vim: syntax=rust expandtab ts=4 sw=4
