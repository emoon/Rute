/// 
/// QStyleHintReturn and its subclasses are used to pass information
/// from a style back to the querying widget. This is most useful
/// when the return value from QStyle::styleHint() does not provide enough
/// detail; for example, when a mask is to be returned.
/// 
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct StyleHintReturn {
}

[org_name(QStyleHintReturn)]
enum HintReturnType {
    /// QStyleHintReturn
    SH_Default = 61440,
    /// [QStyle::SH_RubberBand_Mask](QStyle::SH_RubberBand_Mask)
 QStyle::SH_FocusFrame_Mask
    SH_Mask = 61441,
    /// [QStyle::SH_TextControl_FocusIndicatorTextCharFormat](QStyle::SH_TextControl_FocusIndicatorTextCharFormat)

    SH_Variant = 61442,
}

[org_name(QStyleHintReturn)]
enum StyleOptionType {
    /// The type of style option provided ( [SH_Default](SH_Default)
 for this class). The type is used internally by QStyleHintReturn, its subclasses, and qstyleoption_cast() to determine the type of style option. In general you do not need to worry about this unless you want to create your own QStyleHintReturn subclass and your own styles.
    Type = 61440,
}

[org_name(QStyleHintReturn)]
enum StyleOptionVersion {
    /// 1 The version is used by QStyleHintReturn subclasses to implement extensions without breaking compatibility. If you use qstyleoption_cast(), you normally do not need to check it.
    Version = 1,
}

// vim: syntax=rust expandtab ts=4 sw=4
