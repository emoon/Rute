
struct PainterPath {
    swap(&PainterPathType other),
    close_subpath(),
    move_to(&PointFType p),
    move_to(f32 x, f32 y),
    line_to(&PointFType p),
    line_to(f32 x, f32 y),
    arc_move_to(&RectFType rect, f32 angle),
    arc_move_to(f32 x, f32 y, f32 w, f32 h, f32 angle),
    arc_to(&RectFType rect, f32 start_angle, f32 arc_length),
    arc_to(f32 x, f32 y, f32 w, f32 h, f32 start_angle, f32 arc_length),
    cubic_to(&PointFType ctrl_pt1, &PointFType ctrl_pt2, &PointFType end_pt),
    cubic_to(f32 ctrl_pt1x, f32 ctrl_pt1y, f32 ctrl_pt2x, f32 ctrl_pt2y, f32 end_ptx, f32 end_pty),
    quad_to(&PointFType ctrl_pt, &PointFType end_pt),
    quad_to(f32 ctrl_ptx, f32 ctrl_pty, f32 end_ptx, f32 end_pty),
    current_position() -> PointFType,
    add_rect(&RectFType rect),
    add_rect(f32 x, f32 y, f32 w, f32 h),
    add_ellipse(&RectFType rect),
    add_ellipse(f32 x, f32 y, f32 w, f32 h),
    add_ellipse(&PointFType center, f32 rx, f32 ry),
    add_polygon(&PolygonFType polygon),
    add_text(&PointFType point, &FontType f, String text),
    add_text(f32 x, f32 y, &FontType f, String text),
    add_path(&PainterPathType path),
    add_region(&RegionType region),
    add_rounded_rect(&RectFType rect, f32 x_radius, f32 y_radius, Rute::SizeMode mode),
    add_rounded_rect(f32 x, f32 y, f32 w, f32 h, f32 x_radius, f32 y_radius, Rute::SizeMode mode),
    add_round_rect(&RectFType rect, i32 x_rnd, i32 y_rnd),
    add_round_rect(f32 x, f32 y, f32 w, f32 h, i32 x_rnd, i32 y_rnd),
    add_round_rect(&RectFType rect, i32 roundness),
    add_round_rect(f32 x, f32 y, f32 w, f32 h, i32 roundness),
    connect_path(&PainterPathType path),
    contains(&PointFType pt) -> bool,
    contains(&RectFType rect) -> bool,
    intersects(&RectFType rect) -> bool,
    bounding_rect() -> RectFType,
    fill_rule() -> Rute::FillRule,
    set_fill_rule(Rute::FillRule fill_rule),
    is_empty() -> bool,
    to_reversed() -> PainterPathType,
    to_subpath_polygons(&MatrixType matrix) -> <PolygonFType>,
    to_fill_polygons(&MatrixType matrix) -> <PolygonFType>,
    to_fill_polygon(&MatrixType matrix) -> PolygonFType,
    to_subpath_polygons(&TransformType matrix) -> <PolygonFType>,
    to_fill_polygons(&TransformType matrix) -> <PolygonFType>,
    to_fill_polygon(&TransformType matrix) -> PolygonFType,
    element_count() -> i32,
    element_at(i32 i) -> PainterPath::Element,
    set_element_position_at(i32 i, f32 x, f32 y),
    length() -> f32,
    percent_at_length(f32 t) -> f32,
    point_at_percent(f32 t) -> PointFType,
    angle_at_percent(f32 t) -> f32,
    slope_at_percent(f32 t) -> f32,
    intersects(&PainterPathType p) -> bool,
    contains(&PainterPathType p) -> bool,
    united(&PainterPathType r) -> PainterPathType,
    intersected(&PainterPathType r) -> PainterPathType,
    simplified() -> PainterPathType,
}

// vim: syntax=rust expandtab ts=4 sw=4
