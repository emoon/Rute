struct MessageBox : Dialog {
    add_button(button: &AbstractButtonType, role: MessageBox::ButtonRole),
    add_button(text: String, role: MessageBox::ButtonRole) -> &PushButtonType,
    add_button(button: MessageBox::StandardButton) -> &PushButtonType,
    remove_button(button: &AbstractButtonType),
    open(receiver: &ObjectType, member: &char),
    buttons() -> [&AbstractButtonType],
    button_role(button: &AbstractButtonType) -> MessageBox::ButtonRole,
    set_standard_buttons(buttons: StandardButtons),
    standard_buttons() -> StandardButtons,
    standard_button(button: &AbstractButtonType) -> MessageBox::StandardButton,
    button(which: MessageBox::StandardButton) -> &AbstractButtonType,
    default_button() -> &PushButtonType,
    set_default_button(button: &PushButtonType),
    set_default_button(button: MessageBox::StandardButton),
    escape_button() -> &AbstractButtonType,
    set_escape_button(button: &AbstractButtonType),
    set_escape_button(button: MessageBox::StandardButton),
    clicked_button() -> &AbstractButtonType,
    text() -> String,
    set_text(text: String),
    icon() -> MessageBox::Icon,
    set_icon(arg0: MessageBox::Icon),
    icon_pixmap() -> PixmapType,
    set_icon_pixmap(pixmap: &PixmapType),
    text_format() -> Rute::TextFormat,
    set_text_format(format: Rute::TextFormat),
    set_text_interaction_flags(flags: Rute::TextInteractionFlags),
    text_interaction_flags() -> Rute::TextInteractionFlags,
    set_check_box(cb: &CheckBoxType),
    check_box() -> &CheckBoxType,
    information(parent: &WidgetType, title: String, text: String, buttons: StandardButtons, default_button: MessageBox::StandardButton) -> MessageBox::StandardButton,
    question(parent: &WidgetType, title: String, text: String, buttons: StandardButtons, default_button: MessageBox::StandardButton) -> MessageBox::StandardButton,
    warning(parent: &WidgetType, title: String, text: String, buttons: StandardButtons, default_button: MessageBox::StandardButton) -> MessageBox::StandardButton,
    critical(parent: &WidgetType, title: String, text: String, buttons: StandardButtons, default_button: MessageBox::StandardButton) -> MessageBox::StandardButton,
    about(parent: &WidgetType, title: String, text: String),
    about_qt(parent: &WidgetType, title: String),
    information(parent: &WidgetType, title: String, text: String, button0: i32, button1: i32, button2: i32) -> i32,
    information(parent: &WidgetType, title: String, text: String, button0_text: String, button1_text: String, button2_text: String, default_button_number: i32, escape_button_number: i32) -> i32,
    information(parent: &WidgetType, title: String, text: String, button0: MessageBox::StandardButton, button1: MessageBox::StandardButton) -> MessageBox::StandardButton,
    question(parent: &WidgetType, title: String, text: String, button0: i32, button1: i32, button2: i32) -> i32,
    question(parent: &WidgetType, title: String, text: String, button0_text: String, button1_text: String, button2_text: String, default_button_number: i32, escape_button_number: i32) -> i32,
    question(parent: &WidgetType, title: String, text: String, button0: MessageBox::StandardButton, button1: MessageBox::StandardButton) -> i32,
    warning(parent: &WidgetType, title: String, text: String, button0: i32, button1: i32, button2: i32) -> i32,
    warning(parent: &WidgetType, title: String, text: String, button0_text: String, button1_text: String, button2_text: String, default_button_number: i32, escape_button_number: i32) -> i32,
    warning(parent: &WidgetType, title: String, text: String, button0: MessageBox::StandardButton, button1: MessageBox::StandardButton) -> i32,
    critical(parent: &WidgetType, title: String, text: String, button0: i32, button1: i32, button2: i32) -> i32,
    critical(parent: &WidgetType, title: String, text: String, button0_text: String, button1_text: String, button2_text: String, default_button_number: i32, escape_button_number: i32) -> i32,
    critical(parent: &WidgetType, title: String, text: String, button0: MessageBox::StandardButton, button1: MessageBox::StandardButton) -> i32,
    button_text(button: i32) -> String,
    set_button_text(button: i32, text: String),
    informative_text() -> String,
    set_informative_text(text: String),
    detailed_text() -> String,
    set_detailed_text(text: String),
    set_window_title(title: String),
    set_window_modality(window_modality: Rute::WindowModality),
    standard_icon(icon: MessageBox::Icon) -> PixmapType,
    [callback] button_clicked(button: &AbstractButtonType),
    event(e: &EventType) -> bool,
    resize_event(event: &ResizeEventType),
    show_event(event: &ShowEventType),
    close_event(event: &CloseEventType),
    key_press_event(event: &KeyEventType),
    change_event(event: &EventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
