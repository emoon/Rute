
struct FontDatabase {
    qt_check_for_qgadget_macro(),
    standard_sizes() -> <i32>,
    writing_systems() -> List<QFontDatabase::WritingSystem>,
    writing_systems(String family) -> List<QFontDatabase::WritingSystem>,
    families(FontDatabase::WritingSystem writing_system) -> StringListType,
    styles(String family) -> StringListType,
    point_sizes(String family, String style) -> <i32>,
    smooth_sizes(String family, String style) -> <i32>,
    font(String family, String style, i32 point_size) -> FontType,
    is_bitmap_scalable(String family, String style) -> bool,
    is_smoothly_scalable(String family, String style) -> bool,
    is_scalable(String family, String style) -> bool,
    is_fixed_pitch(String family, String style) -> bool,
    italic(String family, String style) -> bool,
    bold(String family, String style) -> bool,
    weight(String family, String style) -> i32,
    has_family(String family) -> bool,
    writing_system_name(FontDatabase::WritingSystem writing_system) -> String,
    writing_system_sample(FontDatabase::WritingSystem writing_system) -> String,
    add_application_font(String file_name) -> i32,
    add_application_font_from_data(&ByteArrayType font_data) -> i32,
    application_font_families(i32 id) -> StringListType,
    remove_application_font(i32 id) -> bool,
    remove_all_application_fonts() -> bool,
    supports_threaded_font_rendering() -> bool,
    system_font(FontDatabase::SystemFont type) -> FontType,
}

// vim: syntax=rust expandtab ts=4 sw=4
