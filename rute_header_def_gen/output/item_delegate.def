struct ItemDelegate : AbstractItemDelegate {
    has_clipping() -> bool,
    set_clipping(clip: bool),
    [override] paint(painter: &PainterType, option: &StyleOptionViewItemType, index: &ModelIndexType),
    [override] size_hint(option: &StyleOptionViewItemType, index: &ModelIndexType) -> Size,
    [override] create_editor(parent: &WidgetType, option: &StyleOptionViewItemType, index: &ModelIndexType) -> Widget?,
    [override] set_editor_data(editor: &WidgetType, index: &ModelIndexType),
    [override] set_model_data(editor: &WidgetType, model: &AbstractItemModelType, index: &ModelIndexType),
    item_editor_factory() -> ItemEditorFactory?,
    set_item_editor_factory(factory: &ItemEditorFactoryType),
    [override] draw_display(painter: &PainterType, option: &StyleOptionViewItemType, rect: &RectType, text: String),
    [override] draw_decoration(painter: &PainterType, option: &StyleOptionViewItemType, rect: &RectType, pixmap: &PixmapType),
    [override] draw_focus(painter: &PainterType, option: &StyleOptionViewItemType, rect: &RectType),
    [override] draw_check(painter: &PainterType, option: &StyleOptionViewItemType, rect: &RectType, state: Rute::CheckState),
    draw_background(painter: &PainterType, option: &StyleOptionViewItemType, index: &ModelIndexType),
    do_layout(option: &StyleOptionViewItemType, check_rect: &RectType, icon_rect: &RectType, text_rect: &RectType, hint: bool),
    rect(option: &StyleOptionViewItemType, index: &ModelIndexType, role: i32) -> Rect,
    [override] event_filter(object: &ObjectType, event: &EventType) -> bool,
    [override] editor_event(event: &EventType, model: &AbstractItemModelType, option: &StyleOptionViewItemType, index: &ModelIndexType) -> bool,
    set_options(index: &ModelIndexType, option: &StyleOptionViewItemType) -> StyleOptionViewItem,
    decoration(option: &StyleOptionViewItemType, variant: &VariantType) -> Pixmap,
    selected(pixmap: &PixmapType, palette: &PaletteType, enabled: bool) -> Pixmap?,
    do_check(option: &StyleOptionViewItemType, bounding: &RectType, variant: &VariantType) -> Rect,
    text_rectangle(painter: &PainterType, rect: &RectType, font: &FontType, text: String) -> Rect,
}

// vim: syntax=rust expandtab ts=4 sw=4
