#[org_name(QLocale)]
enum Language {
    AnyLanguage,
    C,
    Abkhazian,
    Oromo,
    Afar,
    Afrikaans,
    Albanian,
    Amharic,
    Arabic,
    Armenian,
    Assamese,
    Aymara,
    Azerbaijani,
    Bashkir,
    Basque,
    Bengali,
    Dzongkha,
    Bihari,
    Bislama,
    Breton,
    Bulgarian,
    Burmese,
    Belarusian,
    Khmer,
    Catalan,
    Chinese,
    Corsican,
    Croatian,
    Czech,
    Danish,
    Dutch,
    English,
    Esperanto,
    Estonian,
    Faroese,
    Fijian,
    Finnish,
    French,
    WesternFrisian,
    Gaelic,
    Galician,
    Georgian,
    German,
    Greek,
    Greenlandic,
    Guarani,
    Gujarati,
    Hausa,
    Hebrew,
    Hindi,
    Hungarian,
    Icelandic,
    Indonesian,
    Interlingua,
    Interlingue,
    Inuktitut,
    Inupiak,
    Irish,
    Italian,
    Japanese,
    Javanese,
    Kannada,
    Kashmiri,
    Kazakh,
    Kinyarwanda,
    Kirghiz,
    Korean,
    Kurdish,
    Rundi,
    Lao,
    Latin,
    Latvian,
    Lingala,
    Lithuanian,
    Macedonian,
    Malagasy,
    Malay,
    Malayalam,
    Maltese,
    Maori,
    Marathi,
    Marshallese,
    Mongolian,
    NauruLanguage,
    Nepali,
    NorwegianBokmal,
    Occitan,
    Oriya,
    Pashto,
    Persian,
    Polish,
    Portuguese,
    Punjabi,
    Quechua,
    Romansh,
    Romanian,
    Russian,
    Samoan,
    Sango,
    Sanskrit,
    Serbian,
    Ossetic,
    SouthernSotho,
    Tswana,
    Shona,
    Sindhi,
    Sinhala,
    Swati,
    Slovak,
    Slovenian,
    Somali,
    Spanish,
    Sundanese,
    Swahili,
    Swedish,
    Sardinian,
    Tajik,
    Tamil,
    Tatar,
    Telugu,
    Thai,
    Tibetan,
    Tigrinya,
    Tongan,
    Tsonga,
    Turkish,
    Turkmen,
    Tahitian,
    Uighur,
    Ukrainian,
    Urdu,
    Uzbek,
    Vietnamese,
    Volapuk,
    Welsh,
    Wolof,
    Xhosa,
    Yiddish,
    Yoruba,
    Zhuang,
    Zulu,
    NorwegianNynorsk,
    Bosnian,
    Divehi,
    Manx,
    Cornish,
    Akan,
    Konkani,
    Ga,
    Igbo,
    Kamba,
    Syriac,
    Blin,
    Geez,
    Koro,
    Sidamo,
    Atsam,
    Tigre,
    Jju,
    Friulian,
    Venda,
    Ewe,
    Walamo,
    Hawaiian,
    Tyap,
    Nyanja,
    Filipino,
    SwissGerman,
    SichuanYi,
    Kpelle,
    LowGerman,
    SouthNdebele,
    NorthernSotho,
    NorthernSami,
    Taroko,
    Gusii,
    Taita,
    Fulah,
    Kikuyu,
    Samburu,
    Sena,
    NorthNdebele,
    Rombo,
    Tachelhit,
    Kabyle,
    Nyankole,
    Bena,
    Vunjo,
    Bambara,
    Embu,
    Cherokee,
    Morisyen,
    Makonde,
    Langi,
    Ganda,
    Bemba,
    Kabuverdianu,
    Meru,
    Kalenjin,
    Nama,
    Machame,
    Colognian,
    Masai,
    Soga,
    Luyia,
    Asu,
    Teso,
    Saho,
    KoyraChiini,
    Rwa,
    Luo,
    Chiga,
    CentralMoroccoTamazight,
    KoyraboroSenni,
    Shambala,
    Bodo,
    Avaric,
    Chamorro,
    Chechen,
    Church,
    Chuvash,
    Cree,
    Haitian,
    Herero,
    HiriMotu,
    Kanuri,
    Komi,
    Kongo,
    Kwanyama,
    Limburgish,
    LubaKatanga,
    Luxembourgish,
    Navaho,
    Ndonga,
    Ojibwa,
    Pali,
    Walloon,
    Aghem,
    Basaa,
    Zarma,
    Duala,
    JolaFonyi,
    Ewondo,
    Bafia,
    MakhuwaMeetto,
    Mundang,
    Kwasio,
    Nuer,
    Sakha,
    Sangu,
    CongoSwahili,
    Tasawaq,
    Vai,
    Walser,
    Yangben,
    Avestan,
    Asturian,
    Ngomba,
    Kako,
    Meta,
    Ngiemboon,
    Aragonese,
    Akkadian,
    AncientEgyptian,
    AncientGreek,
    Aramaic,
    Balinese,
    Bamun,
    BatakToba,
    Buginese,
    Buhid,
    Carian,
    Chakma,
    ClassicalMandaic,
    Coptic,
    Dogri,
    EasternCham,
    EasternKayah,
    Etruscan,
    Gothic,
    Hanunoo,
    Ingush,
    LargeFloweryMiao,
    Lepcha,
    Limbu,
    Lisu,
    Lu,
    Lycian,
    Lydian,
    Mandingo,
    Manipuri,
    Meroitic,
    NorthernThai,
    OldIrish,
    OldNorse,
    OldPersian,
    OldTurkish,
    Pahlavi,
    Parthian,
    Phoenician,
    PrakritLanguage,
    Rejang,
    Sabaean,
    Samaritan,
    Santali,
    Saurashtra,
    Sora,
    Sylheti,
    Tagbanwa,
    TaiDam,
    TaiNua,
    Ugaritic,
    Akoose,
    Lakota,
    StandardMoroccanTamazight,
    Mapuche,
    CentralKurdish,
    LowerSorbian,
    UpperSorbian,
    Kenyang,
    Mohawk,
    Nko,
    Prussian,
    Kiche,
    SouthernSami,
    LuleSami,
    InariSami,
    SkoltSami,
    Warlpiri,
    ManichaeanMiddlePersian,
    Mende,
    AncientNorthArabian,
    LinearA,
    HmongNjua,
    Ho,
    Lezghian,
    Bassa,
    Mono,
    TedimChin,
    Maithili,
    Ahom,
    AmericanSignLanguage,
    ArdhamagadhiPrakrit,
    Bhojpuri,
    HieroglyphicLuwian,
    LiteraryChinese,
    Mazanderani,
    Mru,
    Newari,
    NorthernLuri,
    Palauan,
    Papiamento,
    Saraiki,
    TokelauLanguage,
    TokPisin,
    TuvaluLanguage,
    UncodedLanguages,
    Cantonese,
    Osage,
    Tangut,
    Norwegian,
    Moldavian,
    SerboCroatian,
    Tagalog,
    Twi,
    Afan,
    Byelorussian,
    Bhutani,
    Cambodian,
    Kurundi,
    RhaetoRomance,
    Chewa,
    Frisian,
    Uigur,
    LastLanguage,
}

#[org_name(QLocale)]
enum Script {
    AnyScript,
    ArabicScript,
    CyrillicScript,
    DeseretScript,
    GurmukhiScript,
    SimplifiedHanScript,
    TraditionalHanScript,
    LatinScript,
    MongolianScript,
    TifinaghScript,
    ArmenianScript,
    BengaliScript,
    CherokeeScript,
    DevanagariScript,
    EthiopicScript,
    GeorgianScript,
    GreekScript,
    GujaratiScript,
    HebrewScript,
    JapaneseScript,
    KhmerScript,
    KannadaScript,
    KoreanScript,
    LaoScript,
    MalayalamScript,
    MyanmarScript,
    OriyaScript,
    TamilScript,
    TeluguScript,
    ThaanaScript,
    ThaiScript,
    TibetanScript,
    SinhalaScript,
    SyriacScript,
    YiScript,
    VaiScript,
    AvestanScript,
    BalineseScript,
    BamumScript,
    BatakScript,
    BopomofoScript,
    BrahmiScript,
    BugineseScript,
    BuhidScript,
    CanadianAboriginalScript,
    CarianScript,
    ChakmaScript,
    ChamScript,
    CopticScript,
    CypriotScript,
    EgyptianHieroglyphsScript,
    FraserScript,
    GlagoliticScript,
    GothicScript,
    HanScript,
    HangulScript,
    HanunooScript,
    ImperialAramaicScript,
    InscriptionalPahlaviScript,
    InscriptionalParthianScript,
    JavaneseScript,
    KaithiScript,
    KatakanaScript,
    KayahLiScript,
    KharoshthiScript,
    LannaScript,
    LepchaScript,
    LimbuScript,
    LinearBScript,
    LycianScript,
    LydianScript,
    MandaeanScript,
    MeiteiMayekScript,
    MeroiticScript,
    MeroiticCursiveScript,
    NkoScript,
    NewTaiLueScript,
    OghamScript,
    OlChikiScript,
    OldItalicScript,
    OldPersianScript,
    OldSouthArabianScript,
    OrkhonScript,
    OsmanyaScript,
    PhagsPaScript,
    PhoenicianScript,
    PollardPhoneticScript,
    RejangScript,
    RunicScript,
    SamaritanScript,
    SaurashtraScript,
    SharadaScript,
    ShavianScript,
    SoraSompengScript,
    CuneiformScript,
    SundaneseScript,
    SylotiNagriScript,
    TagalogScript,
    TagbanwaScript,
    TaiLeScript,
    TaiVietScript,
    TakriScript,
    UgariticScript,
    BrailleScript,
    HiraganaScript,
    CaucasianAlbanianScript,
    BassaVahScript,
    DuployanScript,
    ElbasanScript,
    GranthaScript,
    PahawhHmongScript,
    KhojkiScript,
    LinearAScript,
    MahajaniScript,
    ManichaeanScript,
    MendeKikakuiScript,
    ModiScript,
    MroScript,
    OldNorthArabianScript,
    NabataeanScript,
    PalmyreneScript,
    PauCinHauScript,
    OldPermicScript,
    PsalterPahlaviScript,
    SiddhamScript,
    KhudawadiScript,
    TirhutaScript,
    VarangKshitiScript,
    AhomScript,
    AnatolianHieroglyphsScript,
    HatranScript,
    MultaniScript,
    OldHungarianScript,
    SignWritingScript,
    AdlamScript,
    BhaiksukiScript,
    MarchenScript,
    NewaScript,
    OsageScript,
    TangutScript,
    HanWithBopomofoScript,
    JamoScript,
    SimplifiedChineseScript,
    TraditionalChineseScript,
    LastScript,
}

#[org_name(QLocale)]
enum Country {
    AnyCountry,
    Afghanistan,
    Albania,
    Algeria,
    AmericanSamoa,
    Andorra,
    Angola,
    Anguilla,
    Antarctica,
    AntiguaAndBarbuda,
    Argentina,
    Armenia,
    Aruba,
    Australia,
    Austria,
    Azerbaijan,
    Bahamas,
    Bahrain,
    Bangladesh,
    Barbados,
    Belarus,
    Belgium,
    Belize,
    Benin,
    Bermuda,
    Bhutan,
    Bolivia,
    BosniaAndHerzegowina,
    Botswana,
    BouvetIsland,
    Brazil,
    BritishIndianOceanTerritory,
    Brunei,
    Bulgaria,
    BurkinaFaso,
    Burundi,
    Cambodia,
    Cameroon,
    Canada,
    CapeVerde,
    CaymanIslands,
    CentralAfricanRepublic,
    Chad,
    Chile,
    China,
    ChristmasIsland,
    CocosIslands,
    Colombia,
    Comoros,
    CongoKinshasa,
    CongoBrazzaville,
    CookIslands,
    CostaRica,
    IvoryCoast,
    Croatia,
    Cuba,
    Cyprus,
    CzechRepublic,
    Denmark,
    Djibouti,
    Dominica,
    DominicanRepublic,
    EastTimor,
    Ecuador,
    Egypt,
    ElSalvador,
    EquatorialGuinea,
    Eritrea,
    Estonia,
    Ethiopia,
    FalklandIslands,
    FaroeIslands,
    Fiji,
    Finland,
    France,
    Guernsey,
    FrenchGuiana,
    FrenchPolynesia,
    FrenchSouthernTerritories,
    Gabon,
    Gambia,
    Georgia,
    Germany,
    Ghana,
    Gibraltar,
    Greece,
    Greenland,
    Grenada,
    Guadeloupe,
    Guam,
    Guatemala,
    Guinea,
    GuineaBissau,
    Guyana,
    Haiti,
    HeardAndMcDonaldIslands,
    Honduras,
    HongKong,
    Hungary,
    Iceland,
    India,
    Indonesia,
    Iran,
    Iraq,
    Ireland,
    Israel,
    Italy,
    Jamaica,
    Japan,
    Jordan,
    Kazakhstan,
    Kenya,
    Kiribati,
    NorthKorea,
    SouthKorea,
    Kuwait,
    Kyrgyzstan,
    Laos,
    Latvia,
    Lebanon,
    Lesotho,
    Liberia,
    Libya,
    Liechtenstein,
    Lithuania,
    Luxembourg,
    Macau,
    Macedonia,
    Madagascar,
    Malawi,
    Malaysia,
    Maldives,
    Mali,
    Malta,
    MarshallIslands,
    Martinique,
    Mauritania,
    Mauritius,
    Mayotte,
    Mexico,
    Micronesia,
    Moldova,
    Monaco,
    Mongolia,
    Montserrat,
    Morocco,
    Mozambique,
    Myanmar,
    Namibia,
    NauruCountry,
    Nepal,
    Netherlands,
    CuraSao,
    NewCaledonia,
    NewZealand,
    Nicaragua,
    Niger,
    Nigeria,
    Niue,
    NorfolkIsland,
    NorthernMarianaIslands,
    Norway,
    Oman,
    Pakistan,
    Palau,
    PalestinianTerritories,
    Panama,
    PapuaNewGuinea,
    Paraguay,
    Peru,
    Philippines,
    Pitcairn,
    Poland,
    Portugal,
    PuertoRico,
    Qatar,
    Reunion,
    Romania,
    Russia,
    Rwanda,
    SaintKittsAndNevis,
    SaintLucia,
    SaintVincentAndTheGrenadines,
    Samoa,
    SanMarino,
    SaoTomeAndPrincipe,
    SaudiArabia,
    Senegal,
    Seychelles,
    SierraLeone,
    Singapore,
    Slovakia,
    Slovenia,
    SolomonIslands,
    Somalia,
    SouthAfrica,
    SouthGeorgiaAndTheSouthSandwichIslands,
    Spain,
    SriLanka,
    SaintHelena,
    SaintPierreAndMiquelon,
    Sudan,
    Suriname,
    SvalbardAndJanMayenIslands,
    Swaziland,
    Sweden,
    Switzerland,
    Syria,
    Taiwan,
    Tajikistan,
    Tanzania,
    Thailand,
    Togo,
    TokelauCountry,
    Tonga,
    TrinidadAndTobago,
    Tunisia,
    Turkey,
    Turkmenistan,
    TurksAndCaicosIslands,
    TuvaluCountry,
    Uganda,
    Ukraine,
    UnitedArabEmirates,
    UnitedKingdom,
    UnitedStates,
    UnitedStatesMinorOutlyingIslands,
    Uruguay,
    Uzbekistan,
    Vanuatu,
    VaticanCityState,
    Venezuela,
    Vietnam,
    BritishVirginIslands,
    UnitedStatesVirginIslands,
    WallisAndFutunaIslands,
    WesternSahara,
    Yemen,
    CanaryIslands,
    Zambia,
    Zimbabwe,
    ClippertonIsland,
    Montenegro,
    Serbia,
    SaintBarthelemy,
    SaintMartin,
    LatinAmericaAndTheCaribbean,
    AscensionIsland,
    AlandIslands,
    DiegoGarcia,
    CeutaAndMelilla,
    IsleOfMan,
    Jersey,
    TristanDaCunha,
    SouthSudan,
    Bonaire,
    SintMaarten,
    Kosovo,
    EuropeanUnion,
    OutlyingOceania,
    Tokelau,
    Tuvalu,
    DemocraticRepublicOfCongo,
    PeoplesRepublicOfCongo,
    DemocraticRepublicOfKorea,
    RepublicOfKorea,
    RussianFederation,
    SyrianArabRepublic,
    LastCountry,
}

#[org_name(QLocale)]
enum MeasurementSystem {
    MetricSystem,
    ImperialUSSystem,
    ImperialUKSystem,
    ImperialSystem,
}

#[org_name(QLocale)]
enum FormatType {
    LongFormat,
    ShortFormat,
    NarrowFormat,
}

#[org_name(QLocale)]
enum NumberOption {
    DefaultNumberOptions,
    OmitGroupSeparator,
    RejectGroupSeparator,
    OmitLeadingZeroInExponent,
    RejectLeadingZeroInExponent,
    IncludeTrailingZeroesAfterDot,
    RejectTrailingZeroesAfterDot,
}

#[org_name(QLocale)]
enum FloatingPointPrecisionOption {
    FloatingPointShortest,
}

#[org_name(QLocale)]
enum CurrencySymbolFormat {
    CurrencyIsoCode,
    CurrencySymbol,
    CurrencyDisplayName,
}

#[org_name(QLocale)]
enum DataSizeFormat {
    DataSizeBase1000,
    DataSizeSIQuantifiers,
    DataSizeIecFormat,
    DataSizeTraditionalFormat,
    DataSizeSIFormat,
}

#[org_name(QLocale)]
enum QuotationStyle {
    StandardQuotation,
    AlternateQuotation,
}


struct Locale {
    qt_check_for_qgadget_macro(),
    swap(other: &LocaleType),
    language() -> Locale::Language,
    script() -> Locale::Script,
    name() -> String,
    bcp47_name() -> String,
    native_language_name() -> String,
    to_short(s: String, ok: &bool) -> short,
    to_u_short(s: String, ok: &bool) -> ushort,
    to_int(s: String, ok: &bool) -> i32,
    to_u_int(s: String, ok: &bool) -> uint,
    to_long_long(s: String, ok: &bool) -> i64,
    to_u_long_long(s: String, ok: &bool) -> qulonglong,
    to_float(s: String, ok: &bool) -> f32,
    to_double(s: String, ok: &bool) -> double,
    to_short(s: &StringRefType, ok: &bool) -> short,
    to_u_short(s: &StringRefType, ok: &bool) -> ushort,
    to_int(s: &StringRefType, ok: &bool) -> i32,
    to_u_int(s: &StringRefType, ok: &bool) -> uint,
    to_long_long(s: &StringRefType, ok: &bool) -> i64,
    to_u_long_long(s: &StringRefType, ok: &bool) -> qulonglong,
    to_float(s: &StringRefType, ok: &bool) -> f32,
    to_double(s: &StringRefType, ok: &bool) -> double,
    to_short(s: StringViewType, ok: &bool) -> short,
    to_u_short(s: StringViewType, ok: &bool) -> ushort,
    to_int(s: StringViewType, ok: &bool) -> i32,
    to_u_int(s: StringViewType, ok: &bool) -> uint,
    to_long_long(s: StringViewType, ok: &bool) -> i64,
    to_u_long_long(s: StringViewType, ok: &bool) -> qulonglong,
    to_float(s: StringViewType, ok: &bool) -> f32,
    to_double(s: StringViewType, ok: &bool) -> double,
    date_format(format: Locale::FormatType) -> String,
    time_format(format: Locale::FormatType) -> String,
    date_time_format(format: Locale::FormatType) -> String,
    to_date(string: String, arg0: Locale::FormatType) -> Date,
    to_time(string: String, arg0: Locale::FormatType) -> Time,
    to_date_time(string: String, format: Locale::FormatType) -> DateTime,
    to_date(string: String, format: String) -> Date,
    to_time(string: String, format: String) -> Time,
    to_date_time(string: String, format: String) -> DateTime,
    decimal_point() -> Char,
    group_separator() -> Char,
    percent() -> Char,
    zero_digit() -> Char,
    negative_sign() -> Char,
    positive_sign() -> Char,
    exponential() -> Char,
    month_name(arg0: i32, format: Locale::FormatType) -> String,
    standalone_month_name(arg0: i32, format: Locale::FormatType) -> String,
    day_name(arg0: i32, format: Locale::FormatType) -> String,
    standalone_day_name(arg0: i32, format: Locale::FormatType) -> String,
    first_day_of_week() -> Rute::DayOfWeek,
    weekdays() -> List<Qt::DayOfWeek>,
    am_text() -> String,
    pm_text() -> String,
    measurement_system() -> Locale::MeasurementSystem,
    text_direction() -> Rute::LayoutDirection,
    to_upper(str: String) -> String,
    to_lower(str: String) -> String,
    currency_symbol(arg0: Locale::CurrencySymbolFormat) -> String,
    formatted_data_size(bytes: i64, precision: i32, format: DataSizeFormats) -> String,
    ui_languages() -> [String],
    [static] set_default(locale: &LocaleType),
    [static] c() -> Locale,
    [static] system() -> Locale,
    [static] matching_locales(language: Locale::Language, script: Locale::Script, country: Locale::Country) -> [Locale],
    set_number_options(options: NumberOptions),
    number_options() -> NumberOptions,
    create_separated_list(strl: &[String]) -> String,
}

// vim: syntax=rust expandtab ts=4 sw=4
