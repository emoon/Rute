
struct Object {
    event(&EventType event) -> bool,
    event_filter(&ObjectType watched, &EventType event) -> bool,
    object_name() -> String,
    set_object_name(String name),
    is_widget_type() -> bool,
    is_window_type() -> bool,
    signals_blocked() -> bool,
    block_signals(bool b) -> bool,
    thread() -> &ThreadType,
    move_to_thread(&ThreadType thread),
    start_timer(i32 interval, Rute::TimerType timer_type) -> i32,
    kill_timer(i32 id),
    children() -> &ObjectListType,
    set_parent(&ObjectType parent),
    install_event_filter(&ObjectType filter_obj),
    remove_event_filter(&ObjectType obj),
    connect(&ObjectType sender, &char signal, &ObjectType receiver, &char member, Rute::ConnectionType arg0) -> MetaObject::Connection,
    connect(&ObjectType sender, &MetaMethodType signal, &ObjectType receiver, &MetaMethodType method, Rute::ConnectionType type) -> MetaObject::Connection,
    connect(&ObjectType sender, &char signal, &char member, Rute::ConnectionType type) -> MetaObject::Connection,
    disconnect(&ObjectType sender, &MetaMethodType signal, &ObjectType receiver, &MetaMethodType member) -> bool,
    disconnect(&char signal, &ObjectType receiver, &char member) -> bool,
    disconnect(&ObjectType receiver, &char member) -> bool,
    disconnect(onst QMetaObject::Connection & arg0) -> bool,
    dump_object_tree(),
    dump_object_info(),
    dump_object_tree(),
    dump_object_info(),
    set_property(&char name, &VariantType value) -> bool,
    property(&char name) -> VariantType,
    dynamic_property_names() -> <ByteArrayType>,
    register_user_data() -> uint,
    set_user_data(uint id, &ObjectUserDataType data),
    user_data(uint id) -> &ObjectUserDataType,
    object_name_changed(String object_name, Object::QPrivateSignal arg0),
    parent() -> &ObjectType,
    inherits(&char classname) -> bool,
    delete_later(),
    sender() -> &ObjectType,
    sender_signal_index() -> i32,
    receivers(&char signal) -> i32,
    is_signal_connected(&MetaMethodType signal) -> bool,
    timer_event(&TimerEventType event),
    child_event(&ChildEventType event),
    custom_event(&EventType event),
    connect_notify(&MetaMethodType signal),
    disconnect_notify(&MetaMethodType signal),
    connect_impl(&ObjectType sender, &void signal, &ObjectType receiver, &void slot_ptr, tPrivate::QSlotObjectBase * slot, Rute::ConnectionType type, &i32 types, &MetaObjectType sender_meta_object) -> MetaObject::Connection,
    disconnect_impl(&ObjectType sender, &void signal, &ObjectType receiver, &void slot, &MetaObjectType sender_meta_object) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
