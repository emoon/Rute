/// 
/// To set the item's polygon, pass a QPolygonF to
/// QGraphicsPolygonItem's constructor, or call the setPolygon()
/// function. The polygon() function returns the current polygon.
/// 
/// ![graphicsview-polygonitem.png](graphicsview-polygonitem.png)
/// 
/// QGraphicsPolygonItem uses the polygon and the pen width to provide
/// a reasonable implementation of boundingRect(), shape(), and
/// contains(). The paint() function draws the polygon using the
/// item's associated pen and brush, which you can set by calling the
/// setPen() and setBrush() functions.
/// 
/// **See also:** [`GraphicsPathItem`]
/// [`GraphicsRectItem`]
/// [`GraphicsEllipseItem`]
/// [`GraphicsTextItem`]
/// [`GraphicsLineItem`]
/// [`GraphicsPixmapItem`]
/// {Graphics
/// View Framework}
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct GraphicsPolygonItem : AbstractGraphicsShapeItem {
    /// 
    /// Returns the item's polygon, or an empty polygon if no polygon
    /// has been set.
    /// 
    /// **See also:** [`set_polygon()`]
    polygon() -> PolygonF,
    /// 
    /// Sets the item's polygon to be the given *polygon.*
    /// 
    /// **See also:** [`polygon()`]
    set_polygon(polygon: &PolygonFType),
    /// 
    /// Returns the fill rule of the polygon. The default fill rule is
    /// Qt::OddEvenFill.
    /// 
    /// **See also:** [`set_fill_rule()`]
    /// [`PainterPath::fill_rule`]
    /// [`Painter::draw_polygon`]
    fill_rule() -> Rute::FillRule,
    /// 
    /// Sets the fill rule of the polygon to *rule.* The default fill rule is
    /// Qt::OddEvenFill.
    /// 
    /// **See also:** [`fill_rule()`]
    /// [`PainterPath::fill_rule`]
    /// [`Painter::draw_polygon`]
    set_fill_rule(rule: Rute::FillRule),
    /// 
    [event] bounding_rect() -> RectF,
    /// 
    [event] shape() -> PainterPath,
    /// 
    [event] contains(point: &PointFType) -> bool,
    /// 
    [event] paint(painter: *PainterType, option: *StyleOptionGraphicsItemType, widget: *WidgetType),
    /// 
    [event] is_obscured_by(item: *GraphicsItemType) -> bool,
    /// 
    [event] opaque_area() -> PainterPath,
    /// 
    [event] type() -> i32,
    [event] supports_extension(extension: GraphicsItem::Extension) -> bool,
    [event] set_extension(extension: GraphicsItem::Extension, variant: &VariantType),
    [event] extension(variant: &VariantType) -> Variant,
}

[org_name(QGraphicsPolygonItem)]
enum GraphicsPolygonItemFixMeEnums {
    Type,
}

// vim: syntax=rust expandtab ts=4 sw=4
