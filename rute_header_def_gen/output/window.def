struct Window : Object, Surface {
    set_surface_type(Surface::SurfaceType surface_type),
    surface_type() -> Surface::SurfaceType,
    is_visible() -> bool,
    visibility() -> Window::Visibility,
    set_visibility(Window::Visibility v),
    create(),
    win_id() -> WId,
    parent(Window::AncestorMode mode) -> &WindowType,
    parent() -> &WindowType,
    set_parent(&WindowType parent),
    is_top_level() -> bool,
    is_modal() -> bool,
    modality() -> Rute::WindowModality,
    set_modality(Rute::WindowModality modality),
    set_format(&SurfaceFormatType format),
    format() -> SurfaceFormatType,
    requested_format() -> SurfaceFormatType,
    set_flags(Rute::WindowFlags flags),
    flags() -> Rute::WindowFlags,
    set_flag(Rute::WindowType arg0, bool on),
    type() -> Rute::WindowType,
    title() -> String,
    set_opacity(f32 level),
    opacity() -> f32,
    set_mask(&RegionType region),
    mask() -> RegionType,
    is_active() -> bool,
    report_content_orientation_change(Rute::ScreenOrientation orientation),
    content_orientation() -> Rute::ScreenOrientation,
    device_pixel_ratio() -> f32,
    window_state() -> Rute::WindowState,
    window_states() -> Rute::WindowStates,
    set_window_state(Rute::WindowState state),
    set_window_states(Rute::WindowStates states),
    set_transient_parent(&WindowType parent),
    is_ancestor_of(&WindowType child, Window::AncestorMode mode) -> bool,
    is_exposed() -> bool,
    minimum_width() -> i32,
    minimum_height() -> i32,
    maximum_width() -> i32,
    maximum_height() -> i32,
    minimum_size() -> SizeType,
    maximum_size() -> SizeType,
    base_size() -> SizeType,
    size_increment() -> SizeType,
    set_minimum_size(&SizeType size),
    set_maximum_size(&SizeType size),
    set_base_size(&SizeType size),
    set_size_increment(&SizeType size),
    frame_margins() -> MarginsType,
    frame_position() -> PointType,
    set_frame_position(&PointType point),
    width() -> i32,
    height() -> i32,
    x() -> i32,
    y() -> i32,
    size() -> SizeType,
    position() -> PointType,
    set_position(&PointType pt),
    set_position(i32 posx, i32 posy),
    resize(&SizeType new_size),
    resize(i32 w, i32 h),
    set_file_path(String file_path),
    file_path() -> String,
    set_icon(&IconType icon),
    icon() -> IconType,
    handle() -> &PlatformWindowType,
    set_keyboard_grab_enabled(bool grab) -> bool,
    set_mouse_grab_enabled(bool grab) -> bool,
    screen() -> &ScreenType,
    set_screen(&ScreenType screen),
    accessible_root() -> &AccessibleInterfaceType,
    focus_object() -> &ObjectType,
    map_to_global(&PointType pos) -> PointType,
    map_from_global(&PointType pos) -> PointType,
    cursor() -> CursorType,
    set_cursor(&CursorType arg0),
    unset_cursor(),
    from_win_id(WId id) -> &WindowType,
    request_activate(),
    set_visible(bool visible),
    show(),
    hide(),
    show_minimized(),
    show_maximized(),
    show_full_screen(),
    show_normal(),
    close() -> bool,
    raise(),
    lower(),
    set_title(String arg0),
    set_x(i32 arg),
    set_y(i32 arg),
    set_width(i32 arg),
    set_height(i32 arg),
    set_minimum_width(i32 w),
    set_minimum_height(i32 h),
    set_maximum_width(i32 w),
    set_maximum_height(i32 h),
    alert(i32 msec),
    request_update(),
    screen_changed(&ScreenType screen),
    modality_changed(Rute::WindowModality modality),
    window_state_changed(Rute::WindowState window_state),
    window_title_changed(String title),
    x_changed(i32 arg),
    y_changed(i32 arg),
    width_changed(i32 arg),
    height_changed(i32 arg),
    minimum_width_changed(i32 arg),
    minimum_height_changed(i32 arg),
    maximum_width_changed(i32 arg),
    maximum_height_changed(i32 arg),
    visible_changed(bool arg),
    visibility_changed(Window::Visibility visibility),
    active_changed(),
    content_orientation_changed(Rute::ScreenOrientation orientation),
    focus_object_changed(&ObjectType object),
    opacity_changed(f32 opacity),
    expose_event(&ExposeEventType arg0),
    resize_event(&ResizeEventType arg0),
    move_event(&MoveEventType arg0),
    focus_in_event(&FocusEventType arg0),
    focus_out_event(&FocusEventType arg0),
    show_event(&ShowEventType arg0),
    hide_event(&HideEventType arg0),
    event(&EventType arg0) -> bool,
    key_press_event(&KeyEventType arg0),
    key_release_event(&KeyEventType arg0),
    mouse_press_event(&MouseEventType arg0),
    mouse_release_event(&MouseEventType arg0),
    mouse_double_click_event(&MouseEventType arg0),
    mouse_move_event(&MouseEventType arg0),
    wheel_event(&WheelEventType arg0),
    touch_event(&TouchEventType arg0),
    tablet_event(&TabletEventType arg0),
    native_event(&ByteArrayType event_type, &void message, &long result) -> bool,
    surface_handle() -> &PlatformSurfaceType,
}

