[org_name(QRegion)]
enum RegionType {
    Rectangle,
    Ellipse,
}


struct Region {
    swap(other: &RegionType),
    is_empty() -> bool,
    is_null() -> bool,
    begin() -> const_iterator,
    cbegin() -> const_iterator,
    end() -> const_iterator,
    cend() -> const_iterator,
    rbegin() -> i32,
    crbegin() -> i32,
    rend() -> i32,
    crend() -> i32,
    contains(p: &PointType) -> bool,
    contains(r: &RectType) -> bool,
    united(r: &RegionType) -> Region,
    united(r: &RectType) -> Region,
    intersected(r: &RegionType) -> Region,
    intersected(r: &RectType) -> Region,
    xored(r: &RegionType) -> Region,
    intersects(r: &RegionType) -> bool,
    intersects(r: &RectType) -> bool,
    bounding_rect() -> Rect,
    rects() -> [Rect],
    set_rects(rect: *RectType, num: i32),
    rect_count() -> i32,
}

// vim: syntax=rust expandtab ts=4 sw=4
