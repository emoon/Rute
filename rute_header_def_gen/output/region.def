
struct Region {
    swap(&RegionType other),
    is_empty() -> bool,
    is_null() -> bool,
    begin() -> const_iterator,
    cbegin() -> const_iterator,
    end() -> const_iterator,
    cend() -> const_iterator,
    rbegin() -> const_reverse_iterator,
    crbegin() -> const_reverse_iterator,
    rend() -> const_reverse_iterator,
    crend() -> const_reverse_iterator,
    contains(&PointType p) -> bool,
    contains(&RectType r) -> bool,
    united(&RegionType r) -> RegionType,
    united(&RectType r) -> RegionType,
    intersected(&RegionType r) -> RegionType,
    intersected(&RectType r) -> RegionType,
    xored(&RegionType r) -> RegionType,
    intersects(&RegionType r) -> bool,
    intersects(&RectType r) -> bool,
    bounding_rect() -> RectType,
    rects() -> Vector<QRect>Type,
    set_rects(&RectType rect, i32 num),
    rect_count() -> i32,
    copy() -> RegionType,
    detach(),
    exec(&ByteArrayType ba, i32 ver, DataStream::ByteOrder byte_order),
    clean_up(Region::QRegionData * x),
}

// vim: syntax=rust expandtab ts=4 sw=4
