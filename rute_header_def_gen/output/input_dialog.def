enum InputDialogOption {
    NoButtons,
    UseListViewForComboBoxItems,
    UsePlainTextEditForTextInput,
}

enum InputMode {
    TextInput,
    IntInput,
    DoubleInput,
}

struct InputDialog : Dialog {
    set_input_mode(mode: InputDialog::InputMode),
    input_mode() -> InputDialog::InputMode,
    set_label_text(text: String),
    label_text() -> String,
    set_option(option: InputDialog::InputDialogOption, on: bool),
    test_option(option: InputDialog::InputDialogOption) -> bool,
    set_options(options: InputDialogOptions),
    options() -> InputDialogOptions,
    set_text_value(text: String),
    text_value() -> String,
    set_text_echo_mode(mode: LineEdit::EchoMode),
    text_echo_mode() -> LineEdit::EchoMode,
    set_combo_box_editable(editable: bool),
    is_combo_box_editable() -> bool,
    set_combo_box_items(items: &StringListType),
    combo_box_items() -> StringList,
    set_int_value(value: i32),
    int_value() -> i32,
    set_int_minimum(min: i32),
    int_minimum() -> i32,
    set_int_maximum(max: i32),
    int_maximum() -> i32,
    set_int_range(min: i32, max: i32),
    set_int_step(step: i32),
    int_step() -> i32,
    set_double_value(value: double),
    double_value() -> double,
    set_double_minimum(min: double),
    double_minimum() -> double,
    set_double_maximum(max: double),
    double_maximum() -> double,
    set_double_range(min: double, max: double),
    set_double_decimals(decimals: i32),
    double_decimals() -> i32,
    set_ok_button_text(text: String),
    ok_button_text() -> String,
    set_cancel_button_text(text: String),
    cancel_button_text() -> String,
    open(receiver: &ObjectType, member: &char),
    [replace] minimum_size_hint() -> Size,
    [replace] size_hint() -> Size,
    [replace] set_visible(visible: bool),
    [static] get_text(parent: &WidgetType, title: String, label: String, echo: LineEdit::EchoMode, text: String, ok: &bool, flags: Rute::WindowFlags, input_method_hints: Rute::InputMethodHints) -> String,
    [static] get_multi_line_text(parent: &WidgetType, title: String, label: String, text: String, ok: &bool, flags: Rute::WindowFlags, input_method_hints: Rute::InputMethodHints) -> String,
    [static] get_item(parent: &WidgetType, title: String, label: String, items: &StringListType, current: i32, editable: bool, ok: &bool, flags: Rute::WindowFlags, input_method_hints: Rute::InputMethodHints) -> String,
    [static] get_int(parent: &WidgetType, title: String, label: String, value: i32, min_value: i32, max_value: i32, step: i32, ok: &bool, flags: Rute::WindowFlags) -> i32,
    [static] get_double(parent: &WidgetType, title: String, label: String, value: double, min_value: double, max_value: double, decimals: i32, ok: &bool, flags: Rute::WindowFlags) -> double,
    [static] get_double(parent: &WidgetType, title: String, label: String, value: double, min_value: double, max_value: double, decimals: i32, ok: &bool, flags: Rute::WindowFlags, step: double) -> double,
    set_double_step(step: double),
    double_step() -> double,
    [event] text_value_changed(text: String),
    [event] text_value_selected(text: String),
    [event] int_value_changed(value: i32),
    [event] int_value_selected(value: i32),
    [event] double_value_changed(value: double),
    [event] double_value_selected(value: double),
    [replace] done(result: i32),
}

// vim: syntax=rust expandtab ts=4 sw=4
