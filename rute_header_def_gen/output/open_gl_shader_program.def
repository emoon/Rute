/// 
/// # Introduction
/// 
/// This class supports shader programs written in the OpenGL Shading
/// Language (GLSL) and in the OpenGL/ES Shading Language (GLSL/ES).
/// 
/// QOpenGLShader and QOpenGLShaderProgram shelter the programmer from the details of
/// compiling and linking vertex and fragment shaders.
/// 
/// The following example creates a vertex shader program using the
/// supplied source `code` . Once compiled and linked, the shader
/// program is activated in the current QOpenGLContext by calling
/// QOpenGLShaderProgram::bind():
/// 
/// # Writing Portable Shaders
/// 
/// Shader programs can be difficult to reuse across OpenGL implementations
/// because of varying levels of support for standard vertex attributes and
/// uniform variables. In particular, GLSL/ES lacks all of the
/// standard variables that are present on desktop OpenGL systems:
/// `gl_Vertex` , `gl_Normal` , `gl_Color` , and so on. Desktop OpenGL
/// lacks the variable qualifiers `highp` , `mediump` , and `lowp` .
/// 
/// The QOpenGLShaderProgram class makes the process of writing portable shaders
/// easier by prefixing all shader programs with the following lines on
/// desktop OpenGL:
/// 
/// ```
/// #define highp
/// #define mediump
/// #define lowp
/// ```
/// 
/// This makes it possible to run most GLSL/ES shader programs
/// on desktop systems. The programmer should restrict themselves
/// to just features that are present in GLSL/ES, and avoid
/// standard variable names that only work on the desktop.
/// 
/// # Simple Shader Example
/// 
/// With the above shader program active, we can draw a green triangle
/// as follows:
/// 
/// # Binary Shaders and Programs
/// 
/// Binary shaders may be specified using `glShaderBinary()` on
/// the return value from QOpenGLShader::shaderId(). The QOpenGLShader instance
/// containing the binary can then be added to the shader program with
/// addShader() and linked in the usual fashion with link().
/// 
/// Binary programs may be specified using `glProgramBinaryOES()`
/// on the return value from programId(). Then the application should
/// call link(), which will notice that the program has already been
/// specified and linked, allowing other operations to be performed
/// on the shader program. The shader program's id can be explicitly
/// created using the create() function.
/// 
/// ## Caching Program Binaries
/// 
/// As of Qt 5.9, support for caching program binaries on disk is built in. To
/// enable this, switch to using addCacheableShaderFromSourceCode() and
/// addCacheableShaderFromSourceFile(). With an OpenGL ES 3.x context or support
/// for `GL_ARB_get_program_binary` , this will transparently cache program
/// binaries under QStandardPaths::GenericCacheLocation or
/// QStandardPaths::CacheLocation. When support is not available, calling the
/// cacheable function variants is equivalent to the normal ones.
/// 
/// **Note**: Some drivers do not have any binary formats available, even though
/// they advertise the extension or offer OpenGL ES 3.0. In this case program
/// binary support will be disabled.
/// 
/// **See also:** [`OpenGLShader`]
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct OpenGLShaderProgram : Object {
    /// 
    /// Adds a compiled *shader* to this shader program. Returns `true`
    /// if the shader could be added, or false otherwise.
    /// 
    /// Ownership of the *shader* object remains with the caller.
    /// It will not be deleted when this QOpenGLShaderProgram instance
    /// is deleted. This allows the caller to add the same shader
    /// to multiple shader programs.
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`remove_all_shaders()`]
    /// 
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// Compiles the contents of *fileName* as a shader of the specified
    /// *type* and adds it to this shader program. Returns `true` if
    /// compilation was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_code()`]
    add_shader(shader: *OpenGLShaderType) -> bool,
    /// 
    /// Removes *shader* from this shader program. The object is not deleted.
    /// 
    /// The shader program must be valid in the current QOpenGLContext.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`link()`]
    /// [`remove_all_shaders()`]
    remove_shader(shader: *OpenGLShaderType),
    /// 
    /// Returns a list of all shaders that have been added to this shader
    /// program using addShader().
    /// 
    /// **See also:** [`add_shader()`]
    /// [`remove_shader()`]
    shaders() -> [OpenGLShader?],
    /// 
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    add_shader_from_source_code(type: OpenGLShader::ShaderType, source: *char) -> bool,
    /// 
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    [org_name(addShaderFromSourceCode)]
    add_shader_from_source_code_2(type: OpenGLShader::ShaderType, source: &ByteArrayType) -> bool,
    /// 
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    /// 
    /// **Overloads**
    /// Compiles *source* as a shader of the specified *type* and
    /// adds it to this shader program. Returns `true` if compilation
    /// was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_file()`]
    /// **See also:** [`remove_shader()`]
    /// [`link()`]
    /// [`log()`]
    /// [`remove_all_shaders()`]
    [org_name(addShaderFromSourceCode)]
    add_shader_from_source_code_3(type: OpenGLShader::ShaderType, source: String) -> bool,
    /// 
    /// Compiles the contents of *fileName* as a shader of the specified
    /// *type* and adds it to this shader program. Returns `true` if
    /// compilation was successful, false otherwise. The compilation errors
    /// and warnings will be made available via log().
    /// 
    /// This function is intended to be a short-cut for quickly
    /// adding vertex and fragment shaders to a shader program without
    /// creating an instance of QOpenGLShader first.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`add_shader_from_source_code()`]
    add_shader_from_source_file(type: OpenGLShader::ShaderType, file_name: String) -> bool,
    /// 
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// **Returns** true if the shader has been registered or, in the non-cached case,
    /// compiled successfully; false if there was an error. The compilation error
    /// messages can be retrieved via log().
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    /// 
    /// **Overloads**
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// **Returns** true if the shader has been registered or, in the non-cached case,
    /// compiled successfully; false if there was an error. The compilation error
    /// messages can be retrieved via log().
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    /// 
    /// **Overloads**
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    add_cacheable_shader_from_source_code(type: OpenGLShader::ShaderType, source: *char) -> bool,
    /// 
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// **Returns** true if the shader has been registered or, in the non-cached case,
    /// compiled successfully; false if there was an error. The compilation error
    /// messages can be retrieved via log().
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    /// 
    /// **Overloads**
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// **Returns** true if the shader has been registered or, in the non-cached case,
    /// compiled successfully; false if there was an error. The compilation error
    /// messages can be retrieved via log().
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    /// 
    /// **Overloads**
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    [org_name(addCacheableShaderFromSourceCode)]
    add_cacheable_shader_from_source_code_2(type: OpenGLShader::ShaderType, source: &ByteArrayType) -> bool,
    /// 
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// **Returns** true if the shader has been registered or, in the non-cached case,
    /// compiled successfully; false if there was an error. The compilation error
    /// messages can be retrieved via log().
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    /// 
    /// **Overloads**
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// **Returns** true if the shader has been registered or, in the non-cached case,
    /// compiled successfully; false if there was an error. The compilation error
    /// messages can be retrieved via log().
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    /// 
    /// **Overloads**
    /// Registers the shader of the specified *type* and *source* to this
    /// program. Unlike addShaderFromSourceCode(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceCode().
    /// 
    /// **See also:** [`add_shader_from_source_code()`]
    /// [`add_cacheable_shader_from_source_file()`]
    [org_name(addCacheableShaderFromSourceCode)]
    add_cacheable_shader_from_source_code_3(type: OpenGLShader::ShaderType, source: String) -> bool,
    /// 
    /// Registers the shader of the specified *type* and *fileName* to this
    /// program. Unlike addShaderFromSourceFile(), this function does not perform
    /// compilation. Compilation is deferred to link(), and may not happen at all,
    /// because link() may potentially use a program binary from Qt's shader disk
    /// cache. This will typically lead to a significant increase in performance.
    /// 
    /// **Returns** true if the file has been read successfully, false if the file could
    /// not be opened or the normal, non-cached compilation of the shader has
    /// failed. The compilation error messages can be retrieved via log().
    /// 
    /// When the disk cache is disabled, via Qt::AA_DisableShaderDiskCache for
    /// example, or the OpenGL context has no support for context binaries, calling
    /// this function is equivalent to addShaderFromSourceFile().
    /// 
    /// **See also:** [`add_shader_from_source_file()`]
    /// [`add_cacheable_shader_from_source_code()`]
    add_cacheable_shader_from_source_file(type: OpenGLShader::ShaderType, file_name: String) -> bool,
    /// 
    /// Removes all of the shaders that were added to this program previously.
    /// The QOpenGLShader objects for the shaders will not be deleted if they
    /// were constructed externally. QOpenGLShader objects that are constructed
    /// internally by QOpenGLShaderProgram will be deleted.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`remove_shader()`]
    remove_all_shaders(),
    /// 
    /// Links together the shaders that were added to this program with
    /// addShader(). Returns `true` if the link was successful or
    /// false otherwise. If the link failed, the error messages can
    /// be retrieved with log().
    /// 
    /// Subclasses can override this function to initialize attributes
    /// and uniform variables for use in specific shader programs.
    /// 
    /// If the shader program was already linked, calling this
    /// function again will force it to be re-linked.
    /// 
    /// When shaders were added to this program via
    /// addCacheableShaderFromSourceCode() or addCacheableShaderFromSourceFile(),
    /// program binaries are supported, and a cached binary is available on disk,
    /// actual compilation and linking are skipped. Instead, link() will initialize
    /// the program with the binary blob via glProgramBinary(). If there is no
    /// cached version of the program or it was generated with a different driver
    /// version, the shaders will be compiled from source and the program will get
    /// linked normally. This allows seamless upgrading of the graphics drivers,
    /// without having to worry about potentially incompatible binary formats.
    /// 
    /// **See also:** [`add_shader()`]
    /// [`log()`]
    [event] link() -> bool,
    /// 
    /// Returns `true` if this shader program has been linked; false otherwise.
    /// 
    /// **See also:** [`link()`]
    is_linked() -> bool,
    /// 
    /// Returns the errors and warnings that occurred during the last link()
    /// or addShader() with explicitly specified source code.
    /// 
    /// **See also:** [`link()`]
    log() -> String,
    /// 
    /// Binds this shader program to the active QOpenGLContext and makes
    /// it the current shader program. Any previously bound shader program
    /// is released. This is equivalent to calling `glUseProgram()` on
    /// programId(). Returns `true` if the program was successfully bound;
    /// false otherwise. If the shader program has not yet been linked,
    /// or it needs to be re-linked, this function will call link().
    /// 
    /// **See also:** [`link()`]
    /// [`release()`]
    /// 
    /// Binds the attribute *name* to the specified *location.* This
    /// function can be called before or after the program has been linked.
    /// Any attributes that have not been explicitly bound when the program
    /// is linked will be assigned locations automatically.
    /// 
    /// When this function is called after the program has been linked,
    /// the program will need to be relinked for the change to take effect.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Binds the attribute *name* to the specified *location.* This
    /// function can be called before or after the program has been linked.
    /// Any attributes that have not been explicitly bound when the program
    /// is linked will be assigned locations automatically.
    /// 
    /// When this function is called after the program has been linked,
    /// the program will need to be relinked for the change to take effect.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Binds the attribute *name* to the specified *location.* This
    /// function can be called before or after the program has been linked.
    /// Any attributes that have not been explicitly bound when the program
    /// is linked will be assigned locations automatically.
    /// 
    /// When this function is called after the program has been linked,
    /// the program will need to be relinked for the change to take effect.
    /// 
    /// **See also:** [`attribute_location()`]
    bind() -> bool,
    /// 
    /// Releases the active shader program from the current QOpenGLContext.
    /// This is equivalent to calling `glUseProgram(0)` .
    /// 
    /// **See also:** [`bind()`]
    release(),
    /// 
    /// Requests the shader program's id to be created immediately. Returns `true`
    /// if successful; `false` otherwise.
    /// 
    /// This function is primarily useful when combining QOpenGLShaderProgram
    /// with other OpenGL functions that operate directly on the shader
    /// program id, like `GL_OES_get_program_binary` .
    /// 
    /// When the shader program is used normally, the shader program's id will
    /// be created on demand.
    /// 
    /// **See also:** [`program_id()`]
    /// 
    create() -> bool,
    /// 
    /// Returns the OpenGL identifier associated with this shader program.
    /// 
    /// **See also:** [`OpenGLShader::shader_id`]
    program_id() -> GLuint,
    /// 
    /// Use this function to specify to OpenGL the number of vertices in
    /// a patch to *count.* A patch is a custom OpenGL primitive whose interpretation
    /// is entirely defined by the tessellation shader stages. Therefore, calling
    /// this function only makes sense when using a QOpenGLShaderProgram
    /// containing tessellation stage shaders. When using OpenGL tessellation,
    /// the only primitive that can be rendered with `glDraw*()` functions is
    /// `GL_PATCHES` .
    /// 
    /// This is equivalent to calling glPatchParameteri(GL_PATCH_VERTICES, count).
    /// 
    /// **Note**: This modifies global OpenGL state and is not specific to this
    /// QOpenGLShaderProgram instance. You should call this in your render
    /// function when needed, as QOpenGLShaderProgram will not apply this for
    /// you. This is purely a convenience function.
    /// 
    /// **See also:** [`patch_vertex_count()`]
    set_patch_vertex_count(count: i32),
    /// 
    /// Returns the number of vertices per-patch to be used when rendering.
    /// 
    /// **Note**: This returns the global OpenGL state value. It is not specific to
    /// this QOpenGLShaderProgram instance.
    /// 
    /// **See also:** [`set_patch_vertex_count()`]
    patch_vertex_count() -> i32,
    /// 
    /// Sets the default outer tessellation levels to be used by the tessellation
    /// primitive generator in the event that the tessellation control shader
    /// does not output them to *levels.* For more details on OpenGL and Tessellation
    /// shaders see [OpenGL Tessellation Shaders](OpenGL%20Tessellation%20Shaders)
    /// 
    /// 
    /// The *levels* argument should be a QVector consisting of 4 floats. Not all
    /// of the values make sense for all tessellation modes. If you specify a vector with
    /// fewer than 4 elements, the remaining elements will be given a default value of 1.
    /// 
    /// **Note**: This modifies global OpenGL state and is not specific to this
    /// QOpenGLShaderProgram instance. You should call this in your render
    /// function when needed, as QOpenGLShaderProgram will not apply this for
    /// you. This is purely a convenience function.
    /// 
    /// **See also:** [`default_outer_tessellation_levels()`]
    /// [`set_default_inner_tessellation_levels()`]
    set_default_outer_tessellation_levels(levels: [f32]),
    /// 
    /// Returns the default outer tessellation levels to be used by the tessellation
    /// primitive generator in the event that the tessellation control shader
    /// does not output them. For more details on OpenGL and Tessellation shaders see
    /// [OpenGL Tessellation Shaders](OpenGL%20Tessellation%20Shaders)
    /// 
    /// 
    /// Returns a QVector of floats describing the outer tessellation levels. The vector
    /// will always have four elements but not all of them make sense for every mode
    /// of tessellation.
    /// 
    /// **Note**: This returns the global OpenGL state value. It is not specific to
    /// this QOpenGLShaderProgram instance.
    /// 
    /// **See also:** [`set_default_outer_tessellation_levels()`]
    /// [`default_inner_tessellation_levels()`]
    default_outer_tessellation_levels() -> [f32],
    /// 
    /// Sets the default outer tessellation levels to be used by the tessellation
    /// primitive generator in the event that the tessellation control shader
    /// does not output them to *levels.* For more details on OpenGL and Tessellation shaders see
    /// [OpenGL Tessellation Shaders](OpenGL%20Tessellation%20Shaders)
    /// 
    /// 
    /// The *levels* argument should be a QVector consisting of 2 floats. Not all
    /// of the values make sense for all tessellation modes. If you specify a vector with
    /// fewer than 2 elements, the remaining elements will be given a default value of 1.
    /// 
    /// **Note**: This modifies global OpenGL state and is not specific to this
    /// QOpenGLShaderProgram instance. You should call this in your render
    /// function when needed, as QOpenGLShaderProgram will not apply this for
    /// you. This is purely a convenience function.
    /// 
    /// **See also:** [`default_inner_tessellation_levels()`]
    /// [`set_default_outer_tessellation_levels()`]
    set_default_inner_tessellation_levels(levels: [f32]),
    /// 
    /// Returns the default inner tessellation levels to be used by the tessellation
    /// primitive generator in the event that the tessellation control shader
    /// does not output them. For more details on OpenGL and Tessellation shaders see
    /// [OpenGL Tessellation Shaders](OpenGL%20Tessellation%20Shaders)
    /// 
    /// 
    /// Returns a QVector of floats describing the inner tessellation levels. The vector
    /// will always have two elements but not all of them make sense for every mode
    /// of tessellation.
    /// 
    /// **Note**: This returns the global OpenGL state value. It is not specific to
    /// this QOpenGLShaderProgram instance.
    /// 
    /// **See also:** [`set_default_inner_tessellation_levels()`]
    /// [`default_outer_tessellation_levels()`]
    default_inner_tessellation_levels() -> [f32],
    /// 
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    uniform_location(name: *char) -> i32,
    /// 
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    [org_name(uniformLocation)]
    uniform_location_2(name: &ByteArrayType) -> i32,
    /// 
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    /// 
    /// **Overloads**
    /// Returns the location of the uniform variable *name* within this shader
    /// program's parameter list. Returns -1 if *name* is not a valid
    /// uniform variable for this shader program.
    /// 
    /// **See also:** [`attribute_location()`]
    [org_name(uniformLocation)]
    uniform_location_3(name: String) -> i32,
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    set_uniform_value(location: i32, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_2(location: i32, value: GLint),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_3(location: i32, value: GLuint),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_4(location: i32, x: GLfloat, y: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_5(location: i32, x: GLfloat, y: GLfloat, z: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_6(location: i32, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_7(location: i32, value: &Vector2DType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_8(location: i32, value: &Vector3DType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_9(location: i32, value: &Vector4DType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_10(location: i32, color: &ColorType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_11(location: i32, point: &PointType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_12(location: i32, point: &PointFType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_13(location: i32, size: &SizeType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_14(location: i32, size: &SizeFType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_15(location: i32, value: &Matrix2x2Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_16(location: i32, value: &Matrix2x3Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_17(location: i32, value: &Matrix2x4Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_18(location: i32, value: &Matrix3x2Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_19(location: i32, value: &Matrix3x3Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_20(location: i32, value: &Matrix3x4Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_21(location: i32, value: &Matrix4x2Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_22(location: i32, value: &Matrix4x3Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_23(location: i32, value: &Matrix4x4Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_24(location: i32, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_25(location: i32, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_26(location: i32, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_27(location: i32, value: &TransformType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_28(name: *char, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_29(name: *char, value: GLint),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_30(name: *char, value: GLuint),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_31(name: *char, x: GLfloat, y: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_32(name: *char, x: GLfloat, y: GLfloat, z: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_33(name: *char, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_34(name: *char, value: &Vector2DType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_35(name: *char, value: &Vector3DType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_36(name: *char, value: &Vector4DType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_37(name: *char, color: &ColorType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_38(name: *char, point: &PointType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_39(name: *char, point: &PointFType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_40(name: *char, size: &SizeType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_41(name: *char, size: &SizeFType),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_42(name: *char, value: &Matrix2x2Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_43(name: *char, value: &Matrix2x3Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_44(name: *char, value: &Matrix2x4Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_45(name: *char, value: &Matrix3x2Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_46(name: *char, value: &Matrix3x3Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_47(name: *char, value: &Matrix3x4Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_48(name: *char, value: &Matrix4x2Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_49(name: *char, value: &Matrix4x3Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_50(name: *char, value: &Matrix4x4Type),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_51(name: *char, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_52(name: *char, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_53(name: *char, value: GLfloat),
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.* This function should be used when setting sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *value* as a GLint and calls glUniform1i.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 2D vector ( *x,* *y).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 3D vector ( *x,* *y,* *z).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the 4D vector ( *x,* *y,* *z,* *w).*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to
    /// the red, green, blue, and alpha components of *color.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the x and y coordinates of *point.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to
    /// the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable associated with *name* in the current
    /// context to the width and height of the given *size.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat2x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x4 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat3x4, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x2 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x2, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec2.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x3 matrix *value.*
    /// 
    /// **Note**: This function is not aware of non square matrix support,
    /// that is, GLSL types like mat4x3, that is present in modern OpenGL
    /// versions. Instead, it treats the uniform as an array of vec3.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable at *location* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 2x2 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 3x3 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context
    /// to a 4x4 matrix *value.* The matrix elements must be specified
    /// in column-major order.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable at *location* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(location, QMatrix4x4(value))` .
    /// 
    /// **Overloads**
    /// Sets the uniform variable called *name* in the current context to a
    /// 3x3 transformation matrix *value* that is specified as a QTransform value.
    /// 
    /// To set a QTransform value as a 4x4 matrix in a shader, use
    /// `setUniformValue(name, QMatrix4x4(value))` .
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValue)]
    set_uniform_value_54(name: *char, value: &TransformType),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    set_uniform_value_array(location: i32, values: *GLfloat, count: i32, tuple_size: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_2(location: i32, values: *GLint, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_3(location: i32, values: *GLuint, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_4(location: i32, values: *Vector2DType, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_5(location: i32, values: *Vector3DType, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_6(location: i32, values: *Vector4DType, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_7(location: i32, values: *Matrix2x2Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_8(location: i32, values: *Matrix2x3Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_9(location: i32, values: *Matrix2x4Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_10(location: i32, values: *Matrix3x2Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_11(location: i32, values: *Matrix3x3Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_12(location: i32, values: *Matrix3x4Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_13(location: i32, values: *Matrix4x2Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_14(location: i32, values: *Matrix4x3Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_15(location: i32, values: *Matrix4x4Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_16(name: *char, values: *GLfloat, count: i32, tuple_size: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_17(name: *char, values: *GLint, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_18(name: *char, values: *GLuint, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_19(name: *char, values: *Vector2DType, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_20(name: *char, values: *Vector3DType, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_21(name: *char, values: *Vector4DType, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_22(name: *char, values: *Matrix2x2Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_23(name: *char, values: *Matrix2x3Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_24(name: *char, values: *Matrix2x4Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_25(name: *char, values: *Matrix3x2Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_26(name: *char, values: *Matrix3x3Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_27(name: *char, values: *Matrix3x4Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_28(name: *char, values: *Matrix4x2Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_29(name: *char, values: *Matrix4x3Type, count: i32),
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **Note**: This function is not aware of unsigned int support in modern OpenGL
    /// versions and therefore treats *values* as a GLint and calls glUniform1iv.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* This overload
    /// should be used when setting an array of sampler values.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* elements of *values.* Each element
    /// has *tupleSize* components. The *tupleSize* must be 1, 2, 3, or 4.
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4D vector elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 2x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 3x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x2 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x3 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// Sets the uniform variable array at *location* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    /// 
    /// **Overloads**
    /// Sets the uniform variable array called *name* in the current
    /// context to the *count* 4x4 matrix elements of *values.*
    /// 
    /// **See also:** [`set_attribute_value()`]
    [org_name(setUniformValueArray)]
    set_uniform_value_array_30(name: *char, values: *Matrix4x4Type, count: i32),
    /// 
    /// Returns `true` if shader programs written in the OpenGL Shading
    /// Language (GLSL) are supported on this system; false otherwise.
    /// 
    /// The *context* is used to resolve the GLSL extensions.
    /// If *context* is null, then QOpenGLContext::currentContext() is used.
    [static] has_open_gl_shader_programs(context: *OpenGLContextType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
