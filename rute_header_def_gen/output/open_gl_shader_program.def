struct OpenGLShaderProgram : Object {
    add_shader(shader: *OpenGLShaderType) -> bool,
    remove_shader(shader: *OpenGLShaderType),
    shaders() -> [OpenGLShader?],
    add_shader_from_source_code(type: OpenGLShader::ShaderType, source: *char) -> bool,
    add_shader_from_source_code(type: OpenGLShader::ShaderType, source: &ByteArrayType) -> bool,
    add_shader_from_source_code(type: OpenGLShader::ShaderType, source: String) -> bool,
    add_shader_from_source_file(type: OpenGLShader::ShaderType, file_name: String) -> bool,
    add_cacheable_shader_from_source_code(type: OpenGLShader::ShaderType, source: *char) -> bool,
    add_cacheable_shader_from_source_code(type: OpenGLShader::ShaderType, source: &ByteArrayType) -> bool,
    add_cacheable_shader_from_source_code(type: OpenGLShader::ShaderType, source: String) -> bool,
    add_cacheable_shader_from_source_file(type: OpenGLShader::ShaderType, file_name: String) -> bool,
    remove_all_shaders(),
    [event] link() -> bool,
    is_linked() -> bool,
    log() -> String,
    bind() -> bool,
    release(),
    create() -> bool,
    program_id() -> i32,
    set_patch_vertex_count(count: i32),
    patch_vertex_count() -> i32,
    set_default_outer_tessellation_levels(levels: [f32]),
    default_outer_tessellation_levels() -> [f32],
    set_default_inner_tessellation_levels(levels: [f32]),
    default_inner_tessellation_levels() -> [f32],
    uniform_location(name: *char) -> i32,
    uniform_location(name: &ByteArrayType) -> i32,
    uniform_location(name: String) -> i32,
    set_uniform_value(location: i32, value: i32),
    set_uniform_value(location: i32, value: GLint),
    set_uniform_value(location: i32, value: i32),
    set_uniform_value(location: i32, x: i32, y: i32),
    set_uniform_value(location: i32, x: i32, y: i32, z: i32),
    set_uniform_value(location: i32, x: i32, y: i32, z: i32, w: i32),
    set_uniform_value(location: i32, value: &Vector2DType),
    set_uniform_value(location: i32, value: &Vector3DType),
    set_uniform_value(location: i32, value: &Vector4DType),
    set_uniform_value(location: i32, color: &ColorType),
    set_uniform_value(location: i32, point: &PointType),
    set_uniform_value(location: i32, point: &PointFType),
    set_uniform_value(location: i32, size: &SizeType),
    set_uniform_value(location: i32, size: &SizeFType),
    set_uniform_value(location: i32, value: &Matrix2x2Type),
    set_uniform_value(location: i32, value: &Matrix2x3Type),
    set_uniform_value(location: i32, value: &Matrix2x4Type),
    set_uniform_value(location: i32, value: &Matrix3x2Type),
    set_uniform_value(location: i32, value: &Matrix3x3Type),
    set_uniform_value(location: i32, value: &Matrix3x4Type),
    set_uniform_value(location: i32, value: &Matrix4x2Type),
    set_uniform_value(location: i32, value: &Matrix4x3Type),
    set_uniform_value(location: i32, value: &Matrix4x4Type),
    set_uniform_value(location: i32, value: i32),
    set_uniform_value(location: i32, value: i32),
    set_uniform_value(location: i32, value: i32),
    set_uniform_value(location: i32, value: &TransformType),
    set_uniform_value(name: *char, value: i32),
    set_uniform_value(name: *char, value: GLint),
    set_uniform_value(name: *char, value: i32),
    set_uniform_value(name: *char, x: i32, y: i32),
    set_uniform_value(name: *char, x: i32, y: i32, z: i32),
    set_uniform_value(name: *char, x: i32, y: i32, z: i32, w: i32),
    set_uniform_value(name: *char, value: &Vector2DType),
    set_uniform_value(name: *char, value: &Vector3DType),
    set_uniform_value(name: *char, value: &Vector4DType),
    set_uniform_value(name: *char, color: &ColorType),
    set_uniform_value(name: *char, point: &PointType),
    set_uniform_value(name: *char, point: &PointFType),
    set_uniform_value(name: *char, size: &SizeType),
    set_uniform_value(name: *char, size: &SizeFType),
    set_uniform_value(name: *char, value: &Matrix2x2Type),
    set_uniform_value(name: *char, value: &Matrix2x3Type),
    set_uniform_value(name: *char, value: &Matrix2x4Type),
    set_uniform_value(name: *char, value: &Matrix3x2Type),
    set_uniform_value(name: *char, value: &Matrix3x3Type),
    set_uniform_value(name: *char, value: &Matrix3x4Type),
    set_uniform_value(name: *char, value: &Matrix4x2Type),
    set_uniform_value(name: *char, value: &Matrix4x3Type),
    set_uniform_value(name: *char, value: &Matrix4x4Type),
    set_uniform_value(name: *char, value: i32),
    set_uniform_value(name: *char, value: i32),
    set_uniform_value(name: *char, value: i32),
    set_uniform_value(name: *char, value: &TransformType),
    set_uniform_value_array(location: i32, values: *i32, count: i32, tuple_size: i32),
    set_uniform_value_array(location: i32, values: *GLint, count: i32),
    set_uniform_value_array(location: i32, values: *i32, count: i32),
    set_uniform_value_array(location: i32, values: *Vector2DType, count: i32),
    set_uniform_value_array(location: i32, values: *Vector3DType, count: i32),
    set_uniform_value_array(location: i32, values: *Vector4DType, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix2x2Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix2x3Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix2x4Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix3x2Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix3x3Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix3x4Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix4x2Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix4x3Type, count: i32),
    set_uniform_value_array(location: i32, values: *Matrix4x4Type, count: i32),
    set_uniform_value_array(name: *char, values: *i32, count: i32, tuple_size: i32),
    set_uniform_value_array(name: *char, values: *GLint, count: i32),
    set_uniform_value_array(name: *char, values: *i32, count: i32),
    set_uniform_value_array(name: *char, values: *Vector2DType, count: i32),
    set_uniform_value_array(name: *char, values: *Vector3DType, count: i32),
    set_uniform_value_array(name: *char, values: *Vector4DType, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix2x2Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix2x3Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix2x4Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix3x2Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix3x3Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix3x4Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix4x2Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix4x3Type, count: i32),
    set_uniform_value_array(name: *char, values: *Matrix4x4Type, count: i32),
    [static] has_open_gl_shader_programs(context: *OpenGLContextType) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
