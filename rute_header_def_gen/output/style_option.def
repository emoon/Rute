/// 
/// QStyleOption and its subclasses contain all the information that
/// QStyle functions need to draw a graphical element.
/// 
/// For performance reasons, there are few member functions and the
/// access to the member variables is direct (i.e., using the `.` or
/// `->` operator). This low-level feel makes the structures
/// straightforward to use and emphasizes that these are simply
/// parameters used by the style functions.
/// 
/// The caller of a QStyle function usually creates QStyleOption
/// objects on the stack. This combined with Qt's extensive use of
/// [implicit sharing](implicit%20sharing)
/// for types such as QString, QPalette, and
/// QColor ensures that no memory allocation needlessly takes place.
/// 
/// The following code snippet shows how to use a specific
/// QStyleOption subclass to paint a push button:
/// 
/// In our example, the control is a QStyle::CE_PushButton, and
/// according to the QStyle::drawControl() documentation the
/// corresponding class is QStyleOptionButton.
/// 
/// When reimplementing QStyle functions that take a QStyleOption
/// parameter, you often need to cast the QStyleOption to a subclass.
/// For safety, you can use qstyleoption_cast() to ensure that the
/// pointer type is correct. For example:
/// 
/// The qstyleoption_cast() function will return 0 if the object to
/// which `option` points is not of the correct type.
/// 
/// For an example demonstrating how style options can be used, see
/// the [Styles](widgets/styles)
/// example.
/// 
/// **See also:** [`Style`]
/// [`StylePainter`]
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct StyleOption {
    /// 
    /// Initializes the [state,](state,)
    /// [direction,](direction,)
    /// [rect,](rect,)
    /// [palette,](palette,)
    /// [fontMetrics](fontMetrics)
    /// 
    /// and [styleObject](styleObject)
    /// member variables based on the specified *widget.*
    /// 
    /// This is a convenience function; the member variables can also be
    /// initialized manually.
    /// 
    /// **See also:** [`Widget::layout_direction`]
    /// [`Widget::rect`]
    /// [`Widget::palette`]
    /// [`Widget::font_metrics`]
    /// 
    /// Use initFrom( *widget)* instead.
    init(w: *WidgetType),
    /// 
    /// Initializes the [state,](state,)
    /// [direction,](direction,)
    /// [rect,](rect,)
    /// [palette,](palette,)
    /// [fontMetrics](fontMetrics)
    /// 
    /// and [styleObject](styleObject)
    /// member variables based on the specified *widget.*
    /// 
    /// This is a convenience function; the member variables can also be
    /// initialized manually.
    /// 
    /// **See also:** [`Widget::layout_direction`]
    /// [`Widget::rect`]
    /// [`Widget::palette`]
    /// [`Widget::font_metrics`]
    init_from(w: *WidgetType),
}

[org_name(QStyleOption)]
enum OptionType {
    /// QStyleOption
    SO_Default,
    /// 
    SO_FocusRect,
    /// 
    SO_Button,
    /// 
    SO_Tab,
    /// 
    SO_MenuItem,
    /// 
    SO_Frame,
    /// 
    SO_ProgressBar,
    /// 
    SO_ToolBox,
    /// 
    SO_Header,
    /// 
    SO_DockWidget,
    /// 
    SO_ViewItem,
    /// 
    SO_TabWidgetFrame,
    /// 
    SO_TabBarBase,
    /// 
    SO_RubberBand,
    /// 
    SO_ToolBar,
    /// 
    SO_GraphicsItem,
    /// 
    SO_Complex,
    /// 
    SO_Slider,
    /// 
    SO_SpinBox,
    /// 
    SO_ToolButton,
    /// 
    SO_ComboBox,
    /// 
    SO_TitleBar,
    /// 
    SO_GroupBox,
    /// 
    SO_SizeGrip,
    /// Reserved for custom QStyleOptions;
    SO_CustomBase,
    /// Reserved for custom QStyleOptions;
    SO_ComplexCustomBase,
}

[org_name(QStyleOption)]
enum StyleOptionType {
    /// The type of style option provided (
    Type,
}

[org_name(QStyleOption)]
enum StyleOptionVersion {
    /// 1
    Version,
}

// vim: syntax=rust expandtab ts=4 sw=4
