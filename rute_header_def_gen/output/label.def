struct Label : Frame {
    text() -> String,
    pixmap() -> Pixmap?,
    picture() -> Picture?,
    movie() -> Movie?,
    text_format() -> Rute::TextFormat,
    set_text_format(arg0: Rute::TextFormat),
    alignment() -> Rute::Alignment,
    set_alignment(arg0: Rute::Alignment),
    set_word_wrap(on: bool),
    word_wrap() -> bool,
    indent() -> i32,
    set_indent(arg0: i32),
    margin() -> i32,
    set_margin(arg0: i32),
    has_scaled_contents() -> bool,
    set_scaled_contents(arg0: bool),
    [replace] size_hint() -> Size,
    [replace] minimum_size_hint() -> Size,
    set_buddy(arg0: *WidgetType),
    buddy() -> Widget?,
    [replace] height_for_width(arg0: i32) -> i32,
    open_external_links() -> bool,
    set_open_external_links(open: bool),
    set_text_interaction_flags(flags: Rute::TextInteractionFlags),
    text_interaction_flags() -> Rute::TextInteractionFlags,
    set_selection(arg0: i32, arg1: i32),
    has_selected_text() -> bool,
    selected_text() -> String,
    selection_start() -> i32,
    set_text(arg0: String),
    set_pixmap(arg0: &PixmapType),
    set_picture(arg0: &PictureType),
    set_movie(movie: *MovieType),
    set_num(arg0: i32),
    set_num(arg0: double),
    clear(),
    [event] link_activated(link: String),
    [event] link_hovered(link: String),
    [replace] event(e: *EventType) -> bool,
    [replace] key_press_event(ev: *KeyEventType),
    [replace] paint_event(arg0: *PaintEventType),
    [replace] change_event(arg0: *EventType),
    [replace] mouse_press_event(ev: *MouseEventType),
    [replace] mouse_move_event(ev: *MouseEventType),
    [replace] mouse_release_event(ev: *MouseEventType),
    [replace] context_menu_event(ev: *ContextMenuEventType),
    [replace] focus_in_event(ev: *FocusEventType),
    [replace] focus_out_event(ev: *FocusEventType),
    [replace] focus_next_prev_child(next: bool) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
