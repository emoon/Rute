struct Label : Frame {
    text() -> String,
    pixmap() -> &PixmapType,
    picture() -> &PictureType,
    movie() -> &MovieType,
    text_format() -> Rute::TextFormat,
    set_text_format(Rute::TextFormat arg0),
    alignment() -> Rute::Alignment,
    set_alignment(Rute::Alignment arg0),
    set_word_wrap(bool on),
    word_wrap() -> bool,
    indent() -> i32,
    set_indent(i32 arg0),
    margin() -> i32,
    set_margin(i32 arg0),
    has_scaled_contents() -> bool,
    set_scaled_contents(bool arg0),
    size_hint() -> SizeType,
    minimum_size_hint() -> SizeType,
    set_buddy(&WidgetType arg0),
    buddy() -> &WidgetType,
    height_for_width(i32 arg0) -> i32,
    open_external_links() -> bool,
    set_open_external_links(bool open),
    set_text_interaction_flags(Rute::TextInteractionFlags flags),
    text_interaction_flags() -> Rute::TextInteractionFlags,
    set_selection(i32 arg0, i32 arg1),
    has_selected_text() -> bool,
    selected_text() -> String,
    selection_start() -> i32,
    [callback] set_text(String arg0),
    [callback] set_pixmap(&PixmapType arg0),
    [callback] set_picture(&PictureType arg0),
    [callback] set_movie(&MovieType movie),
    [callback] set_num(i32 arg0),
    [callback] set_num(double arg0),
    [callback] clear(),
    link_activated(String link),
    link_hovered(String link),
    event(&EventType e) -> bool,
    key_press_event(&KeyEventType ev),
    paint_event(&PaintEventType arg0),
    change_event(&EventType arg0),
    mouse_press_event(&MouseEventType ev),
    mouse_move_event(&MouseEventType ev),
    mouse_release_event(&MouseEventType ev),
    context_menu_event(&ContextMenuEventType ev),
    focus_in_event(&FocusEventType ev),
    focus_out_event(&FocusEventType ev),
    focus_next_prev_child(bool next) -> bool,
}

// vim: syntax=rust expandtab ts=4 sw=4
