[org_name(QOpenGLDebugLogger)]
enum LoggingMode {
    AsynchronousLogging,
    SynchronousLogging,
}

struct OpenGLDebugLogger : Object {
    initialize() -> bool,
    is_logging() -> bool,
    logging_mode() -> OpenGLDebugLogger::LoggingMode,
    maximum_message_length() -> i64,
    push_group(name: String, id: i32, source: OpenGLDebugMessage::Source),
    pop_group(),
    enable_messages(sources: OpenGLDebugMessage::Sources, types: OpenGLDebugMessage::Types, severities: OpenGLDebugMessage::Severities),
    enable_messages(ids: &i32, sources: OpenGLDebugMessage::Sources, types: OpenGLDebugMessage::Types),
    disable_messages(sources: OpenGLDebugMessage::Sources, types: OpenGLDebugMessage::Types, severities: OpenGLDebugMessage::Severities),
    disable_messages(ids: &i32, sources: OpenGLDebugMessage::Sources, types: OpenGLDebugMessage::Types),
    logged_messages() -> [OpenGLDebugMessage],
    log_message(debug_message: &OpenGLDebugMessageType),
    start_logging(logging_mode: OpenGLDebugLogger::LoggingMode),
    stop_logging(),
    [signal] message_logged(debug_message: &OpenGLDebugMessageType),
}

// vim: syntax=rust expandtab ts=4 sw=4
