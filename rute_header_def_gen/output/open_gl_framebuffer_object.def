[org_name(QOpenGLFramebufferObject)]
enum Attachment {
    NoAttachment,
    CombinedDepthStencil,
    Depth,
}

[org_name(QOpenGLFramebufferObject)]
enum FramebufferRestorePolicy {
    DontRestoreFramebufferBinding,
    RestoreFramebufferBindingToDefault,
    RestoreFrameBufferBinding,
}


struct OpenGLFramebufferObject {
    add_color_attachment(size: &SizeType, internal_format: i32),
    format() -> OpenGLFramebufferObjectFormat,
    is_valid() -> bool,
    is_bound() -> bool,
    bind() -> bool,
    release() -> bool,
    width() -> i32,
    height() -> i32,
    texture() -> i32,
    textures() -> i32,
    take_texture() -> i32,
    size() -> Size,
    sizes() -> [Size],
    to_image() -> Image,
    to_image(flipped: bool) -> Image,
    to_image(flipped: bool, color_attachment_index: i32) -> Image,
    attachment() -> OpenGLFramebufferObject::Attachment,
    set_attachment(attachment: OpenGLFramebufferObject::Attachment),
    handle() -> i32,
    [static] bind_default() -> bool,
    [static] has_open_gl_framebuffer_objects() -> bool,
    [static] has_open_gl_framebuffer_blit() -> bool,
    [static] blit_framebuffer(target: *OpenGLFramebufferObjectType, target_rect: &RectType, source: *OpenGLFramebufferObjectType, source_rect: &RectType, buffers: i32, filter: i32, read_color_attachment_index: i32, draw_color_attachment_index: i32, restore_policy: OpenGLFramebufferObject::FramebufferRestorePolicy),
}

// vim: syntax=rust expandtab ts=4 sw=4
