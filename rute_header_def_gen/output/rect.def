
struct Rect {
    is_null() -> bool,
    is_empty() -> bool,
    is_valid() -> bool,
    left() -> i32,
    top() -> i32,
    right() -> i32,
    bottom() -> i32,
    normalized() -> RectType,
    x() -> i32,
    y() -> i32,
    set_left(i32 pos),
    set_top(i32 pos),
    set_right(i32 pos),
    set_bottom(i32 pos),
    set_x(i32 x),
    set_y(i32 y),
    set_top_left(&PointType p),
    set_bottom_right(&PointType p),
    set_top_right(&PointType p),
    set_bottom_left(&PointType p),
    top_left() -> PointType,
    bottom_right() -> PointType,
    top_right() -> PointType,
    bottom_left() -> PointType,
    center() -> PointType,
    move_left(i32 pos),
    move_top(i32 pos),
    move_right(i32 pos),
    move_bottom(i32 pos),
    move_top_left(&PointType p),
    move_bottom_right(&PointType p),
    move_top_right(&PointType p),
    move_bottom_left(&PointType p),
    move_center(&PointType p),
    move_to(i32 x, i32 t),
    move_to(&PointType p),
    set_rect(i32 x, i32 y, i32 w, i32 h),
    get_rect(&i32 x, &i32 y, &i32 w, &i32 h),
    set_coords(i32 x1, i32 y1, i32 x2, i32 y2),
    get_coords(&i32 x1, &i32 y1, &i32 x2, &i32 y2),
    adjust(i32 x1, i32 y1, i32 x2, i32 y2),
    adjusted(i32 x1, i32 y1, i32 x2, i32 y2) -> RectType,
    size() -> SizeType,
    width() -> i32,
    height() -> i32,
    set_width(i32 w),
    set_height(i32 h),
    set_size(&SizeType s),
    contains(&RectType r, bool proper) -> bool,
    contains(&PointType p, bool proper) -> bool,
    contains(i32 x, i32 y) -> bool,
    contains(i32 x, i32 y, bool proper) -> bool,
    united(&RectType other) -> RectType,
    intersected(&RectType other) -> RectType,
    intersects(&RectType r) -> bool,
    margins_added(&MarginsType margins) -> RectType,
    margins_removed(&MarginsType margins) -> RectType,
    to_cg_rect() -> CGRect,
}

