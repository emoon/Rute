struct GraphicsWidget : GraphicsObject, GraphicsLayoutItem {
    layout() -> &GraphicsLayoutType,
    set_layout(&GraphicsLayoutType layout),
    adjust_size(),
    layout_direction() -> Rute::LayoutDirection,
    set_layout_direction(Rute::LayoutDirection direction),
    unset_layout_direction(),
    style() -> &StyleType,
    set_style(&StyleType style),
    font() -> FontType,
    set_font(&FontType font),
    palette() -> PaletteType,
    set_palette(&PaletteType palette),
    auto_fill_background() -> bool,
    set_auto_fill_background(bool enabled),
    resize(&SizeFType size),
    resize(f32 w, f32 h),
    size() -> SizeFType,
    rect() -> RectFType,
    set_contents_margins(f32 left, f32 top, f32 right, f32 bottom),
    get_contents_margins(&f32 left, &f32 top, &f32 right, &f32 bottom),
    set_window_frame_margins(f32 left, f32 top, f32 right, f32 bottom),
    get_window_frame_margins(&f32 left, &f32 top, &f32 right, &f32 bottom),
    unset_window_frame_margins(),
    window_frame_rect() -> RectFType,
    window_flags() -> Rute::WindowFlags,
    window_type() -> Rute::WindowType,
    set_window_flags(Rute::WindowFlags w_flags),
    is_active_window() -> bool,
    set_window_title(String title),
    window_title() -> String,
    focus_policy() -> Rute::FocusPolicy,
    set_focus_policy(Rute::FocusPolicy policy),
    set_tab_order(&GraphicsWidgetType first, &GraphicsWidgetType second),
    focus_widget() -> &GraphicsWidgetType,
    grab_shortcut(&KeySequenceType sequence, Rute::ShortcutContext context) -> i32,
    release_shortcut(i32 id),
    set_shortcut_enabled(i32 id, bool enabled),
    set_shortcut_auto_repeat(i32 id, bool enabled),
    add_action(&ActionType action),
    add_actions(<&ActionType> actions),
    insert_actions(&ActionType before, <&ActionType> actions),
    insert_action(&ActionType before, &ActionType action),
    remove_action(&ActionType action),
    actions() -> <&ActionType>,
    type() -> i32,
    paint(&PainterType painter, &StyleOptionGraphicsItemType option, &WidgetType widget),
    paint_window_frame(&PainterType painter, &StyleOptionGraphicsItemType option, &WidgetType widget),
    bounding_rect() -> RectFType,
    shape() -> PainterPathType,
    layout_changed(),
    close() -> bool,
    init_style_option(&StyleOptionType option),
    size_hint(Rute::SizeHint which, &SizeFType constraint) -> SizeFType,
    item_change(GraphicsItem::GraphicsItemChange change, &VariantType value) -> VariantType,
    property_change(String property_name, &VariantType value) -> VariantType,
    scene_event(&EventType event) -> bool,
    window_frame_event(&EventType e) -> bool,
    window_frame_section_at(&PointFType pos) -> Rute::WindowFrameSection,
    event(&EventType event) -> bool,
    change_event(&EventType event),
    close_event(&CloseEventType event),
    focus_in_event(&FocusEventType event),
    focus_next_prev_child(bool next) -> bool,
    focus_out_event(&FocusEventType event),
    hide_event(&HideEventType event),
    move_event(&GraphicsSceneMoveEventType event),
    polish_event(),
    resize_event(&GraphicsSceneResizeEventType event),
    show_event(&ShowEventType event),
    hover_move_event(&GraphicsSceneHoverEventType event),
    hover_leave_event(&GraphicsSceneHoverEventType event),
    grab_mouse_event(&EventType event),
    ungrab_mouse_event(&EventType event),
    grab_keyboard_event(&EventType event),
    ungrab_keyboard_event(&EventType event),
}

