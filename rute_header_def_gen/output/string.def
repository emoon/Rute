
struct String {
    swap(String other),
    size() -> i32,
    count() -> i32,
    length() -> i32,
    is_empty() -> bool,
    resize(i32 size),
    resize(i32 size, CharType fill_char),
    fill(CharType c, i32 size) -> String,
    chop(i32 n),
    capacity() -> i32,
    reserve(i32 size),
    squeeze(),
    unicode() -> &CharType,
    data() -> &CharType,
    data() -> &CharType,
    const_data() -> &CharType,
    detach(),
    is_detached() -> bool,
    is_shared_with(String other) -> bool,
    clear(),
    at(i32 i) -> CharType,
    front() -> CharType,
    front() -> CharRefType,
    back() -> CharType,
    back() -> CharRefType,
    arg(qlonglong a, i32 fieldwidth, i32 base, CharType fill_char) -> String,
    arg(qulonglong a, i32 fieldwidth, i32 base, CharType fill_char) -> String,
    arg(long a, i32 fieldwidth, i32 base, CharType fill_char) -> String,
    arg(ulong a, i32 fieldwidth, i32 base, CharType fill_char) -> String,
    arg(i32 a, i32 field_width, i32 base, CharType fill_char) -> String,
    arg(uint a, i32 field_width, i32 base, CharType fill_char) -> String,
    arg(short a, i32 field_width, i32 base, CharType fill_char) -> String,
    arg(ushort a, i32 field_width, i32 base, CharType fill_char) -> String,
    arg(double a, i32 field_width, char fmt, i32 prec, CharType fill_char) -> String,
    arg(char a, i32 field_width, CharType fill_char) -> String,
    arg(CharType a, i32 field_width, CharType fill_char) -> String,
    arg(String a, i32 field_width, CharType fill_char) -> String,
    arg(StringViewType a, i32 field_width, CharType fill_char) -> String,
    arg(Latin1StringType a, i32 field_width, CharType fill_char) -> String,
    arg(String a1, String a2) -> String,
    arg(String a1, String a2, String a3) -> String,
    arg(String a1, String a2, String a3, String a4) -> String,
    arg(String a1, String a2, String a3, String a4, String a5) -> String,
    arg(String a1, String a2, String a3, String a4, String a5, String a6) -> String,
    arg(String a1, String a2, String a3, String a4, String a5, String a6, String a7) -> String,
    arg(String a1, String a2, String a3, String a4, String a5, String a6, String a7, String a8) -> String,
    arg(String a1, String a2, String a3, String a4, String a5, String a6, String a7, String a8, String a9) -> String,
    vsprintf(&char format, va_list ap) -> String,
    sprintf(&char format) -> String,
    vasprintf(&char format, va_list ap) -> String,
    asprintf(&char format) -> String,
    index_of(CharType c, i32 from, Rute::CaseSensitivity cs) -> i32,
    index_of(String s, i32 from, Rute::CaseSensitivity cs) -> i32,
    index_of(Latin1StringType s, i32 from, Rute::CaseSensitivity cs) -> i32,
    index_of(&StringRefType s, i32 from, Rute::CaseSensitivity cs) -> i32,
    last_index_of(CharType c, i32 from, Rute::CaseSensitivity cs) -> i32,
    last_index_of(String s, i32 from, Rute::CaseSensitivity cs) -> i32,
    last_index_of(Latin1StringType s, i32 from, Rute::CaseSensitivity cs) -> i32,
    last_index_of(&StringRefType s, i32 from, Rute::CaseSensitivity cs) -> i32,
    contains(CharType c, Rute::CaseSensitivity cs) -> bool,
    contains(String s, Rute::CaseSensitivity cs) -> bool,
    contains(Latin1StringType s, Rute::CaseSensitivity cs) -> bool,
    contains(&StringRefType s, Rute::CaseSensitivity cs) -> bool,
    count(CharType c, Rute::CaseSensitivity cs) -> i32,
    count(String s, Rute::CaseSensitivity cs) -> i32,
    count(&StringRefType s, Rute::CaseSensitivity cs) -> i32,
    index_of(&RegExpType arg0, i32 from) -> i32,
    last_index_of(&RegExpType arg0, i32 from) -> i32,
    contains(&RegExpType rx) -> bool,
    count(&RegExpType arg0) -> i32,
    index_of(&RegExpType arg0, i32 from) -> i32,
    last_index_of(&RegExpType arg0, i32 from) -> i32,
    contains(&RegExpType rx) -> bool,
    index_of(&RegularExpressionType re, i32 from) -> i32,
    index_of(&RegularExpressionType re, i32 from, &RegularExpressionMatchType rmatch) -> i32,
    last_index_of(&RegularExpressionType re, i32 from) -> i32,
    last_index_of(&RegularExpressionType re, i32 from, &RegularExpressionMatchType rmatch) -> i32,
    contains(&RegularExpressionType re) -> bool,
    contains(&RegularExpressionType re, &RegularExpressionMatchType match) -> bool,
    count(&RegularExpressionType re) -> i32,
    section(CharType sep, i32 start, i32 end, SectionFlags flags) -> String,
    section(String in_sep, i32 start, i32 end, SectionFlags flags) -> String,
    section(&RegExpType reg, i32 start, i32 end, SectionFlags flags) -> String,
    section(&RegularExpressionType re, i32 start, i32 end, SectionFlags flags) -> String,
    left(i32 n) -> String,
    right(i32 n) -> String,
    mid(i32 position, i32 n) -> String,
    chopped(i32 n) -> String,
    left_ref(i32 n) -> StringRefType,
    right_ref(i32 n) -> StringRefType,
    mid_ref(i32 position, i32 n) -> StringRefType,
    starts_with(String s, Rute::CaseSensitivity cs) -> bool,
    starts_with(&StringRefType s, Rute::CaseSensitivity cs) -> bool,
    starts_with(StringViewType s, Rute::CaseSensitivity cs) -> bool,
    starts_with(Latin1StringType s, Rute::CaseSensitivity cs) -> bool,
    starts_with(CharType c, Rute::CaseSensitivity cs) -> bool,
    ends_with(String s, Rute::CaseSensitivity cs) -> bool,
    ends_with(&StringRefType s, Rute::CaseSensitivity cs) -> bool,
    ends_with(StringViewType s, Rute::CaseSensitivity cs) -> bool,
    ends_with(Latin1StringType s, Rute::CaseSensitivity cs) -> bool,
    ends_with(CharType c, Rute::CaseSensitivity cs) -> bool,
    left_justified(i32 width, CharType fill, bool trunc) -> String,
    right_justified(i32 width, CharType fill, bool trunc) -> String,
    to_lower() -> String,
    to_upper() -> String,
    to_case_folded() -> String,
    simplified() -> String,
    to_html_escaped() -> String,
    insert(i32 i, CharType c) -> String,
    insert(i32 i, &CharType uc, i32 len) -> String,
    insert(i32 i, String s) -> String,
    insert(i32 i, &StringRefType s) -> String,
    insert(i32 i, Latin1StringType s) -> String,
    append(CharType c) -> String,
    append(&CharType uc, i32 len) -> String,
    append(String s) -> String,
    append(&StringRefType s) -> String,
    append(Latin1StringType s) -> String,
    prepend(CharType c) -> String,
    prepend(&CharType uc, i32 len) -> String,
    prepend(String s) -> String,
    prepend(&StringRefType s) -> String,
    prepend(Latin1StringType s) -> String,
    remove(i32 i, i32 len) -> String,
    remove(CharType c, Rute::CaseSensitivity cs) -> String,
    remove(String s, Rute::CaseSensitivity cs) -> String,
    replace(i32 i, i32 len, CharType after) -> String,
    replace(i32 i, i32 len, &CharType s, i32 slen) -> String,
    replace(i32 i, i32 len, String after) -> String,
    replace(CharType before, CharType after, Rute::CaseSensitivity cs) -> String,
    replace(&CharType before, i32 blen, &CharType after, i32 alen, Rute::CaseSensitivity cs) -> String,
    replace(Latin1StringType before, Latin1StringType after, Rute::CaseSensitivity cs) -> String,
    replace(Latin1StringType before, String after, Rute::CaseSensitivity cs) -> String,
    replace(String before, Latin1StringType after, Rute::CaseSensitivity cs) -> String,
    replace(String before, String after, Rute::CaseSensitivity cs) -> String,
    replace(CharType c, String after, Rute::CaseSensitivity cs) -> String,
    replace(CharType c, Latin1StringType after, Rute::CaseSensitivity cs) -> String,
    replace(&RegExpType rx, String after) -> String,
    remove(&RegExpType rx) -> String,
    replace(&RegularExpressionType re, String after) -> String,
    remove(&RegularExpressionType re) -> String,
    split(String sep, String::SplitBehavior behavior, Rute::CaseSensitivity cs) -> StringListType,
    split_ref(String sep, String::SplitBehavior behavior, Rute::CaseSensitivity cs) -> Vector<QStringRef>Type,
    split(CharType sep, String::SplitBehavior behavior, Rute::CaseSensitivity cs) -> StringListType,
    split_ref(CharType sep, String::SplitBehavior behavior, Rute::CaseSensitivity cs) -> Vector<QStringRef>Type,
    split(&RegExpType sep, String::SplitBehavior behavior) -> StringListType,
    split_ref(&RegExpType sep, String::SplitBehavior behavior) -> Vector<QStringRef>Type,
    split(&RegularExpressionType sep, String::SplitBehavior behavior) -> StringListType,
    split_ref(&RegularExpressionType sep, String::SplitBehavior behavior) -> Vector<QStringRef>Type,
    normalized(String::NormalizationForm mode, Char::UnicodeVersion version) -> String,
    repeated(i32 times) -> String,
    utf16() -> &ushort,
    to_latin1() -> ByteArrayType,
    to_utf8() -> ByteArrayType,
    to_local8_bit() -> ByteArrayType,
    to_ucs4() -> Vector<uint>Type,
    from_latin1(&char str, i32 size) -> String,
    from_utf8(&char str, i32 size) -> String,
    from_local8_bit(&char str, i32 size) -> String,
    from_latin1(&ByteArrayType str) -> String,
    from_utf8(&ByteArrayType str) -> String,
    from_local8_bit(&ByteArrayType str) -> String,
    from_utf16(&ushort arg0, i32 size) -> String,
    from_ucs4(&uint arg0, i32 size) -> String,
    from_raw_data(&CharType arg0, i32 size) -> String,
    from_utf16(&char16_t str, i32 size) -> String,
    from_ucs4(&char32_t str, i32 size) -> String,
    to_w_char_array(&wchar_t array) -> i32,
    from_w_char_array(&wchar_t string, i32 size) -> String,
    set_raw_data(&CharType unicode, i32 size) -> String,
    set_unicode(&CharType unicode, i32 size) -> String,
    set_utf16(&ushort utf16, i32 size) -> String,
    compare(String s, Rute::CaseSensitivity cs) -> i32,
    compare(Latin1StringType other, Rute::CaseSensitivity cs) -> i32,
    compare(String s1, String s2, Rute::CaseSensitivity cs) -> i32,
    compare(String s1, Latin1StringType s2, Rute::CaseSensitivity cs) -> i32,
    compare(Latin1StringType s1, String s2, Rute::CaseSensitivity cs) -> i32,
    compare(&StringRefType s, Rute::CaseSensitivity cs) -> i32,
    compare(String s1, &StringRefType s2, Rute::CaseSensitivity arg0) -> i32,
    locale_aware_compare(String s) -> i32,
    locale_aware_compare(String s1, String s2) -> i32,
    locale_aware_compare(&StringRefType s) -> i32,
    locale_aware_compare(String s1, &StringRefType s2) -> i32,
    to_short(&bool ok, i32 base) -> short,
    to_u_short(&bool ok, i32 base) -> ushort,
    to_int(&bool ok, i32 base) -> i32,
    to_u_int(&bool ok, i32 base) -> uint,
    to_long(&bool ok, i32 base) -> long,
    to_u_long(&bool ok, i32 base) -> ulong,
    to_long_long(&bool ok, i32 base) -> qlonglong,
    to_u_long_long(&bool ok, i32 base) -> qulonglong,
    to_float(&bool ok) -> float,
    to_double(&bool ok) -> double,
    set_num(short arg0, i32 base) -> String,
    set_num(ushort arg0, i32 base) -> String,
    set_num(i32 arg0, i32 base) -> String,
    set_num(uint arg0, i32 base) -> String,
    set_num(long arg0, i32 base) -> String,
    set_num(ulong arg0, i32 base) -> String,
    set_num(qlonglong arg0, i32 base) -> String,
    set_num(qulonglong arg0, i32 base) -> String,
    set_num(float arg0, char f, i32 prec) -> String,
    set_num(double arg0, char f, i32 prec) -> String,
    number(i32 arg0, i32 base) -> String,
    number(uint arg0, i32 base) -> String,
    number(long arg0, i32 base) -> String,
    number(ulong arg0, i32 base) -> String,
    number(qlonglong arg0, i32 base) -> String,
    number(qulonglong arg0, i32 base) -> String,
    number(double arg0, char f, i32 prec) -> String,
    prepend(&char s) -> String,
    prepend(&ByteArrayType s) -> String,
    append(&char s) -> String,
    append(&ByteArrayType s) -> String,
    insert(i32 i, &char s) -> String,
    insert(i32 i, &ByteArrayType s) -> String,
    begin() -> iterator,
    begin() -> const_iterator,
    cbegin() -> const_iterator,
    const_begin() -> const_iterator,
    end() -> iterator,
    end() -> const_iterator,
    cend() -> const_iterator,
    const_end() -> const_iterator,
    rbegin() -> reverse_iterator,
    rend() -> reverse_iterator,
    rbegin() -> const_reverse_iterator,
    rend() -> const_reverse_iterator,
    crbegin() -> const_reverse_iterator,
    crend() -> const_reverse_iterator,
    push_back(CharType c),
    push_back(String s),
    push_front(CharType c),
    push_front(String s),
    shrink_to_fit(),
    is_null() -> bool,
    is_simple_text() -> bool,
    is_right_to_left() -> bool,
    realloc_data(uint alloc, bool grow),
    expand(i32 i),
    multi_arg(i32 num_args, String args) -> String,
    compare_helper(&CharType data1, i32 length1, &CharType data2, i32 length2, Rute::CaseSensitivity cs) -> i32,
    compare_helper(&CharType data1, i32 length1, &char data2, i32 length2, Rute::CaseSensitivity cs) -> i32,
    compare_helper(&CharType data1, i32 length1, Latin1StringType s2, Rute::CaseSensitivity cs) -> i32,
    locale_aware_compare_helper(&CharType data1, i32 length1, &CharType data2, i32 length2) -> i32,
    to_lower_helper(String str) -> String,
    to_lower_helper(String str) -> String,
    to_upper_helper(String str) -> String,
    to_upper_helper(String str) -> String,
    to_case_folded_helper(String str) -> String,
    to_case_folded_helper(String str) -> String,
    simplified_helper(String str) -> String,
    simplified_helper(String str) -> String,
    from_latin1_helper(&char str, i32 size) -> &Data,
    from_ascii_helper(&char str, i32 size) -> &Data,
    from_utf8_helper(&char str, i32 size) -> String,
    from_local8_bit_helper(&char arg0, i32 size) -> String,
    to_latin1_helper(String arg0) -> ByteArrayType,
    to_latin1_helper(&CharType data, i32 size) -> ByteArrayType,
    to_latin1_helper_inplace(String arg0) -> ByteArrayType,
    to_utf8_helper(String arg0) -> ByteArrayType,
    to_local8_bit_helper(&CharType data, i32 size) -> ByteArrayType,
    to_ucs4_helper(&ushort uc, i32 length, &uint out) -> i32,
    to_integral_helper(&CharType data, i32 len, &bool ok, i32 base) -> qlonglong,
    to_integral_helper(&CharType data, uint len, &bool ok, i32 base) -> qulonglong,
    replace_helper(&uint indices, i32 n_indices, i32 blen, &CharType after, i32 alen),
}

