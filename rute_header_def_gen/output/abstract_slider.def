struct AbstractSlider : Widget {
    orientation() -> Rute::Orientation,
    set_minimum(arg0: i32),
    minimum() -> i32,
    set_maximum(arg0: i32),
    maximum() -> i32,
    set_single_step(arg0: i32),
    single_step() -> i32,
    set_page_step(arg0: i32),
    page_step() -> i32,
    set_tracking(enable: bool),
    has_tracking() -> bool,
    set_slider_down(arg0: bool),
    is_slider_down() -> bool,
    set_slider_position(arg0: i32),
    slider_position() -> i32,
    set_inverted_appearance(arg0: bool),
    inverted_appearance() -> bool,
    value() -> i32,
    set_value(arg0: i32),
    set_orientation(arg0: Rute::Orientation),
    set_range(min: i32, max: i32),
    [event] value_changed(value: i32),
    [event] slider_pressed(),
    [event] slider_moved(position: i32),
    [event] slider_released(),
    [event] range_changed(min: i32, max: i32),
    [event] action_triggered(action: i32),
    [override] event(e: &EventType) -> bool,
    set_repeat_action(action: AbstractSlider::SliderAction, threshold_time: i32, repeat_time: i32),
    repeat_action() -> AbstractSlider::SliderAction,
    [override] slider_change(change: AbstractSlider::SliderChange),
    [override] key_press_event(ev: &KeyEventType),
    [override] timer_event(arg0: &TimerEventType),
    [override] wheel_event(e: &WheelEventType),
    [override] change_event(e: &EventType),
}

// vim: syntax=rust expandtab ts=4 sw=4
