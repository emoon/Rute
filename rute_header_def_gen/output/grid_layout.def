struct GridLayout : Layout {
    [event] size_hint() -> Size,
    [event] minimum_size() -> Size,
    [event] maximum_size() -> Size,
    set_horizontal_spacing(spacing: i32),
    horizontal_spacing() -> i32,
    set_vertical_spacing(spacing: i32),
    vertical_spacing() -> i32,
    set_spacing(spacing: i32),
    spacing() -> i32,
    set_row_minimum_height(row: i32, min_size: i32),
    set_column_minimum_width(column: i32, min_size: i32),
    row_minimum_height(row: i32) -> i32,
    column_minimum_width(column: i32) -> i32,
    column_count() -> i32,
    row_count() -> i32,
    cell_rect(row: i32, column: i32) -> Rect,
    [event] has_height_for_width() -> bool,
    [event] height_for_width(arg0: i32) -> i32,
    [event] minimum_height_for_width(arg0: i32) -> i32,
    [event] expanding_directions() -> Rute::Orientations,
    [event] invalidate(),
    add_widget(w: *WidgetType),
    add_widget(arg0: *WidgetType, row: i32, column: i32, arg1: Rute::Alignment),
    add_widget(arg0: *WidgetType, row: i32, column: i32, row_span: i32, column_span: i32, arg1: Rute::Alignment),
    add_layout(arg0: *LayoutType, row: i32, column: i32, arg1: Rute::Alignment),
    add_layout(arg0: *LayoutType, row: i32, column: i32, row_span: i32, column_span: i32, arg1: Rute::Alignment),
    set_origin_corner(arg0: Rute::Corner),
    origin_corner() -> Rute::Corner,
    [event] item_at(index: i32) -> LayoutItem?,
    item_at_position(row: i32, column: i32) -> LayoutItem?,
    [event] take_at(index: i32) -> LayoutItem?,
    [event] count() -> i32,
    add_item(item: *LayoutItemType, row: i32, column: i32, row_span: i32, column_span: i32, arg0: Rute::Alignment),
    set_default_positioning(n: i32, orient: Rute::Orientation),
    get_item_position(idx: i32, row: *i32, column: *i32, row_span: *i32, column_span: *i32),
    [event] add_item(arg0: *LayoutItemType),
}

// vim: syntax=rust expandtab ts=4 sw=4
