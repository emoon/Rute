/// 
/// This event can be intercepted in applications to provide tooltips
/// or help for custom widgets. The type() can be
/// either QEvent::ToolTip or QEvent::WhatsThis.
/// 
/// **See also:** [`ToolTip`]
/// [`WhatsThis`]
/// [`StatusTipEvent`]
/// [`WhatsThisClickedEvent`]
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct HelpEvent : Event {
    /// 
    /// Same as pos().x().
    /// 
    /// **See also:** [`y()`]
    /// [`pos()`]
    /// [`global_pos()`]
    x() -> i32,
    /// 
    /// Same as pos().y().
    /// 
    /// **See also:** [`x()`]
    /// [`pos()`]
    /// [`global_pos()`]
    y() -> i32,
    /// 
    /// Same as globalPos().x().
    /// 
    /// **See also:** [`x()`]
    /// [`global_y()`]
    /// [`global_pos()`]
    global_x() -> i32,
    /// 
    /// Same as globalPos().y().
    /// 
    /// **See also:** [`y()`]
    /// [`global_x()`]
    /// [`global_pos()`]
    global_y() -> i32,
    /// 
    /// Returns the mouse cursor position when the event was generated,
    /// relative to the widget to which the event is dispatched.
    /// 
    /// **See also:** [`global_pos()`]
    /// [`x()`]
    /// [`y()`]
    pos() -> Point?,
    /// 
    /// Returns the mouse cursor position when the event was generated
    /// in global coordinates.
    /// 
    /// **See also:** [`pos()`]
    /// [`global_x()`]
    /// [`global_y()`]
    global_pos() -> Point?,
}

// vim: syntax=rust expandtab ts=4 sw=4
