enum DockWidgetFeature {
    DockWidgetClosable,
    DockWidgetMovable,
    DockWidgetFloatable,
    DockWidgetVerticalTitleBar,
    DockWidgetFeatureMask,
    AllDockWidgetFeatures,
    NoDockWidgetFeatures,
    Reserved,
}

struct DockWidget : Widget {
    widget() -> &WidgetType,
    set_widget(widget: &WidgetType),
    set_features(features: DockWidgetFeatures),
    features() -> DockWidgetFeatures,
    set_floating(floating: bool),
    is_floating() -> bool,
    set_allowed_areas(areas: Rute::DockWidgetAreas),
    allowed_areas() -> Rute::DockWidgetAreas,
    set_title_bar_widget(widget: &WidgetType),
    title_bar_widget() -> &WidgetType,
    is_area_allowed(area: Rute::DockWidgetArea) -> bool,
    toggle_view_action() -> &ActionType,
    [event] features_changed(features: DockWidget::DockWidgetFeatures),
    [event] top_level_changed(top_level: bool),
    [event] allowed_areas_changed(allowed_areas: Rute::DockWidgetAreas),
    [event] visibility_changed(visible: bool),
    [event] dock_location_changed(area: Rute::DockWidgetArea),
    [override] change_event(event: &EventType),
    [override] close_event(event: &CloseEventType),
    [override] paint_event(event: &PaintEventType),
    [override] event(event: &EventType) -> bool,
    init_style_option(option: &StyleOptionDockWidgetType),
}

// vim: syntax=rust expandtab ts=4 sw=4
