
struct Icon {
    swap(other: &IconType),
    pixmap(size: &SizeType, mode: Icon::Mode, state: Icon::State) -> PixmapType,
    pixmap(w: i32, h: i32, mode: Icon::Mode, state: Icon::State) -> PixmapType,
    pixmap(extent: i32, mode: Icon::Mode, state: Icon::State) -> PixmapType,
    pixmap(window: &WindowType, size: &SizeType, mode: Icon::Mode, state: Icon::State) -> PixmapType,
    actual_size(size: &SizeType, mode: Icon::Mode, state: Icon::State) -> SizeType,
    actual_size(window: &WindowType, size: &SizeType, mode: Icon::Mode, state: Icon::State) -> SizeType,
    name() -> String,
    paint(painter: &PainterType, rect: &RectType, alignment: Rute::Alignment, mode: Icon::Mode, state: Icon::State),
    paint(painter: &PainterType, x: i32, y: i32, w: i32, h: i32, alignment: Rute::Alignment, mode: Icon::Mode, state: Icon::State),
    is_null() -> bool,
    is_detached() -> bool,
    detach(),
    cache_key() -> i64,
    add_pixmap(pixmap: &PixmapType, mode: Icon::Mode, state: Icon::State),
    add_file(file_name: String, size: &SizeType, mode: Icon::Mode, state: Icon::State),
    available_sizes(mode: Icon::Mode, state: Icon::State) -> [SizeType],
    set_is_mask(is_mask: bool),
    is_mask() -> bool,
    from_theme(name: String) -> IconType,
    from_theme(name: String, fallback: &IconType) -> IconType,
    has_theme_icon(name: String) -> bool,
    theme_search_paths() -> StringListType,
    set_theme_search_paths(searchpath: &StringListType),
    theme_name() -> String,
    set_theme_name(path: String),
}

// vim: syntax=rust expandtab ts=4 sw=4
