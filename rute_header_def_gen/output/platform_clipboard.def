///     \class QPlatformClipboard
///     \since 5.0
///     \internal
///     \preliminary
///     \ingroup qpa
/// 
///     \brief The QPlatformClipboard class provides an abstraction for the system clipboard.
///  */
/// 
/// QPlatformClipboard::~QPlatformClipboard()
/// {
/// 
/// }
/// 
/// QMimeData *QPlatformClipboard::mimeData(QClipboard::Mode mode)
/// {
///     //we know its clipboard
///     Q_UNUSED(mode);
///     return q_clipboardData()->source();
/// }
/// 
/// void QPlatformClipboard::setMimeData(QMimeData *data, QClipboard::Mode mode)
/// {
///     //we know its clipboard
///     Q_UNUSED(mode);
///     q_clipboardData()->setSource(data);
/// 
///     emitChanged(mode);
/// }
/// 
/// bool QPlatformClipboard::supportsMode(QClipboard::Mode mode) const
/// {
///     return mode == QClipboard::Clipboard;
/// }
/// 
/// bool QPlatformClipboard::ownsMode(QClipboard::Mode mode) const
/// {
///     Q_UNUSED(mode);
///     return false;
/// }
/// 
/// void QPlatformClipboard::emitChanged(QClipboard::Mode mode)
/// {
///     if (!QGuiApplicationPrivate::is_app_closing) // QTBUG-39317, prevent emission when closing down.
///         QGuiApplication::clipboard()->emitChanged(mode);
/// }
/// 
/// QT_END_NAMESPACE
/// 
/// #endif //QT_NO_CLIPBOARD
/// The documentation provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.

struct PlatformClipboard {
    [event] mime_data(mode: Clipboard::Mode) -> MimeData?,
    [event] set_mime_data(data: *MimeDataType, mode: Clipboard::Mode),
    [event] supports_mode(mode: Clipboard::Mode) -> bool,
    [event] owns_mode(mode: Clipboard::Mode) -> bool,
    emit_changed(mode: Clipboard::Mode),
}

// vim: syntax=rust expandtab ts=4 sw=4
