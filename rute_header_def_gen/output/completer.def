struct Completer : Object {
    set_widget(widget: &WidgetType),
    widget() -> &WidgetType,
    set_model(c: &AbstractItemModelType),
    model() -> &AbstractItemModelType,
    set_completion_mode(mode: Completer::CompletionMode),
    completion_mode() -> Completer::CompletionMode,
    set_filter_mode(filter_mode: Rute::MatchFlags),
    filter_mode() -> Rute::MatchFlags,
    popup() -> &AbstractItemViewType,
    set_popup(popup: &AbstractItemViewType),
    set_case_sensitivity(case_sensitivity: Rute::CaseSensitivity),
    case_sensitivity() -> Rute::CaseSensitivity,
    set_model_sorting(sorting: Completer::ModelSorting),
    model_sorting() -> Completer::ModelSorting,
    set_completion_column(column: i32),
    completion_column() -> i32,
    set_completion_role(role: i32),
    completion_role() -> i32,
    wrap_around() -> bool,
    max_visible_items() -> i32,
    set_max_visible_items(max_items: i32),
    completion_count() -> i32,
    set_current_row(row: i32) -> bool,
    current_row() -> i32,
    current_index() -> ModelIndexType,
    current_completion() -> String,
    completion_model() -> &AbstractItemModelType,
    completion_prefix() -> String,
    set_completion_prefix(prefix: String),
    complete(rect: &RectType),
    set_wrap_around(wrap: bool),
    [override] path_from_index(index: &ModelIndexType) -> String,
    [override] split_path(path: String) -> StringListType,
    [override] event_filter(o: &ObjectType, e: &EventType) -> bool,
    [override] event(arg0: &EventType) -> bool,
    [event] activated(text: String),
    [event] activated(index: &ModelIndexType),
    [event] highlighted(text: String),
    [event] highlighted(index: &ModelIndexType),
}

// vim: syntax=rust expandtab ts=4 sw=4
