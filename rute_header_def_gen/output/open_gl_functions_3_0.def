///     \class QOpenGLFunctions_3_0
///     \inmodule QtGui
///     \since 5.1
///     \wrapper
///     \brief The QOpenGLFunctions_3_0 class provides all functions for OpenGL 3.0 specification.
/// 
///     This class is a wrapper for functions from OpenGL 3.0 specification.
///     See reference pages on \l {http://www.opengl.org/sdk/docs/}{opengl.org}
///     for function documentation.
/// 
///     \sa QAbstractOpenGLFunctions
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct OpenGLFunctions_3_0 : AbstractOpenGLFunctions {
    [event] initialize_open_gl_functions() -> bool,
    gl_viewport(x: GLint, y: GLint, width: i32, height: i32),
    gl_depth_range(near_val: i32, far_val: i32),
    gl_is_enabled(cap: i32) -> i32,
    gl_get_tex_level_parameteriv(target: i32, level: GLint, pname: i32, params: *GLint),
    gl_get_tex_level_parameterfv(target: i32, level: GLint, pname: i32, params: *i32),
    gl_get_tex_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_get_tex_parameterfv(target: i32, pname: i32, params: *i32),
    gl_get_tex_image(target: i32, level: GLint, format: i32, type: i32, pixels: *i32),
    gl_get_integerv(pname: i32, params: *GLint),
    gl_get_floatv(pname: i32, params: *i32),
    gl_get_error() -> i32,
    gl_get_doublev(pname: i32, params: *i32),
    gl_get_booleanv(pname: i32, params: *i32),
    gl_read_pixels(x: GLint, y: GLint, width: i32, height: i32, format: i32, type: i32, pixels: *i32),
    gl_read_buffer(mode: i32),
    gl_pixel_storei(pname: i32, param: GLint),
    gl_pixel_storef(pname: i32, param: i32),
    gl_depth_func(func: i32),
    gl_stencil_op(fail: i32, zfail: i32, zpass: i32),
    gl_stencil_func(func: i32, ref: GLint, mask: i32),
    gl_logic_op(opcode: i32),
    gl_blend_func(sfactor: i32, dfactor: i32),
    gl_flush(),
    gl_finish(),
    gl_enable(cap: i32),
    gl_disable(cap: i32),
    gl_depth_mask(flag: i32),
    gl_color_mask(red: i32, green: i32, blue: i32, alpha: i32),
    gl_stencil_mask(mask: i32),
    gl_clear_depth(depth: i32),
    gl_clear_stencil(s: GLint),
    gl_clear_color(red: i32, green: i32, blue: i32, alpha: i32),
    gl_clear(mask: i32),
    gl_draw_buffer(mode: i32),
    gl_tex_image2_d(target: i32, level: GLint, internalformat: GLint, width: i32, height: i32, border: GLint, format: i32, type: i32, pixels: *i32),
    gl_tex_image1_d(target: i32, level: GLint, internalformat: GLint, width: i32, border: GLint, format: i32, type: i32, pixels: *i32),
    gl_tex_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_tex_parameteri(target: i32, pname: i32, param: GLint),
    gl_tex_parameterfv(target: i32, pname: i32, params: *i32),
    gl_tex_parameterf(target: i32, pname: i32, param: i32),
    gl_scissor(x: GLint, y: GLint, width: i32, height: i32),
    gl_polygon_mode(face: i32, mode: i32),
    gl_point_size(size: i32),
    gl_line_width(width: i32),
    gl_hint(target: i32, mode: i32),
    gl_front_face(mode: i32),
    gl_cull_face(mode: i32),
    gl_indexubv(c: *i32),
    gl_indexub(c: i32),
    gl_is_texture(texture: i32) -> i32,
    gl_gen_textures(n: i32, textures: *i32),
    gl_delete_textures(n: i32, textures: *i32),
    gl_bind_texture(target: i32, texture: i32),
    gl_tex_sub_image2_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, width: i32, height: i32, format: i32, type: i32, pixels: *i32),
    gl_tex_sub_image1_d(target: i32, level: GLint, xoffset: GLint, width: i32, format: i32, type: i32, pixels: *i32),
    gl_copy_tex_sub_image2_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: i32, height: i32),
    gl_copy_tex_sub_image1_d(target: i32, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: i32),
    gl_copy_tex_image2_d(target: i32, level: GLint, internalformat: i32, x: GLint, y: GLint, width: i32, height: i32, border: GLint),
    gl_copy_tex_image1_d(target: i32, level: GLint, internalformat: i32, x: GLint, y: GLint, width: i32, border: GLint),
    gl_polygon_offset(factor: i32, units: i32),
    gl_get_pointerv(pname: i32, params: *i32),
    gl_draw_elements(mode: i32, count: i32, type: i32, indices: *i32),
    gl_draw_arrays(mode: i32, first: GLint, count: i32),
    gl_copy_tex_sub_image3_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: i32, height: i32),
    gl_tex_sub_image3_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: i32, height: i32, depth: i32, format: i32, type: i32, pixels: *i32),
    gl_tex_image3_d(target: i32, level: GLint, internalformat: GLint, width: i32, height: i32, depth: i32, border: GLint, format: i32, type: i32, pixels: *i32),
    gl_draw_range_elements(mode: i32, start: i32, end: i32, count: i32, type: i32, indices: *i32),
    gl_blend_equation(mode: i32),
    gl_blend_color(red: i32, green: i32, blue: i32, alpha: i32),
    gl_get_compressed_tex_image(target: i32, level: GLint, img: *i32),
    gl_compressed_tex_sub_image1_d(target: i32, level: GLint, xoffset: GLint, width: i32, format: i32, image_size: i32, data: *i32),
    gl_compressed_tex_sub_image2_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, width: i32, height: i32, format: i32, image_size: i32, data: *i32),
    gl_compressed_tex_sub_image3_d(target: i32, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: i32, height: i32, depth: i32, format: i32, image_size: i32, data: *i32),
    gl_compressed_tex_image1_d(target: i32, level: GLint, internalformat: i32, width: i32, border: GLint, image_size: i32, data: *i32),
    gl_compressed_tex_image2_d(target: i32, level: GLint, internalformat: i32, width: i32, height: i32, border: GLint, image_size: i32, data: *i32),
    gl_compressed_tex_image3_d(target: i32, level: GLint, internalformat: i32, width: i32, height: i32, depth: i32, border: GLint, image_size: i32, data: *i32),
    gl_sample_coverage(value: i32, invert: i32),
    gl_active_texture(texture: i32),
    gl_point_parameteriv(pname: i32, params: *GLint),
    gl_point_parameteri(pname: i32, param: GLint),
    gl_point_parameterfv(pname: i32, params: *i32),
    gl_point_parameterf(pname: i32, param: i32),
    gl_multi_draw_elements(mode: i32, count: *i32, type: i32, indices: *i32, drawcount: i32),
    gl_multi_draw_arrays(mode: i32, first: *GLint, count: *i32, drawcount: i32),
    gl_blend_func_separate(sfactor_rgb: i32, dfactor_rgb: i32, sfactor_alpha: i32, dfactor_alpha: i32),
    gl_get_buffer_pointerv(target: i32, pname: i32, params: *i32),
    gl_get_buffer_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_unmap_buffer(target: i32) -> i32,
    gl_map_buffer(target: i32, access: i32) -> i32?,
    gl_get_buffer_sub_data(target: i32, offset: GLintptr, size: GLsizeiptr, data: *i32),
    gl_buffer_sub_data(target: i32, offset: GLintptr, size: GLsizeiptr, data: *i32),
    gl_buffer_data(target: i32, size: GLsizeiptr, data: *i32, usage: i32),
    gl_is_buffer(buffer: i32) -> i32,
    gl_gen_buffers(n: i32, buffers: *i32),
    gl_delete_buffers(n: i32, buffers: *i32),
    gl_bind_buffer(target: i32, buffer: i32),
    gl_get_query_objectuiv(id: i32, pname: i32, params: *i32),
    gl_get_query_objectiv(id: i32, pname: i32, params: *GLint),
    gl_get_queryiv(target: i32, pname: i32, params: *GLint),
    gl_end_query(target: i32),
    gl_begin_query(target: i32, id: i32),
    gl_is_query(id: i32) -> i32,
    gl_delete_queries(n: i32, ids: *i32),
    gl_gen_queries(n: i32, ids: *i32),
    gl_validate_program(program: i32),
    gl_uniform4iv(location: GLint, count: i32, value: *GLint),
    gl_uniform3iv(location: GLint, count: i32, value: *GLint),
    gl_uniform2iv(location: GLint, count: i32, value: *GLint),
    gl_uniform1iv(location: GLint, count: i32, value: *GLint),
    gl_uniform4fv(location: GLint, count: i32, value: *i32),
    gl_uniform3fv(location: GLint, count: i32, value: *i32),
    gl_uniform2fv(location: GLint, count: i32, value: *i32),
    gl_uniform1fv(location: GLint, count: i32, value: *i32),
    gl_uniform4i(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint),
    gl_uniform3i(location: GLint, v0: GLint, v1: GLint, v2: GLint),
    gl_uniform2i(location: GLint, v0: GLint, v1: GLint),
    gl_uniform1i(location: GLint, v0: GLint),
    gl_uniform4f(location: GLint, v0: i32, v1: i32, v2: i32, v3: i32),
    gl_uniform3f(location: GLint, v0: i32, v1: i32, v2: i32),
    gl_uniform2f(location: GLint, v0: i32, v1: i32),
    gl_uniform1f(location: GLint, v0: i32),
    gl_use_program(program: i32),
    gl_shader_source(shader: i32, count: i32, string: *GLchar, length: *GLint),
    gl_link_program(program: i32),
    gl_is_shader(shader: i32) -> i32,
    gl_is_program(program: i32) -> i32,
    gl_get_uniformiv(program: i32, location: GLint, params: *GLint),
    gl_get_uniformfv(program: i32, location: GLint, params: *i32),
    gl_get_uniform_location(program: i32, name: *GLchar) -> i32,
    gl_get_shader_source(shader: i32, buf_size: i32, length: *i32, source: *GLchar),
    gl_get_shader_info_log(shader: i32, buf_size: i32, length: *i32, info_log: *GLchar),
    gl_get_shaderiv(shader: i32, pname: i32, params: *GLint),
    gl_get_program_info_log(program: i32, buf_size: i32, length: *i32, info_log: *GLchar),
    gl_get_programiv(program: i32, pname: i32, params: *GLint),
    gl_get_attached_shaders(program: i32, max_count: i32, count: *i32, obj: *i32),
    gl_get_active_uniform(program: i32, index: i32, buf_size: i32, length: *i32, size: *GLint, type: *i32, name: *GLchar),
    gl_detach_shader(program: i32, shader: i32),
    gl_delete_shader(shader: i32),
    gl_delete_program(program: i32),
    gl_create_shader(type: i32) -> i32,
    gl_create_program() -> i32,
    gl_compile_shader(shader: i32),
    gl_attach_shader(program: i32, shader: i32),
    gl_stencil_mask_separate(face: i32, mask: i32),
    gl_stencil_func_separate(face: i32, func: i32, ref: GLint, mask: i32),
    gl_stencil_op_separate(face: i32, sfail: i32, dpfail: i32, dppass: i32),
    gl_draw_buffers(n: i32, bufs: *i32),
    gl_blend_equation_separate(mode_rgb: i32, mode_alpha: i32),
    gl_is_vertex_array(array: i32) -> i32,
    gl_gen_vertex_arrays(n: i32, arrays: *i32),
    gl_delete_vertex_arrays(n: i32, arrays: *i32),
    gl_bind_vertex_array(array: i32),
    gl_flush_mapped_buffer_range(target: i32, offset: GLintptr, length: GLsizeiptr),
    gl_map_buffer_range(target: i32, offset: GLintptr, length: GLsizeiptr, access: i32) -> i32?,
    gl_framebuffer_texture_layer(target: i32, attachment: i32, texture: i32, level: GLint, layer: GLint),
    gl_renderbuffer_storage_multisample(target: i32, samples: i32, internalformat: i32, width: i32, height: i32),
    gl_blit_framebuffer(src_x0: GLint, src_y0: GLint, src_x1: GLint, src_y1: GLint, dst_x0: GLint, dst_y0: GLint, dst_x1: GLint, dst_y1: GLint, mask: i32, filter: i32),
    gl_generate_mipmap(target: i32),
    gl_get_framebuffer_attachment_parameteriv(target: i32, attachment: i32, pname: i32, params: *GLint),
    gl_framebuffer_renderbuffer(target: i32, attachment: i32, renderbuffertarget: i32, renderbuffer: i32),
    gl_framebuffer_texture3_d(target: i32, attachment: i32, textarget: i32, texture: i32, level: GLint, zoffset: GLint),
    gl_framebuffer_texture2_d(target: i32, attachment: i32, textarget: i32, texture: i32, level: GLint),
    gl_framebuffer_texture1_d(target: i32, attachment: i32, textarget: i32, texture: i32, level: GLint),
    gl_check_framebuffer_status(target: i32) -> i32,
    gl_gen_framebuffers(n: i32, framebuffers: *i32),
    gl_delete_framebuffers(n: i32, framebuffers: *i32),
    gl_bind_framebuffer(target: i32, framebuffer: i32),
    gl_is_framebuffer(framebuffer: i32) -> i32,
    gl_get_renderbuffer_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_renderbuffer_storage(target: i32, internalformat: i32, width: i32, height: i32),
    gl_gen_renderbuffers(n: i32, renderbuffers: *i32),
    gl_delete_renderbuffers(n: i32, renderbuffers: *i32),
    gl_bind_renderbuffer(target: i32, renderbuffer: i32),
    gl_is_renderbuffer(renderbuffer: i32) -> i32,
    gl_clear_bufferfi(buffer: i32, drawbuffer: GLint, depth: i32, stencil: GLint),
    gl_clear_bufferfv(buffer: i32, drawbuffer: GLint, value: *i32),
    gl_clear_bufferuiv(buffer: i32, drawbuffer: GLint, value: *i32),
    gl_clear_bufferiv(buffer: i32, drawbuffer: GLint, value: *GLint),
    gl_get_tex_parameter_iuiv(target: i32, pname: i32, params: *i32),
    gl_get_tex_parameter_iiv(target: i32, pname: i32, params: *GLint),
    gl_tex_parameter_iuiv(target: i32, pname: i32, params: *i32),
    gl_tex_parameter_iiv(target: i32, pname: i32, params: *GLint),
    gl_uniform4uiv(location: GLint, count: i32, value: *i32),
    gl_uniform3uiv(location: GLint, count: i32, value: *i32),
    gl_uniform2uiv(location: GLint, count: i32, value: *i32),
    gl_uniform1uiv(location: GLint, count: i32, value: *i32),
    gl_uniform4ui(location: GLint, v0: i32, v1: i32, v2: i32, v3: i32),
    gl_uniform3ui(location: GLint, v0: i32, v1: i32, v2: i32),
    gl_uniform2ui(location: GLint, v0: i32, v1: i32),
    gl_uniform1ui(location: GLint, v0: i32),
    gl_get_frag_data_location(program: i32, name: *GLchar) -> i32,
    gl_bind_frag_data_location(program: i32, color: i32, name: *GLchar),
    gl_get_uniformuiv(program: i32, location: GLint, params: *i32),
    gl_end_conditional_render(),
    gl_begin_conditional_render(id: i32, mode: i32),
    gl_clamp_color(target: i32, clamp: i32),
    gl_get_transform_feedback_varying(program: i32, index: i32, buf_size: i32, length: *i32, size: *i32, type: *i32, name: *GLchar),
    gl_transform_feedback_varyings(program: i32, count: i32, varyings: *GLchar, buffer_mode: i32),
    gl_bind_buffer_base(target: i32, index: i32, buffer: i32),
    gl_bind_buffer_range(target: i32, index: i32, buffer: i32, offset: GLintptr, size: GLsizeiptr),
    gl_end_transform_feedback(),
    gl_begin_transform_feedback(primitive_mode: i32),
    gl_is_enabledi(target: i32, index: i32) -> i32,
    gl_disablei(target: i32, index: i32),
    gl_enablei(target: i32, index: i32),
    gl_get_integeri_v(target: i32, index: i32, data: *GLint),
    gl_get_booleani_v(target: i32, index: i32, data: *i32),
    gl_color_maski(index: i32, r: i32, g: i32, b: i32, a: i32),
    gl_translatef(x: i32, y: i32, z: i32),
    gl_translated(x: i32, y: i32, z: i32),
    gl_scalef(x: i32, y: i32, z: i32),
    gl_scaled(x: i32, y: i32, z: i32),
    gl_rotatef(angle: i32, x: i32, y: i32, z: i32),
    gl_rotated(angle: i32, x: i32, y: i32, z: i32),
    gl_ortho(left: i32, right: i32, bottom: i32, top: i32, z_near: i32, z_far: i32),
    gl_load_identity(),
    gl_frustum(left: i32, right: i32, bottom: i32, top: i32, z_near: i32, z_far: i32),
    gl_is_list(list: i32) -> i32,
    gl_get_tex_geniv(coord: i32, pname: i32, params: *GLint),
    gl_get_tex_genfv(coord: i32, pname: i32, params: *i32),
    gl_get_tex_gendv(coord: i32, pname: i32, params: *i32),
    gl_get_tex_enviv(target: i32, pname: i32, params: *GLint),
    gl_get_tex_envfv(target: i32, pname: i32, params: *i32),
    gl_get_polygon_stipple(mask: *i32),
    gl_get_pixel_mapusv(map: i32, values: *i32),
    gl_get_pixel_mapuiv(map: i32, values: *i32),
    gl_get_pixel_mapfv(map: i32, values: *i32),
    gl_get_materialiv(face: i32, pname: i32, params: *GLint),
    gl_get_materialfv(face: i32, pname: i32, params: *i32),
    gl_get_mapiv(target: i32, query: i32, v: *GLint),
    gl_get_mapfv(target: i32, query: i32, v: *i32),
    gl_get_mapdv(target: i32, query: i32, v: *i32),
    gl_get_lightiv(light: i32, pname: i32, params: *GLint),
    gl_get_lightfv(light: i32, pname: i32, params: *i32),
    gl_get_clip_plane(plane: i32, equation: *i32),
    gl_draw_pixels(width: i32, height: i32, format: i32, type: i32, pixels: *i32),
    gl_copy_pixels(x: GLint, y: GLint, width: i32, height: i32, type: i32),
    gl_pixel_mapusv(map: i32, mapsize: GLint, values: *i32),
    gl_pixel_mapuiv(map: i32, mapsize: GLint, values: *i32),
    gl_pixel_mapfv(map: i32, mapsize: GLint, values: *i32),
    gl_pixel_transferi(pname: i32, param: GLint),
    gl_pixel_transferf(pname: i32, param: i32),
    gl_pixel_zoom(xfactor: i32, yfactor: i32),
    gl_alpha_func(func: i32, ref: i32),
    gl_eval_point2(i: GLint, j: GLint),
    gl_eval_mesh2(mode: i32, i1: GLint, i2: GLint, j1: GLint, j2: GLint),
    gl_eval_point1(i: GLint),
    gl_eval_mesh1(mode: i32, i1: GLint, i2: GLint),
    gl_eval_coord2fv(u: *i32),
    gl_eval_coord2f(u: i32, v: i32),
    gl_eval_coord2dv(u: *i32),
    gl_eval_coord2d(u: i32, v: i32),
    gl_eval_coord1fv(u: *i32),
    gl_eval_coord1f(u: i32),
    gl_eval_coord1dv(u: *i32),
    gl_eval_coord1d(u: i32),
    gl_map_grid2f(un: GLint, u1: i32, u2: i32, vn: GLint, v1: i32, v2: i32),
    gl_map_grid2d(un: GLint, u1: i32, u2: i32, vn: GLint, v1: i32, v2: i32),
    gl_map_grid1f(un: GLint, u1: i32, u2: i32),
    gl_map_grid1d(un: GLint, u1: i32, u2: i32),
    gl_map2f(target: i32, u1: i32, u2: i32, ustride: GLint, uorder: GLint, v1: i32, v2: i32, vstride: GLint, vorder: GLint, points: *i32),
    gl_map2d(target: i32, u1: i32, u2: i32, ustride: GLint, uorder: GLint, v1: i32, v2: i32, vstride: GLint, vorder: GLint, points: *i32),
    gl_map1f(target: i32, u1: i32, u2: i32, stride: GLint, order: GLint, points: *i32),
    gl_map1d(target: i32, u1: i32, u2: i32, stride: GLint, order: GLint, points: *i32),
    gl_accum(op: i32, value: i32),
    gl_index_mask(mask: i32),
    gl_clear_index(c: i32),
    gl_clear_accum(red: i32, green: i32, blue: i32, alpha: i32),
    gl_push_name(name: i32),
    gl_pop_name(),
    gl_pass_through(token: i32),
    gl_load_name(name: i32),
    gl_init_names(),
    gl_render_mode(mode: i32) -> i32,
    gl_select_buffer(size: i32, buffer: *i32),
    gl_feedback_buffer(size: i32, type: i32, buffer: *i32),
    gl_tex_geniv(coord: i32, pname: i32, params: *GLint),
    gl_tex_geni(coord: i32, pname: i32, param: GLint),
    gl_tex_genfv(coord: i32, pname: i32, params: *i32),
    gl_tex_genf(coord: i32, pname: i32, param: i32),
    gl_tex_gendv(coord: i32, pname: i32, params: *i32),
    gl_tex_gend(coord: i32, pname: i32, param: i32),
    gl_tex_enviv(target: i32, pname: i32, params: *GLint),
    gl_tex_envi(target: i32, pname: i32, param: GLint),
    gl_tex_envfv(target: i32, pname: i32, params: *i32),
    gl_tex_envf(target: i32, pname: i32, param: i32),
    gl_shade_model(mode: i32),
    gl_polygon_stipple(mask: *i32),
    gl_materialiv(face: i32, pname: i32, params: *GLint),
    gl_materiali(face: i32, pname: i32, param: GLint),
    gl_materialfv(face: i32, pname: i32, params: *i32),
    gl_materialf(face: i32, pname: i32, param: i32),
    gl_line_stipple(factor: GLint, pattern: i32),
    gl_light_modeliv(pname: i32, params: *GLint),
    gl_light_modeli(pname: i32, param: GLint),
    gl_light_modelfv(pname: i32, params: *i32),
    gl_light_modelf(pname: i32, param: i32),
    gl_lightiv(light: i32, pname: i32, params: *GLint),
    gl_lighti(light: i32, pname: i32, param: GLint),
    gl_lightfv(light: i32, pname: i32, params: *i32),
    gl_lightf(light: i32, pname: i32, param: i32),
    gl_fogiv(pname: i32, params: *GLint),
    gl_fogi(pname: i32, param: GLint),
    gl_fogfv(pname: i32, params: *i32),
    gl_fogf(pname: i32, param: i32),
    gl_color_material(face: i32, mode: i32),
    gl_clip_plane(plane: i32, equation: *i32),
    gl_vertex4sv(v: *i32),
    gl_vertex4s(x: i32, y: i32, z: i32, w: i32),
    gl_vertex4iv(v: *GLint),
    gl_vertex4i(x: GLint, y: GLint, z: GLint, w: GLint),
    gl_vertex4fv(v: *i32),
    gl_vertex4f(x: i32, y: i32, z: i32, w: i32),
    gl_vertex4dv(v: *i32),
    gl_vertex4d(x: i32, y: i32, z: i32, w: i32),
    gl_vertex3sv(v: *i32),
    gl_vertex3s(x: i32, y: i32, z: i32),
    gl_vertex3iv(v: *GLint),
    gl_vertex3i(x: GLint, y: GLint, z: GLint),
    gl_vertex3fv(v: *i32),
    gl_vertex3f(x: i32, y: i32, z: i32),
    gl_vertex3dv(v: *i32),
    gl_vertex3d(x: i32, y: i32, z: i32),
    gl_vertex2sv(v: *i32),
    gl_vertex2s(x: i32, y: i32),
    gl_vertex2iv(v: *GLint),
    gl_vertex2i(x: GLint, y: GLint),
    gl_vertex2fv(v: *i32),
    gl_vertex2f(x: i32, y: i32),
    gl_vertex2dv(v: *i32),
    gl_vertex2d(x: i32, y: i32),
    gl_tex_coord4sv(v: *i32),
    gl_tex_coord4s(s: i32, t: i32, r: i32, q: i32),
    gl_tex_coord4iv(v: *GLint),
    gl_tex_coord4i(s: GLint, t: GLint, r: GLint, q: GLint),
    gl_tex_coord4fv(v: *i32),
    gl_tex_coord4f(s: i32, t: i32, r: i32, q: i32),
    gl_tex_coord4dv(v: *i32),
    gl_tex_coord4d(s: i32, t: i32, r: i32, q: i32),
    gl_tex_coord3sv(v: *i32),
    gl_tex_coord3s(s: i32, t: i32, r: i32),
    gl_tex_coord3iv(v: *GLint),
    gl_tex_coord3i(s: GLint, t: GLint, r: GLint),
    gl_tex_coord3fv(v: *i32),
    gl_tex_coord3f(s: i32, t: i32, r: i32),
    gl_tex_coord3dv(v: *i32),
    gl_tex_coord3d(s: i32, t: i32, r: i32),
    gl_tex_coord2sv(v: *i32),
    gl_tex_coord2s(s: i32, t: i32),
    gl_tex_coord2iv(v: *GLint),
    gl_tex_coord2i(s: GLint, t: GLint),
    gl_tex_coord2fv(v: *i32),
    gl_tex_coord2f(s: i32, t: i32),
    gl_tex_coord2dv(v: *i32),
    gl_tex_coord2d(s: i32, t: i32),
    gl_tex_coord1sv(v: *i32),
    gl_tex_coord1s(s: i32),
    gl_tex_coord1iv(v: *GLint),
    gl_tex_coord1i(s: GLint),
    gl_tex_coord1fv(v: *i32),
    gl_tex_coord1f(s: i32),
    gl_tex_coord1dv(v: *i32),
    gl_tex_coord1d(s: i32),
    gl_rectsv(v1: *i32, v2: *i32),
    gl_rects(x1: i32, y1: i32, x2: i32, y2: i32),
    gl_rectiv(v1: *GLint, v2: *GLint),
    gl_recti(x1: GLint, y1: GLint, x2: GLint, y2: GLint),
    gl_rectfv(v1: *i32, v2: *i32),
    gl_rectf(x1: i32, y1: i32, x2: i32, y2: i32),
    gl_rectdv(v1: *i32, v2: *i32),
    gl_rectd(x1: i32, y1: i32, x2: i32, y2: i32),
    gl_raster_pos4sv(v: *i32),
    gl_raster_pos4s(x: i32, y: i32, z: i32, w: i32),
    gl_raster_pos4iv(v: *GLint),
    gl_raster_pos4i(x: GLint, y: GLint, z: GLint, w: GLint),
    gl_raster_pos4fv(v: *i32),
    gl_raster_pos4f(x: i32, y: i32, z: i32, w: i32),
    gl_raster_pos4dv(v: *i32),
    gl_raster_pos4d(x: i32, y: i32, z: i32, w: i32),
    gl_raster_pos3sv(v: *i32),
    gl_raster_pos3s(x: i32, y: i32, z: i32),
    gl_raster_pos3iv(v: *GLint),
    gl_raster_pos3i(x: GLint, y: GLint, z: GLint),
    gl_raster_pos3fv(v: *i32),
    gl_raster_pos3f(x: i32, y: i32, z: i32),
    gl_raster_pos3dv(v: *i32),
    gl_raster_pos3d(x: i32, y: i32, z: i32),
    gl_raster_pos2sv(v: *i32),
    gl_raster_pos2s(x: i32, y: i32),
    gl_raster_pos2iv(v: *GLint),
    gl_raster_pos2i(x: GLint, y: GLint),
    gl_raster_pos2fv(v: *i32),
    gl_raster_pos2f(x: i32, y: i32),
    gl_raster_pos2dv(v: *i32),
    gl_raster_pos2d(x: i32, y: i32),
    gl_normal3sv(v: *i32),
    gl_normal3s(nx: i32, ny: i32, nz: i32),
    gl_normal3iv(v: *GLint),
    gl_normal3i(nx: GLint, ny: GLint, nz: GLint),
    gl_normal3fv(v: *i32),
    gl_normal3f(nx: i32, ny: i32, nz: i32),
    gl_normal3dv(v: *i32),
    gl_normal3d(nx: i32, ny: i32, nz: i32),
    gl_normal3bv(v: *i32),
    gl_normal3b(nx: i32, ny: i32, nz: i32),
    gl_indexsv(c: *i32),
    gl_indexs(c: i32),
    gl_indexiv(c: *GLint),
    gl_indexi(c: GLint),
    gl_indexfv(c: *i32),
    gl_indexf(c: i32),
    gl_indexdv(c: *i32),
    gl_indexd(c: i32),
    gl_end(),
    gl_edge_flagv(flag: *i32),
    gl_edge_flag(flag: i32),
    gl_color4usv(v: *i32),
    gl_color4us(red: i32, green: i32, blue: i32, alpha: i32),
    gl_color4uiv(v: *i32),
    gl_color4ui(red: i32, green: i32, blue: i32, alpha: i32),
    gl_color4ubv(v: *i32),
    gl_color4ub(red: i32, green: i32, blue: i32, alpha: i32),
    gl_color4sv(v: *i32),
    gl_color4s(red: i32, green: i32, blue: i32, alpha: i32),
    gl_color4iv(v: *GLint),
    gl_color4i(red: GLint, green: GLint, blue: GLint, alpha: GLint),
    gl_color4fv(v: *i32),
    gl_color4f(red: i32, green: i32, blue: i32, alpha: i32),
    gl_color4dv(v: *i32),
    gl_color4d(red: i32, green: i32, blue: i32, alpha: i32),
    gl_color4bv(v: *i32),
    gl_color4b(red: i32, green: i32, blue: i32, alpha: i32),
    gl_color3usv(v: *i32),
    gl_color3us(red: i32, green: i32, blue: i32),
    gl_color3uiv(v: *i32),
    gl_color3ui(red: i32, green: i32, blue: i32),
    gl_color3ubv(v: *i32),
    gl_color3ub(red: i32, green: i32, blue: i32),
    gl_color3sv(v: *i32),
    gl_color3s(red: i32, green: i32, blue: i32),
    gl_color3iv(v: *GLint),
    gl_color3i(red: GLint, green: GLint, blue: GLint),
    gl_color3fv(v: *i32),
    gl_color3f(red: i32, green: i32, blue: i32),
    gl_color3dv(v: *i32),
    gl_color3d(red: i32, green: i32, blue: i32),
    gl_color3bv(v: *i32),
    gl_color3b(red: i32, green: i32, blue: i32),
    gl_bitmap(width: i32, height: i32, xorig: i32, yorig: i32, xmove: i32, ymove: i32, bitmap: *i32),
    gl_begin(mode: i32),
    gl_list_base(base: i32),
    gl_gen_lists(range: i32) -> i32,
    gl_delete_lists(list: i32, range: i32),
    gl_call_lists(n: i32, type: i32, lists: *i32),
    gl_call_list(list: i32),
    gl_end_list(),
    gl_new_list(list: i32, mode: i32),
    gl_prioritize_textures(n: i32, textures: *i32, priorities: *i32),
    gl_are_textures_resident(n: i32, textures: *i32, residences: *i32) -> i32,
    gl_vertex_pointer(size: GLint, type: i32, stride: i32, pointer: *i32),
    gl_tex_coord_pointer(size: GLint, type: i32, stride: i32, pointer: *i32),
    gl_normal_pointer(type: i32, stride: i32, pointer: *i32),
    gl_interleaved_arrays(format: i32, stride: i32, pointer: *i32),
    gl_index_pointer(type: i32, stride: i32, pointer: *i32),
    gl_enable_client_state(array: i32),
    gl_edge_flag_pointer(stride: i32, pointer: *i32),
    gl_disable_client_state(array: i32),
    gl_color_pointer(size: GLint, type: i32, stride: i32, pointer: *i32),
    gl_array_element(i: GLint),
    gl_reset_minmax(target: i32),
    gl_reset_histogram(target: i32),
    gl_minmax(target: i32, internalformat: i32, sink: i32),
    gl_histogram(target: i32, width: i32, internalformat: i32, sink: i32),
    gl_get_minmax_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_get_minmax_parameterfv(target: i32, pname: i32, params: *i32),
    gl_get_minmax(target: i32, reset: i32, format: i32, type: i32, values: *i32),
    gl_get_histogram_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_get_histogram_parameterfv(target: i32, pname: i32, params: *i32),
    gl_get_histogram(target: i32, reset: i32, format: i32, type: i32, values: *i32),
    gl_separable_filter2_d(target: i32, internalformat: i32, width: i32, height: i32, format: i32, type: i32, row: *i32, column: *i32),
    gl_get_separable_filter(target: i32, format: i32, type: i32, row: *i32, column: *i32, span: *i32),
    gl_get_convolution_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_get_convolution_parameterfv(target: i32, pname: i32, params: *i32),
    gl_get_convolution_filter(target: i32, format: i32, type: i32, image: *i32),
    gl_copy_convolution_filter2_d(target: i32, internalformat: i32, x: GLint, y: GLint, width: i32, height: i32),
    gl_copy_convolution_filter1_d(target: i32, internalformat: i32, x: GLint, y: GLint, width: i32),
    gl_convolution_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_convolution_parameteri(target: i32, pname: i32, params: GLint),
    gl_convolution_parameterfv(target: i32, pname: i32, params: *i32),
    gl_convolution_parameterf(target: i32, pname: i32, params: i32),
    gl_convolution_filter2_d(target: i32, internalformat: i32, width: i32, height: i32, format: i32, type: i32, image: *i32),
    gl_convolution_filter1_d(target: i32, internalformat: i32, width: i32, format: i32, type: i32, image: *i32),
    gl_copy_color_sub_table(target: i32, start: i32, x: GLint, y: GLint, width: i32),
    gl_color_sub_table(target: i32, start: i32, count: i32, format: i32, type: i32, data: *i32),
    gl_get_color_table_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_get_color_table_parameterfv(target: i32, pname: i32, params: *i32),
    gl_get_color_table(target: i32, format: i32, type: i32, table: *i32),
    gl_copy_color_table(target: i32, internalformat: i32, x: GLint, y: GLint, width: i32),
    gl_color_table_parameteriv(target: i32, pname: i32, params: *GLint),
    gl_color_table_parameterfv(target: i32, pname: i32, params: *i32),
    gl_color_table(target: i32, internalformat: i32, width: i32, format: i32, type: i32, table: *i32),
    gl_multi_tex_coord4sv(target: i32, v: *i32),
    gl_multi_tex_coord4s(target: i32, s: i32, t: i32, r: i32, q: i32),
    gl_multi_tex_coord4iv(target: i32, v: *GLint),
    gl_multi_tex_coord4i(target: i32, s: GLint, t: GLint, r: GLint, q: GLint),
    gl_multi_tex_coord4fv(target: i32, v: *i32),
    gl_multi_tex_coord4f(target: i32, s: i32, t: i32, r: i32, q: i32),
    gl_multi_tex_coord4dv(target: i32, v: *i32),
    gl_multi_tex_coord4d(target: i32, s: i32, t: i32, r: i32, q: i32),
    gl_multi_tex_coord3sv(target: i32, v: *i32),
    gl_multi_tex_coord3s(target: i32, s: i32, t: i32, r: i32),
    gl_multi_tex_coord3iv(target: i32, v: *GLint),
    gl_multi_tex_coord3i(target: i32, s: GLint, t: GLint, r: GLint),
    gl_multi_tex_coord3fv(target: i32, v: *i32),
    gl_multi_tex_coord3f(target: i32, s: i32, t: i32, r: i32),
    gl_multi_tex_coord3dv(target: i32, v: *i32),
    gl_multi_tex_coord3d(target: i32, s: i32, t: i32, r: i32),
    gl_multi_tex_coord2sv(target: i32, v: *i32),
    gl_multi_tex_coord2s(target: i32, s: i32, t: i32),
    gl_multi_tex_coord2iv(target: i32, v: *GLint),
    gl_multi_tex_coord2i(target: i32, s: GLint, t: GLint),
    gl_multi_tex_coord2fv(target: i32, v: *i32),
    gl_multi_tex_coord2f(target: i32, s: i32, t: i32),
    gl_multi_tex_coord2dv(target: i32, v: *i32),
    gl_multi_tex_coord2d(target: i32, s: i32, t: i32),
    gl_multi_tex_coord1sv(target: i32, v: *i32),
    gl_multi_tex_coord1s(target: i32, s: i32),
    gl_multi_tex_coord1iv(target: i32, v: *GLint),
    gl_multi_tex_coord1i(target: i32, s: GLint),
    gl_multi_tex_coord1fv(target: i32, v: *i32),
    gl_multi_tex_coord1f(target: i32, s: i32),
    gl_multi_tex_coord1dv(target: i32, v: *i32),
    gl_multi_tex_coord1d(target: i32, s: i32),
    gl_client_active_texture(texture: i32),
    gl_window_pos3sv(v: *i32),
    gl_window_pos3s(x: i32, y: i32, z: i32),
    gl_window_pos3iv(v: *GLint),
    gl_window_pos3i(x: GLint, y: GLint, z: GLint),
    gl_window_pos3fv(v: *i32),
    gl_window_pos3f(x: i32, y: i32, z: i32),
    gl_window_pos3dv(v: *i32),
    gl_window_pos3d(x: i32, y: i32, z: i32),
    gl_window_pos2sv(v: *i32),
    gl_window_pos2s(x: i32, y: i32),
    gl_window_pos2iv(v: *GLint),
    gl_window_pos2i(x: GLint, y: GLint),
    gl_window_pos2fv(v: *i32),
    gl_window_pos2f(x: i32, y: i32),
    gl_window_pos2dv(v: *i32),
    gl_window_pos2d(x: i32, y: i32),
    gl_secondary_color_pointer(size: GLint, type: i32, stride: i32, pointer: *i32),
    gl_secondary_color3usv(v: *i32),
    gl_secondary_color3us(red: i32, green: i32, blue: i32),
    gl_secondary_color3uiv(v: *i32),
    gl_secondary_color3ui(red: i32, green: i32, blue: i32),
    gl_secondary_color3ubv(v: *i32),
    gl_secondary_color3ub(red: i32, green: i32, blue: i32),
    gl_secondary_color3sv(v: *i32),
    gl_secondary_color3s(red: i32, green: i32, blue: i32),
    gl_secondary_color3iv(v: *GLint),
    gl_secondary_color3i(red: GLint, green: GLint, blue: GLint),
    gl_secondary_color3fv(v: *i32),
    gl_secondary_color3f(red: i32, green: i32, blue: i32),
    gl_secondary_color3dv(v: *i32),
    gl_secondary_color3d(red: i32, green: i32, blue: i32),
    gl_secondary_color3bv(v: *i32),
    gl_secondary_color3b(red: i32, green: i32, blue: i32),
    gl_fog_coord_pointer(type: i32, stride: i32, pointer: *i32),
    gl_fog_coorddv(coord: *i32),
    gl_fog_coordd(coord: i32),
    gl_fog_coordfv(coord: *i32),
    gl_fog_coordf(coord: i32),
}

// vim: syntax=rust expandtab ts=4 sw=4
