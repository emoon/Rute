/// 
/// Native gesture events are generated by the operating system, typically by
/// interpreting touch events. Gesture events are high-level events such
/// as zoom or rotate.
/// 
/// * Event Type
/// * Description
/// * Touch sequence
/// 
/// * Qt::ZoomNativeGesture
/// * Magnification delta in percent.
/// * MacOS : Two-finger pinch.
/// 
/// * Qt::SmartZoomNativeGesture
/// * Boolean magnification state.
/// * MacOS : Two-finger douple tap (trackpad) / One-finger douple tap (magic mouse).
/// 
/// * Qt::RotateNativeGesture
/// * Rotation delta in degrees.
/// * MacOS : Two-finger rotate.
/// 
/// In addition, BeginNativeGesture and EndNativeGesture are sent before and after
/// gesture event streams:
/// 
/// BeginNativeGesture
/// ZoomNativeGesture
/// EndNativeGesture
/// 
/// **See also:** [`t::native_gesture_type()`]
/// [`GestureEvent`]
/// # Licence
///
/// The documentation is an adoption of the original [Qt Documentation](http://doc.qt.io/) and provided herein is licensed under the terms of the [GNU Free Documentation License version 1.3](http://www.gnu.org/licenses/fdl.html) as published by the Free Software Foundation.
struct NativeGestureEvent : InputEvent {
    /// 
    /// Returns the gesture type.
    gesture_type() -> Rute::NativeGestureType,
    /// 
    /// Returns the gesture value. The value should be interpreted based on the
    /// gesture type. For example, a Zoom gesture provides a scale factor while a Rotate
    /// gesture provides a rotation delta.
    /// 
    /// **See also:** [`NativeGestureEvent`]
    /// [`gesture_type()`]
    value() -> f32,
    /// 
    /// Returns the position of the mouse cursor, relative to the widget
    /// or item that received the event.
    pos() -> Point,
    /// 
    /// Returns the position of the gesture as a QPointF in screen coordinates
    global_pos() -> Point,
    /// 
    /// Returns the position of the gesture as a QPointF, relative to the
    /// widget or item that received the event.
    local_pos() -> PointF?,
    /// 
    /// Returns the position of the gesture as a QPointF, relative to the
    /// window that received the event.
    window_pos() -> PointF?,
    /// 
    /// Returns the position of the gesture as a QPointF in screen coordinates.
    screen_pos() -> PointF?,
    /// 
    /// Returns the device.
    device() -> TouchDevice?,
}

// vim: syntax=rust expandtab ts=4 sw=4
