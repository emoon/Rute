chunk = _{ SOI ~ (cpp_func_def | doc_start | skip_line)+ ~ EOI }
doc_start = { tag_start ~ (tags | name)* ~ tag_end }

tags = { abstract_tag | bad_code_tag | bold_tag | brief_tag | c_tag | caption_tag | class_tag |
		code_tag | codeline_tag | compat_tag | contentspage_tag | div_tag | dots_tag | else_tag |
		emphasis_tag | endif_tag | endlist_tag | enum_tag | example_tag | externalpage_tag |
		footnote_tag | function_tag | generatelist_tag | group_tag | header_tag | headerfile_tag |
		i_tag | if_tag | image_tag | include_tag | indexpage_tag | ingroup_tag | inherits_tag |
		inlineimage_tag | inmodule_tag | inqmlmodule_tag | instantiates_tag | internal_tag |
		keyword_tag | l_tag | legalese_tag | li_tag | list_tag | macro_tag | meta_tag |
		module_tag | namespace_tag | newcode_tag | nextpage_tag | noautolist_tag | nonreentrant_tag |
		note_tag | o_tag | obsolete_tag | oldcode_tag | omit_tag | omitvalue_tag | overload_tag |
		page_tag | parameter_tag | preliminary_tag | previouspage_tag | printline_tag | printto_tag |
		printuntil_tag | property_tag | qml_tag | qmlabstract_tag | qmlattachedproperty_tag |
		qmlattachedsignal_tag | qmlbasictype_tag | qmlclass_tag | qmlmethod_tag | qmlmodule_tag |
		qmlproperty_tag | qmlsignal_tag | qmltype_tag | quotation_tag | quotefile_tag |
		quotefromfile_tag | raw_tag | reentrant_tag | reimp_tag | relates_tag |
		row_tag | sa_tag | section1_tag | section2_tag | section3_tag | section4_tag |
		since_tag | skipline_tag | skipto_tag | skipuntil_tag | snippet_tag | span_tag |
		startpage_tag | sub_tag | subtitle_tag | sup_tag | table_tag | tableofcontents_tag |
		target_tag | threadsafe_tag | title_tag | tt_tag | typedef_tag | uicontrol_tag |
		underline_tag | value_tag | variable_tag | warning_tag }

// Tags
tag_start = { ("/*!") }
tag_end = { ("*/") }
separator = { (",") }
cpp_arg_list = { (!(")") ~ ANY)* }
skip_until_block = { (!("{") ~ ANY)* }
cpp_func_def = { (cpp_type ~ cpp_name | cpp_name) ~ ("(") ~ cpp_arg_list? ~ (")") ~ skip_until_block? ~ cpp_body }

// QDoc tags
abstract_tag = { ("\\abstract") ~ name }
bad_code_tag = { ("\\badcode") }
bold_tag = { ("\\b" | ("\\bold")) ~ whole_line } // notice whole line is incorrect. Not sure how to handle it
brief_tag = { ("\\brief") ~ whole_line }
c_tag = { ("\\c") ~ name }
caption_tag = { ("\\caption") ~ whole_line }
class_tag = { ("\\class") ~ name }
code_tag = { ("\\code") }
codeline_tag = { ("\\codeline") }
compat_tag = { ("\\compat") }
contentspage_tag = { ("\\contentspage") ~ name }
div_tag = { ("\\div") }
dots_tag = { ("\\dots") }
else_tag = { ("\\else") ~ name }
emphasis_tag = { ("\\e") ~ name }
endif_tag = { ("\\endif") ~ name }
endlist_tag = { ("\\endlist") }
enum_tag = { ("\\endif") ~ whole_line }
example_tag = { ("\\example") ~ whole_line }
externalpage_tag = { ("\\external") ~ whole_line }
footnote_tag = { ("\\footnote") }
function_tag = { ("\\fn") ~ whole_line }
generatelist_tag = { ("\\generatelist") }
group_tag = { ("\\group") }
header_tag = { ("\\header") }
headerfile_tag = { ("\\headerfile") }
i_tag = { ("\\i") }
if_tag = { ("\\if") }
image_tag = { ("\\image") ~ whole_line }
include_tag = { ("\\include") }
indexpage_tag = { ("\\indexpage") }
ingroup_tag = { ("\\ingroup") ~ name }
inherits_tag = { ("\\inherits") }
inlineimage_tag = { ("\\inlineimage") }
inmodule_tag = { ("\\inmodule") ~ name }
inqmlmodule_tag = { ("\\inqmlmodule") }
instantiates_tag = { ("\\instantiates") }
internal_tag = { ("\\internal") }
keyword_tag = { ("\\keyword") }
l_tag = { ("\\l") }
legalese_tag = { ("\\legalese") }
li_tag = { ("\\li") ~ namelist }
list_tag = { ("\\list") ~ name }
macro_tag = { ("\\macro") }
meta_tag = { ("\\meta") }
module_tag = { ("\\module") }
namespace_tag = { ("\\namespace") }
newcode_tag = { ("\\newcode") }
nextpage_tag = { ("\\nextpage") }
noautolist_tag = { ("\\noautolist") }
nonreentrant_tag = { ("\\nonreentrant") }
note_tag = { ("\\note") ~ whole_line }
o_tag = { ("\\o") }
obsolete_tag = { ("\\obsolete") }
oldcode_tag = { ("\\oldcode") }
omit_tag = { ("\\omit") }
omitvalue_tag = { ("\\omitvalue") }
overload_tag = { ("\\overload") }
page_tag = { ("\\page") }
parameter_tag = { ("\\a") ~ name }
preliminary_tag = { ("\\preliminary") }
previouspage_tag = { ("\\previouspage") }
printline_tag = { ("\\printline") }
printto_tag = { ("\\printto") }
printuntil_tag = { ("\\printuntil") }
property_tag = { ("\\property") ~ name }
qml_tag = { ("\\qml") }
qmlabstract_tag = { ("\\qmlabstract") }
qmlattachedproperty_tag = { ("\\qmlattachedproperty") }
qmlattachedsignal_tag = { ("\\qmlattachedsignal") }
qmlbasictype_tag = { ("\\qmlbasictype") }
qmlclass_tag = { ("\\qmlclass") }
qmlmethod_tag = { ("\\qmlmethod") }
qmlmodule_tag = { ("\\qmlmodule") }
qmlproperty_tag = { ("\\qmlproperty") }
qmlsignal_tag = { ("\\qmlsignal") }
qmltype_tag = { ("\\qmltype") }
quotation_tag = { ("\\quotation") }
quotefile_tag = { ("\\quotefile") }
quotefromfile_tag = { ("\\quotefromfile") }
raw_tag = { ("\\raw") }
reentrant_tag = { ("\\reentrant") }
reimp_tag = { ("\\reimp") }
relates_tag = { ("\\relates") }
row_tag = { ("\\row") }
sa_tag = { ("\\sa") ~ namelist }
section1_tag = { ("\\section1") }
section2_tag = { ("\\section2") }
section3_tag = { ("\\section3") }
section4_tag = { ("\\section4") }
since_tag = { ("\\since") }
skipline_tag = { ("\\skipline") }
skipto_tag = { ("\\skipto") }
skipuntil_tag = { ("\\skipuntil") }
snippet_tag = { ("\\snippet") ~ whole_line }
span_tag = { ("\\span") }
startpage_tag = { ("\\startpage") }
sub_tag = { ("\\sub") }
subtitle_tag = { ("\\subtitle") }
sup_tag = { ("\\sup") }
table_tag = { ("\\table") }
tableofcontents_tag = { ("\\tableofcontents") }
target_tag = { ("\\target") }
threadsafe_tag = { ("\\threadsafe") }
title_tag = { ("\\title") }
tt_tag = { ("\\tt") }
typedef_tag = { ("\\typedef") }
uicontrol_tag = { ("\\uicontrol") }
underline_tag = { ("\\underline") }
value_tag = { ("\\value") }
variable_tag = { ("\\variable") }
warning_tag = { ("\\warning") }

// Namelist and various other tags

namelist = { (name)* }

name = @{
	(('a'..'z') | ('A'..'Z') | ("_") | ("\"") | (",") | (":") | ('0'..'9') | ("{") | ("}") | (" ") | ("(") | (")") | ("+") | ("#") | ("&") | ("'") | (";")) ~
	(('a'..'z') | ('A'..'Z') | ("_") | (".") | ("-") | ("(") | (")") | ('0'..'9'))*
}

cpp_name = @{
	(('a'..'z') | ('A'..'Z') | ("_")) ~ (('a'..'z') | ('A'..'Z') | ("::") | ("_") | ('0'..'9') | ("*") | ("&"))*
}

cpp_type = { cpp_name }

cpp_body = _{ "{" ~ ( cpp_body | (!"}" ~ ANY) )* ~ "}" }

whole_line = @{ (!NEWLINE ~ ANY)* }
skip_line = @{ (!NEWLINE ~ ANY)+ }

WHITESPACE = _{ "\t" | "\r" | "\n"  | " " }

